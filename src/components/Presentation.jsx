import { useState, useEffect } from 'react'
import ReactTheoryPresentation from './theory/ReactTheoryPresentation.jsx'
import UseStateDemo from './base-hook/UseStateDemo.jsx'
import UseEffectDemo from './base-hook/UseEffectDemo.jsx'
import UseContextDemo from './base-hook/UseContextDemo.jsx'
import UseReducerDemo from './extra-hook/UseReducerDemo.jsx'
import UseMemoCallbackDemo from './extra-hook/UseMemoCallbackDemo.jsx'
import UseRefDemo from './extra-hook/UseRefDemo.jsx'
import UseDeferredValueDemo from './react18-hook/UseDeferredValueDemo.jsx'
import UseTransitionDemo from './react18-hook/UseTransitionDemo.jsx'
import UseIdDemo from './react18-hook/UseIdDemo.jsx'
import UseSyncExternalStoreDemo from './react18-hook/UseSyncExternalStoreDemo.jsx'
import UseInsertionEffectDemo from './react18-hook/UseInsertionEffectDemo.jsx'
import UseDemo from './react19-hook/UseDemo.jsx'
import UseOptimisticDemo from './react19-hook/UseOptimisticDemo.jsx'
import UseActionStateDemo from './react19-hook/UseActionStateDemo.jsx'
import UseFormStatusDemo from './react19-hook/UseFormStatusDemo.jsx'

// –°–ª–∞–π–¥ –≤–≤–µ–¥–µ–Ω–∏—è
function IntroSlide() {
    const [animationStep, setAnimationStep] = useState(0);

    useEffect(() => {
        const timer = setInterval(() => {
            setAnimationStep(prev => (prev + 1) % 4);
        }, 2000);

        return () => clearInterval(timer);
    }, []);

    const features = [
        'üéØ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º',
        '‚ö° –ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã',
        'üîÑ –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö',
        'üöÄ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'
    ];

    return (
        <div style={{ textAlign: 'center', padding: '40px 0' }}>
            <h2 style={{ fontSize: '2.5em', marginBottom: '30px', color: '#21569c' }}>
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä React 19 Hooks!
            </h2>

            <div style={{
                background: 'linear-gradient(135deg, #61dafb 0%, #21569c 100%)',
                borderRadius: '20px',
                padding: '30px',
                color: 'white',
                marginBottom: '30px'
            }}>
                <h3 style={{ marginTop: 0 }}>–ß—Ç–æ —Ç–∞–∫–æ–µ —Ö—É–∫–∏?</h3>
                <p style={{ fontSize: '1.2em', lineHeight: '1.6' }}>
                    React Hooks ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç "–ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è" –∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º React
                    (—Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª) –∏–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
                </p>
            </div>

            <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
                gap: '20px',
                marginBottom: '30px'
            }}>
                {features.map((feature, index) => (
                    <div
                        key={index}
                        style={{
                            background: index === animationStep ? '#e3f2fd' : '#f8f9fa',
                            border: index === animationStep ? '2px solid #2196f3' : '2px solid #e9ecef',
                            borderRadius: '15px',
                            padding: '20px',
                            transform: index === animationStep ? 'scale(1.05)' : 'scale(1)',
                            transition: 'all 0.3s ease',
                            fontSize: '1.1em'
                        }}
                    >
                        {feature}
                    </div>
                ))}
            </div>

            <div style={{
                background: '#fff3cd',
                border: '1px solid #ffeaa7',
                borderRadius: '10px',
                padding: '20px',
                marginBottom: '20px'
            }}>
                <h4 style={{ marginTop: 0 }}>–í —ç—Ç–æ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –≤—ã –∏–∑—É—á–∏—Ç–µ:</h4>
                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr 1fr', gap: '15px', textAlign: 'left', fontSize: '0.95em' }}>
                    <div>
                        <h5 style={{ color: '#21569c', marginBottom: '10px' }}>üéØ –ë–∞–∑–æ–≤—ã–µ —Ö—É–∫–∏:</h5>
                        <ul style={{ fontSize: '1em', paddingLeft: '18px' }}>
                            <li><strong>useState</strong> ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º</li>
                            <li><strong>useEffect</strong> ‚Äî –ø–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã</li>
                            <li><strong>useContext</strong> ‚Äî –ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö</li>
                        </ul>
                    </div>
                    <div>
                        <h5 style={{ color: '#21569c', marginBottom: '10px' }}>‚ö° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏:</h5>
                        <ul style={{ fontSize: '1em', paddingLeft: '18px' }}>
                            <li><strong>useReducer</strong> ‚Äî —Å–ª–æ–∂–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</li>
                            <li><strong>useMemo/useCallback</strong> ‚Äî –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</li>
                            <li><strong>useRef</strong> ‚Äî —Å—Å—ã–ª–∫–∏ –Ω–∞ DOM</li>
                        </ul>
                    </div>
                    <div>
                        <h5 style={{ color: '#21569c', marginBottom: '10px' }}>üöÄ React 18+ —Ö—É–∫–∏:</h5>
                        <ul style={{ fontSize: '1em', paddingLeft: '18px' }}>
                            <li><strong>useDeferredValue</strong> ‚Äî –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</li>
                            <li><strong>useTransition</strong> ‚Äî –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
                            <li><strong>useId</strong> ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID</li>
                            <li><strong>useSyncExternalStore</strong> ‚Äî –≤–Ω–µ—à–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞</li>
                            <li><strong>useInsertionEffect</strong> ‚Äî –≤—Å—Ç–∞–≤–∫–∞ —Å—Ç–∏–ª–µ–π</li>
                        </ul>
                    </div>
                    <div>
                        <h5 style={{ color: '#21569c', marginBottom: '10px' }}>üíé React 19+ —Ö—É–∫–∏:</h5>
                        <ul style={{ fontSize: '1em', paddingLeft: '18px' }}>
                            <li><strong>use</strong> ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ö—É–∫</li>
                            <li><strong>useOptimistic</strong> ‚Äî –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
                            <li><strong>useActionState</strong> ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞–º–∏</li>
                            <li><strong>useFormStatus</strong> ‚Äî —Å—Ç–∞—Ç—É—Å —Ñ–æ—Ä–º—ã</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div style={{ fontSize: '1.1em', color: '#666' }}>
                <p>üìù –ö–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã</p>
                <p>üí° –í—ã –º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –¥–µ–º–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
                <p>üîß –ò–∑—É—á–∏—Ç–µ –∫–æ–¥ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç —Ö—É–∫–∏ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ</p>
            </div>
        </div>
    );
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ë–∞–∑–æ–≤—ã–µ —Ö—É–∫–∏"
function BasicHooksPage({ goToSlide }) {
    const hooks = [
        { index: 2, title: 'useState', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞', items: ['–°—á–µ—Ç—á–∏–∫–∏', '–§–æ—Ä–º—ã –≤–≤–æ–¥–∞', '–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏'] },
        { index: 3, title: 'useEffect', description: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤', items: ['API –∑–∞–ø—Ä–æ—Å—ã', '–ü–æ–¥–ø–∏—Å–∫–∏', '–¢–∞–π–º–µ—Ä—ã'] },
        { index: 4, title: 'useContext', description: '–ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –¥–µ—Ä–µ–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤', items: ['–¢–µ–º—ã', '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è'] }
    ];

    return (
        <div style={{ textAlign: 'center', padding: '40px 0' }}>
            <h2 style={{ fontSize: '2.5em', marginBottom: '30px', color: '#21569c' }}>
                üéØ –ë–∞–∑–æ–≤—ã–µ —Ö—É–∫–∏ React 19
            </h2>

            {/* –¢–∞–±—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ö—É–∫–∞ */}
            <div style={{
                display: 'flex',
                gap: '10px',
                justifyContent: 'center',
                marginBottom: '30px',
                flexWrap: 'wrap'
            }}>
                {hooks.map(hook => (
                    <button
                        key={hook.index}
                        className="nav-btn"
                        onClick={() => goToSlide(hook.index)}
                        style={{
                            background: '#2196f3',
                            color: 'white',
                            fontSize: '1.1em',
                            padding: '12px 24px'
                        }}
                    >
                        {hook.title}
                    </button>
                ))}
            </div>

            <div style={{
                background: 'linear-gradient(135deg, #61dafb 0%, #21569c 100%)',
                borderRadius: '20px',
                padding: '30px',
                color: 'white',
                marginBottom: '30px'
            }}>
                <h3 style={{ marginTop: 0 }}>–ß—Ç–æ —Ç–∞–∫–æ–µ –±–∞–∑–æ–≤—ã–µ —Ö—É–∫–∏?</h3>
                <p style={{ fontSize: '1.2em', lineHeight: '1.6' }}>
                    –ë–∞–∑–æ–≤—ã–µ —Ö—É–∫–∏ ‚Äî —ç—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã React, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è
                    –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –ø–æ–±–æ—á–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏.
                </p>
            </div>

            <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
                gap: '20px',
                marginBottom: '30px'
            }}>
                {hooks.map(hook => (
                    <div
                        key={hook.index}
                        style={{
                            background: '#e3f2fd',
                            border: '2px solid #2196f3',
                            borderRadius: '15px',
                            padding: '20px',
                            textAlign: 'left',
                            cursor: 'pointer',
                            transition: 'transform 0.2s',
                        }}
                        onClick={() => goToSlide(hook.index)}
                        onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.05)'}
                        onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
                    >
                        <h3 style={{ color: '#21569c', marginTop: 0 }}>{hook.title}</h3>
                        <p style={{ fontSize: '1.1em' }}>{hook.description}</p>
                        <ul>
                            {hook.items.map((item, idx) => (
                                <li key={idx}>{item}</li>
                            ))}
                        </ul>
                    </div>
                ))}
            </div>

            <div style={{
                background: '#fff3cd',
                border: '1px solid #ffeaa7',
                borderRadius: '10px',
                padding: '20px',
                fontSize: '1.1em'
            }}>
                üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ö—É–∫ –∏–∑ –≤–∫–ª–∞–¥–æ–∫ –≤—ã—à–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã!
            </div>
        </div>
    );
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏"
function AdditionalHooksPage({ goToSlide }) {
    const hooks = [
        { index: 6, title: 'useReducer', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º', items: ['–°–ª–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º—ã', '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è', '–°–≤—è–∑–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ'] },
        { index: 7, title: 'useMemo/useCallback', description: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', items: ['–ú–µ–º–æ–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π', '–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π', '–ò–∑–±–µ–∂–∞–Ω–∏–µ —Ä–µ-—Ä–µ–Ω–¥–µ—Ä–æ–≤'] },
        { index: 8, title: 'useRef', description: '–†–∞–±–æ—Ç–∞ —Å —Å—Å—ã–ª–∫–∞–º–∏ –∏ DOM', items: ['–î–æ—Å—Ç—É–ø –∫ DOM', '–•—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π', '–§–æ–∫—É—Å —ç–ª–µ–º–µ–Ω—Ç–æ–≤'] }
    ];

    return (
        <div style={{ textAlign: 'center', padding: '40px 0' }}>
            <h2 style={{ fontSize: '2.5em', marginBottom: '30px', color: '#21569c' }}>
                ‚ö° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏ React 19
            </h2>

            {/* –¢–∞–±—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ö—É–∫–∞ */}
            <div style={{
                display: 'flex',
                gap: '10px',
                justifyContent: 'center',
                marginBottom: '30px',
                flexWrap: 'wrap'
            }}>
                {hooks.map(hook => (
                    <button
                        key={hook.index}
                        className="nav-btn"
                        onClick={() => goToSlide(hook.index)}
                        style={{
                            background: '#ff6b6b',
                            color: 'white',
                            fontSize: '1.1em',
                            padding: '12px 24px'
                        }}
                    >
                        {hook.title}
                    </button>
                ))}
            </div>

            <div style={{
                background: 'linear-gradient(135deg, #ff6b6b 0%, #ee5a6f 100%)',
                borderRadius: '20px',
                padding: '30px',
                color: 'white',
                marginBottom: '30px'
            }}>
                <h3 style={{ marginTop: 0 }}>–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏?</h3>
                <p style={{ fontSize: '1.2em', lineHeight: '1.6' }}>
                    –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏ ‚Äî —ç—Ç–æ –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                    –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ª–æ–∂–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
                </p>
            </div>

            <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
                gap: '20px',
                marginBottom: '30px'
            }}>
                {hooks.map(hook => (
                    <div
                        key={hook.index}
                        style={{
                            background: '#ffe3e3',
                            border: '2px solid #ff6b6b',
                            borderRadius: '15px',
                            padding: '20px',
                            textAlign: 'left',
                            cursor: 'pointer',
                            transition: 'transform 0.2s',
                        }}
                        onClick={() => goToSlide(hook.index)}
                        onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.05)'}
                        onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
                    >
                        <h3 style={{ color: '#c92a2a', marginTop: 0 }}>{hook.title}</h3>
                        <p style={{ fontSize: '1.1em' }}>{hook.description}</p>
                        <ul>
                            {hook.items.map((item, idx) => (
                                <li key={idx}>{item}</li>
                            ))}
                        </ul>
                    </div>
                ))}
            </div>

            <div style={{
                background: '#fff3cd',
                border: '1px solid #ffeaa7',
                borderRadius: '10px',
                padding: '20px',
                fontSize: '1.1em'
            }}>
                üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ö—É–∫ –∏–∑ –≤–∫–ª–∞–¥–æ–∫ –≤—ã—à–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã!
            </div>
        </div>
    );
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "React 18+ —Ö—É–∫–∏"
function React18PlusHooksPage({ goToSlide }) {
    const hooks = [
        { index: 10, title: 'useDeferredValue', description: '–û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI', items: ['–ü–æ–∏—Å–∫ –≤ —Å–ø–∏—Å–∫–∞—Ö', '–¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è', '–ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥'] },
        { index: 11, title: 'useTransition', description: '–ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è', items: ['–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫', '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è', '–ù–∞–≤–∏–≥–∞—Ü–∏—è'] },
        { index: 12, title: 'useId', description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID', items: ['–§–æ—Ä–º—ã', 'Accessibility', 'SSR-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'] },
        { index: 13, title: 'useSyncExternalStore', description: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏', items: ['Browser APIs', '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è', 'WebSocket'] },
        { index: 14, title: 'useInsertionEffect', description: '–í—Å—Ç–∞–≤–∫–∞ —Å—Ç–∏–ª–µ–π –ø–µ—Ä–µ–¥ layout', items: ['CSS-in-JS', '–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è'] }
    ];

    return (
        <div style={{ textAlign: 'center', padding: '40px 0' }}>
            <h2 style={{ fontSize: '2.5em', marginBottom: '30px', color: '#21569c' }}>
                üöÄ React 18+ —Ö—É–∫–∏
            </h2>

            {/* –¢–∞–±—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ö—É–∫–∞ */}
            <div style={{
                display: 'flex',
                gap: '10px',
                justifyContent: 'center',
                marginBottom: '30px',
                flexWrap: 'wrap'
            }}>
                {hooks.map(hook => (
                    <button
                        key={hook.index}
                        className="nav-btn"
                        onClick={() => goToSlide(hook.index)}
                        style={{
                            background: '#10b981',
                            color: 'white',
                            fontSize: '1.1em',
                            padding: '12px 24px'
                        }}
                    >
                        {hook.title}
                    </button>
                ))}
            </div>

            <div style={{
                background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',
                borderRadius: '20px',
                padding: '30px',
                color: 'white',
                marginBottom: '30px'
            }}>
                <h3 style={{ marginTop: 0 }}>–ß—Ç–æ —Ç–∞–∫–æ–µ React 18+ —Ö—É–∫–∏?</h3>
                <p style={{ fontSize: '1.2em', lineHeight: '1.6' }}>
                    –≠—Ç–æ –Ω–æ–≤—ã–µ —Ö—É–∫–∏, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ React 18 –∏ –ø–æ–∑–∂–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
                    –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Ä–∞–±–æ—Ç—ã —Å –≤–Ω–µ—à–Ω–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞.
                </p>
            </div>

            <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
                gap: '20px',
                marginBottom: '30px'
            }}>
                {hooks.map(hook => (
                    <div
                        key={hook.index}
                        style={{
                            background: '#d1fae5',
                            border: '2px solid #10b981',
                            borderRadius: '15px',
                            padding: '20px',
                            textAlign: 'left',
                            cursor: 'pointer',
                            transition: 'transform 0.2s',
                        }}
                        onClick={() => goToSlide(hook.index)}
                        onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.05)'}
                        onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
                    >
                        <h3 style={{ color: '#047857', marginTop: 0 }}>{hook.title}</h3>
                        <p style={{ fontSize: '1.1em' }}>{hook.description}</p>
                        <ul>
                            {hook.items.map((item, idx) => (
                                <li key={idx}>{item}</li>
                            ))}
                        </ul>
                    </div>
                ))}
            </div>

            <div style={{
                background: '#fff3cd',
                border: '1px solid #ffeaa7',
                borderRadius: '10px',
                padding: '20px',
                fontSize: '1.1em'
            }}>
                üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ö—É–∫ –∏–∑ –≤–∫–ª–∞–¥–æ–∫ –≤—ã—à–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã!
            </div>
        </div>
    );
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "React 19+ —Ö—É–∫–∏"
function React19PlusHooksPage({ goToSlide }) {
    const hooks = [
        {
            index: 16,
            title: 'use',
            description: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ö—É–∫ –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤',
            items: [
                'üì¶ –ß–∏—Ç–∞–µ—Ç Promise –∏ Context',
                'üîÄ –ú–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å —É—Å–ª–æ–≤–Ω–æ',
                '‚ö° –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Suspense',
                'üéØ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π API'
            ],
            gradient: 'linear-gradient(135deg, #a855f7 0%, #8b5cf6 100%)'
        },
        {
            index: 17,
            title: 'useOptimistic',
            description: '–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI',
            items: [
                '‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å',
                'üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç',
                'üí¨ –ß–∞—Ç—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏',
                '‚ù§Ô∏è –õ–∞–π–∫–∏ –∏ —Ä–µ–∞–∫—Ü–∏–∏'
            ],
            gradient: 'linear-gradient(135deg, #c084fc 0%, #a855f7 100%)'
        },
        {
            index: 18,
            title: 'useActionState',
            description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ñ–æ—Ä–º',
            items: [
                'üìù –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º',
                '‚è≥ isPending –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä',
                'üîÑ Server Actions',
                '‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –æ—à–∏–±–∫–∏'
            ],
            gradient: 'linear-gradient(135deg, #d8b4fe 0%, #c084fc 100%)'
        },
        {
            index: 19,
            title: 'useFormStatus',
            description: '–°—Ç–∞—Ç—É—Å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ–æ—Ä–º—ã',
            items: [
                'üìä –°—Ç–∞—Ç—É—Å —Ñ–æ—Ä–º—ã',
                'üë∂ –î–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤',
                'üîò UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã',
                'üéØ –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–Ω–æ–ø–∫–∏'
            ],
            gradient: 'linear-gradient(135deg, #e9d5ff 0%, #d8b4fe 100%)'
        }
    ];

    return (
        <div style={{
            display: 'flex',
            flexDirection: 'column',
            height: '100%',
            padding: '40px 50px',
            background: 'linear-gradient(135deg, #1e1b4b 0%, #312e81 100%)'
        }}>
            <h2 style={{
                color: '#e9d5ff',
                fontSize: '2.5em',
                marginBottom: '15px',
                textAlign: 'center'
            }}>
                üíé React 19+ —Ö—É–∫–∏
            </h2>

            <p style={{
                color: '#c4b5fd',
                fontSize: '1.2em',
                textAlign: 'center',
                marginBottom: '40px'
            }}>
                –ù–æ–≤—ã–µ —Ö—É–∫–∏ React 19 –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            </p>

            <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(2, 1fr)',
                gap: '25px',
                flex: 1
            }}>
                {hooks.map(hook => (
                    <div
                        key={hook.index}
                        onClick={() => goToSlide(hook.index)}
                        style={{
                            background: hook.gradient,
                            padding: '30px',
                            borderRadius: '20px',
                            cursor: 'pointer',
                            transition: 'all 0.3s ease',
                            boxShadow: '0 10px 30px rgba(168, 85, 247, 0.3)',
                            display: 'flex',
                            flexDirection: 'column',
                            justifyContent: 'space-between'
                        }}
                        onMouseEnter={(e) => {
                            e.currentTarget.style.transform = 'translateY(-5px)';
                            e.currentTarget.style.boxShadow = '0 15px 40px rgba(168, 85, 247, 0.5)';
                        }}
                        onMouseLeave={(e) => {
                            e.currentTarget.style.transform = 'translateY(0)';
                            e.currentTarget.style.boxShadow = '0 10px 30px rgba(168, 85, 247, 0.3)';
                        }}
                    >
                        <div>
                            <h3 style={{
                                color: 'white',
                                fontSize: '1.8em',
                                marginBottom: '10px',
                                fontWeight: 'bold'
                            }}>
                                {hook.title}
                            </h3>
                            <p style={{
                                color: 'rgba(255, 255, 255, 0.9)',
                                fontSize: '1.1em',
                                marginBottom: '20px'
                            }}>
                                {hook.description}
                            </p>
                        </div>

                        <ul style={{
                            listStyle: 'none',
                            padding: 0,
                            margin: 0,
                            fontSize: '1em',
                            color: 'rgba(255, 255, 255, 0.95)'
                        }}>
                            {hook.items.map((item, i) => (
                                <li key={i} style={{ marginBottom: '8px' }}>
                                    {item}
                                </li>
                            ))}
                        </ul>
                    </div>
                ))}
            </div>

            <div style={{
                marginTop: '30px',
                textAlign: 'center',
                color: '#c4b5fd',
                fontSize: '0.9em',
                padding: '15px',
                background: 'rgba(168, 85, 247, 0.1)',
                borderRadius: '10px'
            }}>
                üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ö—É–∫ –∏–∑ –≤–∫–ª–∞–¥–æ–∫ –≤—ã—à–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã!
            </div>
        </div>
    );
}

// –°–ª–∞–π–¥ –∑–∞–∫–ª—é—á–µ–Ω–∏—è
function SummarySlide() {
    const [checkedItems, setCheckedItems] = useState({});

    const concepts = [
        // –ë–∞–∑–æ–≤—ã–µ —Ö—É–∫–∏
        {
            id: 'useState',
            title: 'useState',
            category: 'basic',
            description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞',
            examples: ['–°—á–µ—Ç—á–∏–∫–∏', '–§–æ—Ä–º—ã', '–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏', '–°–ø–∏—Å–∫–∏']
        },
        {
            id: 'useEffect',
            title: 'useEffect',
            category: 'basic',
            description: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤',
            examples: ['API –∑–∞–ø—Ä–æ—Å—ã', '–ü–æ–¥–ø–∏—Å–∫–∏', '–¢–∞–π–º–µ—Ä—ã', 'DOM –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏']
        },
        {
            id: 'useContext',
            title: 'useContext',
            category: 'basic',
            description: '–ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –¥–µ—Ä–µ–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤',
            examples: ['–¢–µ–º—ã', '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', '–õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è']
        },
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏
        {
            id: 'useReducer',
            title: 'useReducer',
            category: 'additional',
            description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º',
            examples: ['–°–ª–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º—ã', '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è', '–°–≤—è–∑–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ', 'State machine']
        },
        {
            id: 'useRef',
            title: 'useRef',
            category: 'additional',
            description: '–†–∞–±–æ—Ç–∞ —Å —Å—Å—ã–ª–∫–∞–º–∏ –∏ DOM',
            examples: ['–î–æ—Å—Ç—É–ø –∫ DOM', '–•—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π', '–§–æ–∫—É—Å —ç–ª–µ–º–µ–Ω—Ç–æ–≤', '–ü—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è']
        },
        {
            id: 'useMemo',
            title: 'useMemo/useCallback',
            category: 'additional',
            description: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            examples: ['–ú–µ–º–æ–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π', '–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π', '–ò–∑–±–µ–∂–∞–Ω–∏–µ —Ä–µ-—Ä–µ–Ω–¥–µ—Ä–æ–≤', '–¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è']
        },
        // React 18+ —Ö—É–∫–∏
        {
            id: 'useDeferredValue',
            title: 'useDeferredValue',
            category: 'react18',
            description: '–û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI',
            examples: ['–ü–æ–∏—Å–∫', '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è', '–¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è', '–ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥']
        },
        {
            id: 'useTransition',
            title: 'useTransition',
            category: 'react18',
            description: '–ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è',
            examples: ['–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫', '–ù–∞–≤–∏–≥–∞—Ü–∏—è', '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è', '–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä isPending']
        },
        {
            id: 'useId',
            title: 'useId',
            category: 'react18',
            description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID',
            examples: ['–§–æ—Ä–º—ã', 'Accessibility', 'SSR-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–°–≤—è–∑—å label-input']
        },
        {
            id: 'useSyncExternalStore',
            title: 'useSyncExternalStore',
            category: 'react18',
            description: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö',
            examples: ['Browser APIs', '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è', 'WebSocket', 'Redux/MobX']
        },
        {
            id: 'useInsertionEffect',
            title: 'useInsertionEffect',
            category: 'react18',
            description: '–í—Å—Ç–∞–≤–∫–∞ —Å—Ç–∏–ª–µ–π –ø–µ—Ä–µ–¥ layout',
            examples: ['CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫–∏', '–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏']
        },
        // React 19+ —Ö—É–∫–∏
        {
            id: 'use',
            title: 'use',
            category: 'react19',
            description: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ö—É–∫ –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤',
            examples: ['Promise', 'Context', '–£—Å–ª–æ–≤–Ω—ã–µ –≤—ã–∑–æ–≤—ã', 'Server Components']
        },
        {
            id: 'useOptimistic',
            title: 'useOptimistic',
            category: 'react19',
            description: '–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI',
            examples: ['–ß–∞—Ç—ã', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏', '–õ–∞–π–∫–∏', '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å']
        },
        {
            id: 'useActionState',
            title: 'useActionState',
            category: 'react19',
            description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ñ–æ—Ä–º',
            examples: ['–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', '–õ–æ–≥–∏–Ω', 'Server Actions', 'FormData API']
        },
        {
            id: 'useFormStatus',
            title: 'useFormStatus',
            category: 'react19',
            description: '–°—Ç–∞—Ç—É—Å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ–æ—Ä–º—ã',
            examples: ['–ö–Ω–æ–ø–∫–∏ submit', '–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏', '–ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã']
        }
    ];

    const toggleCheck = (id) => {
        setCheckedItems(prev => ({
            ...prev,
            [id]: !prev[id]
        }));
    };

    const allChecked = concepts.every(concept => checkedItems[concept.id]);

    return (
        <div>
            <h2 style={{ textAlign: 'center', color: '#21569c', marginBottom: '30px' }}>
                üéì –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∏–∑—É—á–∏–ª–∏ —Ö—É–∫–∏ React 19
            </h2>

            <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',
                gap: '20px',
                marginBottom: '30px'
            }}>
                {concepts.map(concept => (
                    <div
                        key={concept.id}
                        style={{
                            background: checkedItems[concept.id] ? '#e8f5e8' : '#f8f9fa',
                            border: `2px solid ${checkedItems[concept.id] ? '#4caf50' : '#e9ecef'}`,
                            borderRadius: '15px',
                            padding: '20px',
                            transition: 'all 0.3s ease'
                        }}
                    >
                        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '15px' }}>
                            <input
                                type="checkbox"
                                checked={checkedItems[concept.id] || false}
                                onChange={() => toggleCheck(concept.id)}
                                style={{ marginRight: '10px', transform: 'scale(1.2)' }}
                            />
                            <h3 style={{ margin: 0, color: '#21569c' }}>
                                {concept.title}
                            </h3>
                        </div>

                        <p style={{ marginBottom: '15px', fontSize: '1.1em' }}>
                            {concept.description}
                        </p>

                        <div>
                            <strong>–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</strong>
                            <ul style={{ marginTop: '8px' }}>
                                {concept.examples.map((example, index) => (
                                    <li key={index}>{example}</li>
                                ))}
                            </ul>
                        </div>
                    </div>
                ))}
            </div>

            {allChecked && (
                <div style={{
                    background: 'linear-gradient(135deg, #4caf50 0%, #81c784 100%)',
                    color: 'white',
                    borderRadius: '15px',
                    padding: '20px',
                    textAlign: 'center',
                    marginBottom: '20px',
                    animation: 'pulse 2s infinite'
                }}>
                    <h3 style={{ margin: '0 0 10px' }}>üéâ –û—Ç–ª–∏—á–Ω–æ! –í—ã –æ—Å–≤–æ–∏–ª–∏ –≤—Å–µ —Ö—É–∫–∏ –∏–∑ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏!</h3>
                    <p style={{ margin: 0, fontSize: '1.1em' }}>
                        –¢–µ–ø–µ—Ä—å –≤—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–º–µ–Ω—è—Ç—å –∏—Ö –≤ —Å–≤–æ–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö!
                    </p>
                </div>
            )}

            <div style={{
                background: '#e3f2fd',
                border: '1px solid #b3d9ff',
                borderRadius: '10px',
                padding: '20px',
                marginBottom: '20px'
            }}>
                <h4 style={{ marginTop: 0 }}>üöÄ –ß—Ç–æ –¥–∞–ª—å—à–µ?</h4>
                <ul style={{ fontSize: '1.1em' }}>
                    <li><strong>React Compiler</strong> ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–µ–º–æ–∏–∑–∞—Ü–∏—è –±–µ–∑ useMemo/useCallback</li>
                    <li><strong>React Server Components</strong> ‚Äî —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</li>
                    <li><strong>Server Actions</strong> ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –∫–æ–¥–∞ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</li>
                    <li><strong>–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã</strong> ‚Äî –∫–æ–º–ø–æ–∑–∏—Ü–∏—è —Ö—É–∫–æ–≤, –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ö—É–∫–∏, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞</li>
                    <li><strong>–ü—Ä–∞–∫—Ç–∏–∫–∞</strong> ‚Äî –ø—Ä–∏–º–µ–Ω—è–π—Ç–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ —Ö—É–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö!</li>
                </ul>
            </div>

            <style>
{`@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.02); }
    100% { transform: scale(1); }
}`}
            </style>
        </div>
    );
}

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
function Presentation() {
    const [currentSlide, setCurrentSlide] = useState(0);
    const [isFullscreen, setIsFullscreen] = useState(false);
    const [openMenu, setOpenMenu] = useState(null); // 'basic', 'additional', 'react18plus', or 'react19plus'
    const [isBurgerOpen, setIsBurgerOpen] = useState(false);

    const slides = [
        {
            id: 'intro',
            title: '–í–≤–µ–¥–µ–Ω–∏–µ',
            component: IntroSlide
        },
        {
            id: 'reactTheory',
            title: 'React - –¢–µ–æ—Ä–∏—è',
            component: ReactTheoryPresentation
        },
        {
            id: 'basicHooks',
            title: '–ë–∞–∑–æ–≤—ã–µ —Ö—É–∫–∏',
            component: BasicHooksPage
        },
        {
            id: 'useState',
            title: 'useState',
            component: UseStateDemo
        },
        {
            id: 'useEffect',
            title: 'useEffect',
            component: UseEffectDemo
        },
        {
            id: 'useContext',
            title: 'useContext',
            component: UseContextDemo
        },
        {
            id: 'additionalHooks',
            title: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏',
            component: AdditionalHooksPage
        },
        {
            id: 'useReducer',
            title: 'useReducer',
            component: UseReducerDemo
        },
        {
            id: 'useMemoCallback',
            title: 'useMemo/useCallback',
            component: UseMemoCallbackDemo
        },
        {
            id: 'useRef',
            title: 'useRef',
            component: UseRefDemo
        },
        {
            id: 'react18PlusHooks',
            title: 'React 18+ —Ö—É–∫–∏',
            component: React18PlusHooksPage
        },
        {
            id: 'useDeferredValue',
            title: 'useDeferredValue',
            component: UseDeferredValueDemo
        },
        {
            id: 'useTransition',
            title: 'useTransition',
            component: UseTransitionDemo
        },
        {
            id: 'useId',
            title: 'useId',
            component: UseIdDemo
        },
        {
            id: 'useSyncExternalStore',
            title: 'useSyncExternalStore',
            component: UseSyncExternalStoreDemo
        },
        {
            id: 'useInsertionEffect',
            title: 'useInsertionEffect',
            component: UseInsertionEffectDemo
        },
        {
            id: 'react19PlusHooks',
            title: 'React 19+ —Ö—É–∫–∏',
            component: React19PlusHooksPage
        },
        {
            id: 'use',
            title: 'use',
            component: UseDemo
        },
        {
            id: 'useOptimistic',
            title: 'useOptimistic',
            component: UseOptimisticDemo
        },
        {
            id: 'useActionState',
            title: 'useActionState',
            component: UseActionStateDemo
        },
        {
            id: 'useFormStatus',
            title: 'useFormStatus',
            component: UseFormStatusDemo
        },
        {
            id: 'summary',
            title: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ',
            component: SummarySlide
        }
    ];

    const nextSlide = () => {
        setCurrentSlide(prev => (prev + 1) % slides.length);
    };

    const prevSlide = () => {
        setCurrentSlide(prev => prev === 0 ? slides.length - 1 : prev - 1);
    };

    const goToSlide = (index) => {
        setCurrentSlide(index);
    };

    const toggleFullscreen = async () => {
        try {
            if (!isFullscreen) {
                await document.documentElement.requestFullscreen?.();
                setIsFullscreen(true);
            } else {
                if (document.fullscreenElement) {
                    await document.exitFullscreen?.();
                }
                setIsFullscreen(false);
            }
        } catch (error) {
            console.log('Fullscreen toggle failed:', error);
            setIsFullscreen(false);
        }
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à
    useEffect(() => {
        const handleKeyPress = (e) => {
            switch(e.key) {
                case 'ArrowRight':
                case ' ':
                    nextSlide();
                    break;
                case 'ArrowLeft':
                    prevSlide();
                    break;
                case 'f':
                case 'F11':
                    e.preventDefault();
                    toggleFullscreen();
                    break;
                case 'Escape':
                    if (isFullscreen) {
                        toggleFullscreen();
                    }
                    break;
            }
        };

        window.addEventListener('keydown', handleKeyPress);
        return () => window.removeEventListener('keydown', handleKeyPress);
    }, [isFullscreen]);

    const CurrentSlideComponent = slides[currentSlide].component;

    return (
        <div className="presentation-container">
            <div className="header">
                <h1>React 19 Hooks - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ</h1>
                <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Å –∂–∏–≤—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏</p>
            </div>

            <div className="navigation" style={{ position: 'relative' }}>
                <button
                    onClick={() => setIsBurgerOpen(!isBurgerOpen)}
                    style={{
                        background: '#2196f3',
                        border: 'none',
                        color: 'white',
                        fontSize: '24px',
                        padding: '10px 20px',
                        borderRadius: '8px',
                        cursor: 'pointer',
                        display: 'flex',
                        alignItems: 'center',
                        gap: '10px',
                        transition: 'all 0.3s ease',
                        boxShadow: isBurgerOpen ? '0 4px 12px rgba(33, 150, 243, 0.4)' : '0 2px 8px rgba(0,0,0,0.1)'
                    }}
                >
                    <span style={{ fontSize: '20px' }}>‚ò∞</span>
                    <span style={{ fontSize: '16px' }}>{slides[currentSlide].title}</span>
                    <span style={{ fontSize: '14px', opacity: 0.8 }}>({currentSlide + 1}/{slides.length})</span>
                </button>

                {/* –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é */}
                {isBurgerOpen && (
                    <>
                        {/* –û–≤–µ—Ä–ª–µ–π –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ */}
                        <div
                            onClick={() => setIsBurgerOpen(false)}
                            style={{
                                position: 'fixed',
                                top: 0,
                                left: 0,
                                right: 0,
                                bottom: 0,
                                background: 'rgba(0, 0, 0, 0.5)',
                                zIndex: 999
                            }}
                        />

                        {/* –°–∞–º–æ –º–µ–Ω—é */}
                        <div
                            style={{
                                position: 'fixed',
                                top: 0,
                                left: 0,
                                width: '350px',
                                height: '100%',
                                background: 'white',
                                boxShadow: '2px 0 20px rgba(0,0,0,0.2)',
                                zIndex: 1000,
                                overflowY: 'auto',
                                animation: 'slideIn 0.3s ease'
                            }}
                        >
                            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é */}
                            <div style={{
                                padding: '20px',
                                background: 'linear-gradient(135deg, #2196f3 0%, #1976d2 100%)',
                                color: 'white',
                                display: 'flex',
                                justifyContent: 'space-between',
                                alignItems: 'center',
                                position: 'sticky',
                                top: 0,
                                zIndex: 1
                            }}>
                                <h3 style={{ margin: 0, fontSize: '18px' }}>–ù–∞–≤–∏–≥–∞—Ü–∏—è</h3>
                                <button
                                    onClick={() => setIsBurgerOpen(false)}
                                    style={{
                                        background: 'transparent',
                                        border: 'none',
                                        color: 'white',
                                        fontSize: '24px',
                                        cursor: 'pointer',
                                        padding: '0',
                                        width: '30px',
                                        height: '30px',
                                        display: 'flex',
                                        alignItems: 'center',
                                        justifyContent: 'center'
                                    }}
                                >
                                    ‚úï
                                </button>
                            </div>

                            {/* –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é */}
                            <div style={{ padding: '10px' }}>
                                {/* –í–≤–µ–¥–µ–Ω–∏–µ */}
                                <button
                                    className="nav-btn"
                                    onClick={() => {
                                        goToSlide(0);
                                        setIsBurgerOpen(false);
                                    }}
                                    style={{
                                        width: '100%',
                                        textAlign: 'left',
                                        background: currentSlide === 0 ? '#e3f2fd' : 'white',
                                        marginBottom: '5px',
                                        border: '1px solid #e0e0e0',
                                        fontSize: '15px',
                                        fontWeight: currentSlide === 0 ? 'bold' : 'normal'
                                    }}
                                >
                                    üìñ –í–≤–µ–¥–µ–Ω–∏–µ
                                </button>

                                {/* React –¢–µ–æ—Ä–∏—è */}
                                <button
                                    className="nav-btn"
                                    onClick={() => {
                                        goToSlide(1);
                                        setIsBurgerOpen(false);
                                    }}
                                    style={{
                                        width: '100%',
                                        textAlign: 'left',
                                        background: currentSlide === 1 ? '#ede7f6' : 'white',
                                        marginBottom: '5px',
                                        border: '1px solid #e0e0e0',
                                        fontSize: '15px',
                                        fontWeight: currentSlide === 1 ? 'bold' : 'normal'
                                    }}
                                >
                                    ‚öõÔ∏è React - –¢–µ–æ—Ä–∏—è
                                </button>

                                {/* –ë–∞–∑–æ–≤—ã–µ —Ö—É–∫–∏ */}
                                <div style={{ marginTop: '15px', marginBottom: '10px' }}>
                                    <div style={{
                                        fontSize: '14px',
                                        fontWeight: 'bold',
                                        color: '#2196f3',
                                        padding: '10px',
                                        background: '#e3f2fd',
                                        borderRadius: '6px',
                                        marginBottom: '5px'
                                    }}>
                                        üéØ –ë–∞–∑–æ–≤—ã–µ —Ö—É–∫–∏
                                    </div>
                                    <button
                                        className="nav-btn"
                                        onClick={() => {
                                            goToSlide(2);
                                            setIsBurgerOpen(false);
                                        }}
                                        style={{
                                            width: '100%',
                                            textAlign: 'left',
                                            background: currentSlide === 2 ? '#e3f2fd' : 'white',
                                            marginBottom: '3px',
                                            border: '1px solid #e0e0e0',
                                            fontSize: '14px',
                                            paddingLeft: '20px',
                                            fontWeight: currentSlide === 2 ? 'bold' : 'normal'
                                        }}
                                    >
                                        üìã –û–±–∑–æ—Ä
                                    </button>
                                    {[
                                        { index: 3, title: 'useState' },
                                        { index: 4, title: 'useEffect' },
                                        { index: 5, title: 'useContext' }
                                    ].map((hook) => (
                                        <button
                                            key={hook.index}
                                            className="nav-btn"
                                            onClick={() => {
                                                goToSlide(hook.index);
                                                setIsBurgerOpen(false);
                                            }}
                                            style={{
                                                width: '100%',
                                                textAlign: 'left',
                                                background: currentSlide === hook.index ? '#e3f2fd' : 'white',
                                                marginBottom: '3px',
                                                border: '1px solid #e0e0e0',
                                                fontSize: '14px',
                                                paddingLeft: '20px',
                                                fontWeight: currentSlide === hook.index ? 'bold' : 'normal'
                                            }}
                                        >
                                            {hook.title}
                                        </button>
                                    ))}
                                </div>

                                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏ */}
                                <div style={{ marginTop: '15px', marginBottom: '10px' }}>
                                    <div style={{
                                        fontSize: '14px',
                                        fontWeight: 'bold',
                                        color: '#ff6b6b',
                                        padding: '10px',
                                        background: '#ffe3e3',
                                        borderRadius: '6px',
                                        marginBottom: '5px'
                                    }}>
                                        ‚ö° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö—É–∫–∏
                                    </div>
                                    <button
                                        className="nav-btn"
                                        onClick={() => {
                                            goToSlide(6);
                                            setIsBurgerOpen(false);
                                        }}
                                        style={{
                                            width: '100%',
                                            textAlign: 'left',
                                            background: currentSlide === 6 ? '#ffe3e3' : 'white',
                                            marginBottom: '3px',
                                            border: '1px solid #e0e0e0',
                                            fontSize: '14px',
                                            paddingLeft: '20px',
                                            fontWeight: currentSlide === 6 ? 'bold' : 'normal'
                                        }}
                                    >
                                        üìã –û–±–∑–æ—Ä
                                    </button>
                                    {[
                                        { index: 7, title: 'useReducer' },
                                        { index: 8, title: 'useMemo/useCallback' },
                                        { index: 9, title: 'useRef' }
                                    ].map((hook) => (
                                        <button
                                            key={hook.index}
                                            className="nav-btn"
                                            onClick={() => {
                                                goToSlide(hook.index);
                                                setIsBurgerOpen(false);
                                            }}
                                            style={{
                                                width: '100%',
                                                textAlign: 'left',
                                                background: currentSlide === hook.index ? '#ffe3e3' : 'white',
                                                marginBottom: '3px',
                                                border: '1px solid #e0e0e0',
                                                fontSize: '14px',
                                                paddingLeft: '20px',
                                                fontWeight: currentSlide === hook.index ? 'bold' : 'normal'
                                            }}
                                        >
                                            {hook.title}
                                        </button>
                                    ))}
                                </div>

                                {/* React 18+ —Ö—É–∫–∏ */}
                                <div style={{ marginTop: '15px', marginBottom: '10px' }}>
                                    <div style={{
                                        fontSize: '14px',
                                        fontWeight: 'bold',
                                        color: '#10b981',
                                        padding: '10px',
                                        background: '#d1fae5',
                                        borderRadius: '6px',
                                        marginBottom: '5px'
                                    }}>
                                        üöÄ React 18+ —Ö—É–∫–∏
                                    </div>
                                    <button
                                        className="nav-btn"
                                        onClick={() => {
                                            goToSlide(10);
                                            setIsBurgerOpen(false);
                                        }}
                                        style={{
                                            width: '100%',
                                            textAlign: 'left',
                                            background: currentSlide === 10 ? '#d1fae5' : 'white',
                                            marginBottom: '3px',
                                            border: '1px solid #e0e0e0',
                                            fontSize: '14px',
                                            paddingLeft: '20px',
                                            fontWeight: currentSlide === 10 ? 'bold' : 'normal'
                                        }}
                                    >
                                        üìã –û–±–∑–æ—Ä
                                    </button>
                                    {[
                                        { index: 11, title: 'useDeferredValue' },
                                        { index: 12, title: 'useTransition' },
                                        { index: 13, title: 'useId' },
                                        { index: 14, title: 'useSyncExternalStore' },
                                        { index: 15, title: 'useInsertionEffect' }
                                    ].map((hook) => (
                                        <button
                                            key={hook.index}
                                            className="nav-btn"
                                            onClick={() => {
                                                goToSlide(hook.index);
                                                setIsBurgerOpen(false);
                                            }}
                                            style={{
                                                width: '100%',
                                                textAlign: 'left',
                                                background: currentSlide === hook.index ? '#d1fae5' : 'white',
                                                marginBottom: '3px',
                                                border: '1px solid #e0e0e0',
                                                fontSize: '14px',
                                                paddingLeft: '20px',
                                                fontWeight: currentSlide === hook.index ? 'bold' : 'normal'
                                            }}
                                        >
                                            {hook.title}
                                        </button>
                                    ))}
                                </div>

                                {/* React 19+ —Ö—É–∫–∏ */}
                                <div style={{ marginTop: '15px', marginBottom: '10px' }}>
                                    <div style={{
                                        fontSize: '14px',
                                        fontWeight: 'bold',
                                        color: '#a855f7',
                                        padding: '10px',
                                        background: '#f3e8ff',
                                        borderRadius: '6px',
                                        marginBottom: '5px'
                                    }}>
                                        üíé React 19+ —Ö—É–∫–∏
                                    </div>
                                    <button
                                        className="nav-btn"
                                        onClick={() => {
                                            goToSlide(16);
                                            setIsBurgerOpen(false);
                                        }}
                                        style={{
                                            width: '100%',
                                            textAlign: 'left',
                                            background: currentSlide === 16 ? '#f3e8ff' : 'white',
                                            marginBottom: '3px',
                                            border: '1px solid #e0e0e0',
                                            fontSize: '14px',
                                            paddingLeft: '20px',
                                            fontWeight: currentSlide === 16 ? 'bold' : 'normal'
                                        }}
                                    >
                                        üìã –û–±–∑–æ—Ä
                                    </button>
                                    {[
                                        { index: 17, title: 'use' },
                                        { index: 18, title: 'useOptimistic' },
                                        { index: 19, title: 'useActionState' },
                                        { index: 20, title: 'useFormStatus' }
                                    ].map((hook) => (
                                        <button
                                            key={hook.index}
                                            className="nav-btn"
                                            onClick={() => {
                                                goToSlide(hook.index);
                                                setIsBurgerOpen(false);
                                            }}
                                            style={{
                                                width: '100%',
                                                textAlign: 'left',
                                                background: currentSlide === hook.index ? '#f3e8ff' : 'white',
                                                marginBottom: '3px',
                                                border: '1px solid #e0e0e0',
                                                fontSize: '14px',
                                                paddingLeft: '20px',
                                                fontWeight: currentSlide === hook.index ? 'bold' : 'normal'
                                            }}
                                        >
                                            {hook.title}
                                        </button>
                                    ))}
                                </div>

                                {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
                                <button
                                    className="nav-btn"
                                    onClick={() => {
                                        goToSlide(21);
                                        setIsBurgerOpen(false);
                                    }}
                                    style={{
                                        width: '100%',
                                        textAlign: 'left',
                                        background: currentSlide === 21 ? '#e3f2fd' : 'white',
                                        marginTop: '10px',
                                        border: '1px solid #e0e0e0',
                                        fontSize: '15px',
                                        fontWeight: currentSlide === 21 ? 'bold' : 'normal'
                                    }}
                                >
                                    üéì –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
                                </button>
                            </div>
                        </div>

                        <style>
{`@keyframes slideIn {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0);
    }
}`}
                        </style>
                    </>
                )}
            </div>

            <div className="content">
                <CurrentSlideComponent goToSlide={goToSlide} />
            </div>

            <div style={{
                position: 'fixed',
                bottom: '20px',
                right: '20px',
                display: 'flex',
                gap: '10px',
                zIndex: 1000
            }}>
                <button
                    className="btn"
                    onClick={prevSlide}
                    style={{
                        borderRadius: '50%',
                        width: '50px',
                        height: '50px',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        padding: 0
                    }}
                >
                    ‚Üê
                </button>
                <button
                    className="btn"
                    onClick={nextSlide}
                    style={{
                        borderRadius: '50%',
                        width: '50px',
                        height: '50px',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        padding: 0
                    }}
                >
                    ‚Üí
                </button>
                <button
                    className="btn"
                    onClick={toggleFullscreen}
                    style={{
                        borderRadius: '50%',
                        width: '50px',
                        height: '50px',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        padding: 0
                    }}
                    title="–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º (F)"
                >
                    ‚õ∂
                </button>
            </div>

            <div style={{
                position: 'fixed',
                bottom: '20px',
                left: '20px',
                background: 'rgba(0,0,0,0.7)',
                color: 'white',
                padding: '8px 12px',
                borderRadius: '15px',
                fontSize: '14px',
                zIndex: 1000
            }}>
                {currentSlide + 1} / {slides.length}
            </div>

            <div style={{
                position: 'fixed',
                top: '80px',
                right: '20px',
                background: 'rgba(0,0,0,0.1)',
                padding: '10px',
                borderRadius: '8px',
                fontSize: '12px',
                color: '#666',
                zIndex: 1000
            }}>
                <div>–ù–∞–≤–∏–≥–∞—Ü–∏—è:</div>
                <div>‚Üê ‚Üí : –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤</div>
                <div>F : –ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω</div>
                <div>Esc : –í—ã—Ö–æ–¥ –∏–∑ –ø–æ–ª–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞</div>
            </div>
        </div>
    );
}

export default Presentation
