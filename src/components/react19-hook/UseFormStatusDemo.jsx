import { useActionState, useRef, createContext, useContext } from 'react'

// –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ useFormStatus
const FormStatusContext = createContext({ pending: false, data: null, method: null, action: null })

// –ò–º–∏—Ç–∞—Ü–∏—è useFormStatus (–≤ React 19 —ç—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ö—É–∫)
function useFormStatus() {
  return useContext(FormStatusContext)
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
function SubmitButton() {
  const status = useFormStatus()

  return (
    <button
      type="submit"
      disabled={status.pending}
      style={{
        padding: '12px 24px',
        fontSize: '16px',
        backgroundColor: status.pending ? '#6b7280' : '#3b82f6',
        color: 'white',
        border: 'none',
        borderRadius: '6px',
        cursor: status.pending ? 'not-allowed' : 'pointer',
        fontWeight: 'bold',
        transition: 'all 0.2s'
      }}
    >
      {status.pending ? '‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞...' : 'üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
    </button>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
function LoadingIndicator() {
  const status = useFormStatus()

  if (!status.pending) return null

  return (
    <div style={{
      padding: '10px',
      backgroundColor: '#fef3c7',
      color: '#92400e',
      borderRadius: '6px',
      fontSize: '14px',
      display: 'flex',
      alignItems: 'center',
      gap: '8px',
      marginTop: '10px'
    }}>
      <span style={{ animation: 'spin 1s linear infinite' }}>‚è≥</span>
      –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...
    </div>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª–µ–π
function DisabledFields({ children }) {
  const status = useFormStatus()

  return (
    <fieldset disabled={status.pending} style={{ border: 'none', padding: 0, margin: 0 }}>
      {children}
    </fieldset>
  )
}

// Action –¥–ª—è —Ñ–æ—Ä–º—ã –ª–æ–≥–∏–Ω–∞
async function loginAction(prevState, formData) {
  const email = formData.get('email')
  const password = formData.get('password')

  await new Promise(resolve => setTimeout(resolve, 2000))

  if (!email || !email.includes('@')) {
    return { success: false, error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email' }
  }

  if (!password || password.length < 6) {
    return { success: false, error: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤' }
  }

  return { success: true, message: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${email}!` }
}

// –§–æ—Ä–º–∞ –ª–æ–≥–∏–Ω–∞
function LoginForm() {
  const [state, formAction, isPending] = useActionState(loginAction, {})

  return (
    <FormStatusContext.Provider value={{ pending: isPending }}>
      <div style={{
        padding: '20px',
        backgroundColor: '#1f2937',
        borderRadius: '8px'
      }}>
        <h4 style={{ color: '#60a5fa', marginTop: 0 }}>üîê –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞</h4>

        <form action={formAction} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>
          <DisabledFields>
            <div>
              <label style={{ display: 'block', color: '#f3f4f6', marginBottom: '5px' }}>
                Email:
              </label>
              <input
                name="email"
                type="email"
                placeholder="example@mail.com"
                style={{
                  width: '100%',
                  padding: '10px',
                  fontSize: '14px',
                  borderRadius: '6px',
                  border: '2px solid #60a5fa',
                  backgroundColor: '#374151',
                  color: '#f3f4f6',
                  outline: 'none'
                }}
              />
            </div>

            <div>
              <label style={{ display: 'block', color: '#f3f4f6', marginBottom: '5px' }}>
                –ü–∞—Ä–æ–ª—å:
              </label>
              <input
                name="password"
                type="password"
                placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
                style={{
                  width: '100%',
                  padding: '10px',
                  fontSize: '14px',
                  borderRadius: '6px',
                  border: '2px solid #60a5fa',
                  backgroundColor: '#374151',
                  color: '#f3f4f6',
                  outline: 'none'
                }}
              />
            </div>
          </DisabledFields>

          <SubmitButton />
          <LoadingIndicator />
        </form>

        {state.error && (
          <div style={{
            marginTop: '15px',
            padding: '12px',
            backgroundColor: '#7f1d1d',
            color: 'white',
            borderRadius: '6px'
          }}>
            ‚ùå {state.error}
          </div>
        )}

        {state.success && (
          <div style={{
            marginTop: '15px',
            padding: '12px',
            backgroundColor: '#065f46',
            color: 'white',
            borderRadius: '6px'
          }}>
            ‚úÖ {state.message}
          </div>
        )}
      </div>
    </FormStatusContext.Provider>
  )
}

// Action –¥–ª—è —Ñ–æ—Ä–º—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
async function commentAction(prevState, formData) {
  const name = formData.get('name')
  const comment = formData.get('comment')

  await new Promise(resolve => setTimeout(resolve, 1500))

  if (!name) {
    return { success: false, error: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è' }
  }

  if (!comment || comment.length < 10) {
    return { success: false, error: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤' }
  }

  return {
    success: true,
    comment: { name, text: comment, timestamp: new Date().toLocaleTimeString() }
  }
}

// –§–æ—Ä–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
function CommentForm() {
  const [state, formAction, isPending] = useActionState(commentAction, { comments: [] })
  const formRef = useRef(null)

  return (
    <FormStatusContext.Provider value={{ pending: isPending }}>
      <div style={{
        padding: '20px',
        backgroundColor: '#1f2937',
        borderRadius: '8px'
      }}>
        <h4 style={{ color: '#60a5fa', marginTop: 0 }}>üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</h4>

        <form
          ref={formRef}
          action={async (formData) => {
            await formAction(formData)
            if (!state.error) {
              formRef.current?.reset()
            }
          }}
          style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}
        >
          <DisabledFields>
            <div>
              <label style={{ display: 'block', color: '#f3f4f6', marginBottom: '5px' }}>
                –í–∞—à–µ –∏–º—è:
              </label>
              <input
                name="name"
                placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                style={{
                  width: '100%',
                  padding: '10px',
                  fontSize: '14px',
                  borderRadius: '6px',
                  border: '2px solid #60a5fa',
                  backgroundColor: '#374151',
                  color: '#f3f4f6',
                  outline: 'none'
                }}
              />
            </div>

            <div>
              <label style={{ display: 'block', color: '#f3f4f6', marginBottom: '5px' }}>
                –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:
              </label>
              <textarea
                name="comment"
                rows={4}
                placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."
                style={{
                  width: '100%',
                  padding: '10px',
                  fontSize: '14px',
                  borderRadius: '6px',
                  border: '2px solid #60a5fa',
                  backgroundColor: '#374151',
                  color: '#f3f4f6',
                  outline: 'none',
                  resize: 'vertical',
                  fontFamily: 'inherit'
                }}
              />
            </div>
          </DisabledFields>

          <SubmitButton />
          <LoadingIndicator />
        </form>

        {state.error && (
          <div style={{
            marginTop: '15px',
            padding: '12px',
            backgroundColor: '#7f1d1d',
            color: 'white',
            borderRadius: '6px'
          }}>
            ‚ùå {state.error}
          </div>
        )}

        {state.success && state.comment && (
          <div style={{
            marginTop: '15px',
            padding: '12px',
            backgroundColor: '#065f46',
            color: 'white',
            borderRadius: '6px'
          }}>
            <div style={{ fontWeight: 'bold', marginBottom: '5px' }}>
              ‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω!
            </div>
            <div style={{ fontSize: '14px', opacity: 0.9 }}>
              {state.comment.name}: {state.comment.text}
            </div>
            <div style={{ fontSize: '12px', marginTop: '5px', opacity: 0.7 }}>
              {state.comment.timestamp}
            </div>
          </div>
        )}
      </div>
    </FormStatusContext.Provider>
  )
}

function UseFormStatusDemo() {
  return (
    <div style={{
      padding: '20px',
      maxWidth: '1200px',
      margin: '0 auto',
      fontFamily: 'system-ui, -apple-system, sans-serif'
    }}>
      <h2 style={{ color: '#f3f4f6', marginBottom: '10px' }}>
        useFormStatus - –°—Ç–∞—Ç—É—Å —Ñ–æ—Ä–º—ã –¥–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      </h2>

      <div style={{
        backgroundColor: '#1e40af',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>üí° –ß—Ç–æ –¥–µ–ª–∞–µ—Ç useFormStatus?</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li>–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ–æ—Ä–º—ã</li>
          <li>–†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º—ã</li>
          <li>–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç pending, data, method, action</li>
          <li>–ò–¥–µ–∞–ª–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#7c2d12',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>‚ö†Ô∏è –í–∞–∂–Ω–æ!</h3>
        <p style={{ margin: 0, fontSize: '14px' }}>
          –í —ç—Ç–æ–π –¥–µ–º–æ –º—ã –∏–º–∏—Ç–∏—Ä—É–µ–º useFormStatus —á–µ—Ä–µ–∑ Context, —Ç–∞–∫ –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π useFormStatus
          —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å Server Components –≤ React 19. –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å Server Actions
          —ç—Ç–æ—Ç —Ö—É–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç "–∏–∑ –∫–æ—Ä–æ–±–∫–∏" –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
        </p>
      </div>

      <div style={{
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',
        gap: '20px',
        marginBottom: '20px'
      }}>
        <LoginForm />
        <CommentForm />
      </div>

      <div style={{
        backgroundColor: '#065f46',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useFormStatus</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li><strong>–ö–Ω–æ–ø–∫–∏ Submit</strong> - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏</li>
          <li><strong>–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã</strong> - –ø–æ–∫–∞–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏</li>
          <li><strong>–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª–µ–π</strong> - disabled –≤–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏</li>
          <li><strong>–ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</strong> - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ UI —ç–ª–µ–º–µ–Ω—Ç—ã</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#1f2937',
        padding: '15px',
        borderRadius: '8px',
        color: '#f3f4f6',
        marginBottom: '20px'
      }}>
        <h3 style={{ marginTop: 0 }}>üìù –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞</h3>
        <pre style={{
          backgroundColor: '#111827',
          padding: '15px',
          borderRadius: '6px',
          overflow: 'auto',
          fontSize: '13px'
        }}>
{`import { useFormStatus } from 'react-dom'

// –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –∫–Ω–æ–ø–∫–∞ Submit
function SubmitButton() {
  const { pending } = useFormStatus()

  return (
    <button type="submit" disabled={pending}>
      {pending ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
    </button>
  )
}

// –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
function LoadingIndicator() {
  const { pending } = useFormStatus()

  if (!pending) return null

  return <div>‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...</div>
}

// –§–æ—Ä–º–∞
function Form() {
  async function submitAction(formData) {
    'use server'
    // Server Action
    await saveToDatabase(formData)
  }

  return (
    <form action={submitAction}>
      <input name="email" />

      {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–∑–Ω–∞—é—Ç –æ pending */}
      <SubmitButton />
      <LoadingIndicator />
    </form>
  )
}`}
        </pre>
      </div>

      <div style={{
        backgroundColor: '#7c2d12',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li>useFormStatus —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö —Ñ–æ—Ä–º—ã</li>
          <li>–ù–µ –≤—ã–∑—ã–≤–∞–π—Ç–µ –µ–≥–æ –Ω–∞ —Ç–æ–º –∂–µ —É—Ä–æ–≤–Ω–µ, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–æ—Ä–º–∞</li>
          <li>–ò–¥–µ–∞–ª–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</li>
          <li>–õ—É—á—à–µ –≤—Å–µ–≥–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å Server Actions</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#1e3a8a',
        color: 'white',
        padding: '15px',
        borderRadius: '8px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>üéØ –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è</h3>
        <div style={{ fontSize: '14px', lineHeight: '1.8' }}>
          <div style={{ marginBottom: '10px' }}>
            <strong>pending:</strong> boolean - —Ñ–æ—Ä–º–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
          </div>
          <div style={{ marginBottom: '10px' }}>
            <strong>data:</strong> FormData - –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ —Ñ–æ—Ä–º–æ–π
          </div>
          <div style={{ marginBottom: '10px' }}>
            <strong>method:</strong> 'get' | 'post' - HTTP –º–µ—Ç–æ–¥
          </div>
          <div>
            <strong>action:</strong> string | function - URL –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è action
          </div>
        </div>
      </div>

      <style>{`
        @keyframes spin {
          from { transform: rotate(0deg); }
          to { transform: rotate(360deg); }
        }
      `}</style>
    </div>
  )
}

export default UseFormStatusDemo