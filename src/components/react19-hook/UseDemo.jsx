import { use, Suspense, useState } from 'react'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–∏—Å–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
function fetchData(delay = 1000) {
  return new Promise((resolve) => {
    setTimeout(() => {
      resolve({
        message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!',
        timestamp: new Date().toLocaleTimeString()
      })
    }, delay)
  })
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π use() –¥–ª—è –ø—Ä–æ–º–∏—Å–∞
function DataDisplay({ dataPromise }) {
  const data = use(dataPromise)

  return (
    <div style={{
      padding: '15px',
      backgroundColor: '#065f46',
      color: 'white',
      borderRadius: '8px',
      marginTop: '15px'
    }}>
      <h4 style={{ marginTop: 0 }}>‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</h4>
      <p style={{ margin: '5px 0' }}>{data.message}</p>
      <p style={{ margin: '5px 0', fontSize: '14px', opacity: 0.9 }}>
        –í—Ä–µ–º—è: {data.timestamp}
      </p>
    </div>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å Context
const ThemeContext = { _currentValue: 'dark' }

function ThemedComponent() {
  const theme = use(ThemeContext)

  return (
    <div style={{
      padding: '15px',
      backgroundColor: theme === 'dark' ? '#1f2937' : '#f3f4f6',
      color: theme === 'dark' ? '#f3f4f6' : '#1f2937',
      borderRadius: '8px',
      border: '2px solid #60a5fa'
    }}>
      <h4 style={{ marginTop: 0 }}>üé® –¢–µ–∫—É—â–∞—è —Ç–µ–º–∞: {theme}</h4>
      <p style={{ margin: 0 }}>–•—É–∫ use() –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–∞–∫ –∂–µ, –∫–∞–∫ useContext</p>
    </div>
  )
}

// –£—Å–ª–æ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ use()
function ConditionalData({ shouldLoad }) {
  const [showData, setShowData] = useState(false)

  return (
    <div style={{
      padding: '15px',
      backgroundColor: '#1f2937',
      borderRadius: '8px'
    }}>
      <h4 style={{ color: '#60a5fa', marginTop: 0 }}>üîÄ –£—Å–ª–æ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ</h4>
      <p style={{ color: '#d1d5db', marginBottom: '15px' }}>
        –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –¥—Ä—É–≥–∏—Ö —Ö—É–∫–æ–≤, use() –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å —É—Å–ª–æ–≤–Ω–æ!
      </p>

      <button
        onClick={() => setShowData(!showData)}
        style={{
          padding: '10px 20px',
          backgroundColor: '#3b82f6',
          color: 'white',
          border: 'none',
          borderRadius: '6px',
          cursor: 'pointer',
          marginBottom: '15px'
        }}
      >
        {showData ? '–°–∫—Ä—ã—Ç—å –¥–∞–Ω–Ω—ã–µ' : '–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ'}
      </button>

      {showData && shouldLoad && (
        <Suspense fallback={
          <div style={{
            padding: '15px',
            backgroundColor: '#fef3c7',
            color: '#92400e',
            borderRadius: '6px'
          }}>
            ‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...
          </div>
        }>
          <DataDisplay dataPromise={fetchData(800)} />
        </Suspense>
      )}
    </div>
  )
}

function UseDemo() {
  const [promise1, setPromise1] = useState(null)
  const [promise2, setPromise2] = useState(null)

  const loadData1 = () => setPromise1(fetchData(1000))
  const loadData2 = () => setPromise2(fetchData(1500))

  return (
    <div style={{
      padding: '20px',
      maxWidth: '1200px',
      margin: '0 auto',
      fontFamily: 'system-ui, -apple-system, sans-serif'
    }}>
      <h2 style={{ color: '#f3f4f6', marginBottom: '10px' }}>
        use - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ö—É–∫ –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤
      </h2>

      <div style={{
        backgroundColor: '#1e40af',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>üí° –ß—Ç–æ –¥–µ–ª–∞–µ—Ç use()?</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li>–ß–∏—Ç–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞: Promise –∏–ª–∏ Context</li>
          <li>–ú–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å —É—Å–ª–æ–≤–Ω–æ –∏ –≤ —Ü–∏–∫–ª–∞—Ö (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –¥—Ä—É–≥–∏—Ö —Ö—É–∫–æ–≤!)</li>
          <li>–ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å Suspense –¥–ª—è –ø—Ä–æ–º–∏—Å–æ–≤</li>
          <li>–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π API –¥–ª—è —á—Ç–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#374151',
        padding: '20px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ color: '#f3f4f6', marginTop: 0 }}>üéØ –î–µ–º–æ 1: use() —Å Promise</h3>
        <p style={{ color: '#d1d5db', marginBottom: '15px' }}>
          –•—É–∫ use() –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–º–∏—Å–∞
        </p>

        <div style={{ display: 'flex', gap: '10px', marginBottom: '15px' }}>
          <button
            onClick={loadData1}
            disabled={promise1}
            style={{
              padding: '10px 20px',
              fontSize: '14px',
              backgroundColor: promise1 ? '#6b7280' : '#3b82f6',
              color: 'white',
              border: 'none',
              borderRadius: '6px',
              cursor: promise1 ? 'not-allowed' : 'pointer'
            }}
          >
            –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (1 —Å–µ–∫)
          </button>

          <button
            onClick={loadData2}
            disabled={promise2}
            style={{
              padding: '10px 20px',
              fontSize: '14px',
              backgroundColor: promise2 ? '#6b7280' : '#3b82f6',
              color: 'white',
              border: 'none',
              borderRadius: '6px',
              cursor: promise2 ? 'not-allowed' : 'pointer'
            }}
          >
            –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (1.5 —Å–µ–∫)
          </button>
        </div>

        {promise1 && (
          <Suspense fallback={
            <div style={{
              padding: '15px',
              backgroundColor: '#fef3c7',
              color: '#92400e',
              borderRadius: '6px',
              marginBottom: '10px'
            }}>
              ‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö...
            </div>
          }>
            <DataDisplay dataPromise={promise1} />
          </Suspense>
        )}

        {promise2 && (
          <Suspense fallback={
            <div style={{
              padding: '15px',
              backgroundColor: '#fef3c7',
              color: '#92400e',
              borderRadius: '6px',
              marginTop: '10px'
            }}>
              ‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö...
            </div>
          }>
            <DataDisplay dataPromise={promise2} />
          </Suspense>
        )}
      </div>

      <div style={{
        backgroundColor: '#374151',
        padding: '20px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ color: '#f3f4f6', marginTop: 0 }}>üéØ –î–µ–º–æ 2: use() —Å Context</h3>
        <p style={{ color: '#d1d5db', marginBottom: '15px' }}>
          use() –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç, –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ useContext
        </p>

        <ThemedComponent />
      </div>

      <div style={{
        backgroundColor: '#374151',
        padding: '20px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ color: '#f3f4f6', marginTop: 0 }}>üéØ –î–µ–º–æ 3: –£—Å–ª–æ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ</h3>

        <ConditionalData shouldLoad={true} />
      </div>

      <div style={{
        backgroundColor: '#065f46',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å use()</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li><strong>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö</strong> - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å Suspense</li>
          <li><strong>–£—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞</strong> - –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ö—É–∫ —É—Å–ª–æ–≤–Ω–æ</li>
          <li><strong>–ß—Ç–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞</strong> - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ useContext</li>
          <li><strong>–°—Ç—Ä–∏–º–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö</strong> - Server Components –∏ RSC</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#1f2937',
        padding: '15px',
        borderRadius: '8px',
        color: '#f3f4f6',
        marginBottom: '20px'
      }}>
        <h3 style={{ marginTop: 0 }}>üìù –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞</h3>
        <pre style={{
          backgroundColor: '#111827',
          padding: '15px',
          borderRadius: '6px',
          overflow: 'auto',
          fontSize: '13px'
        }}>
{`import { use, Suspense } from 'react'

// use() —Å Promise
function DataComponent({ dataPromise }) {
  const data = use(dataPromise)
  return <div>{data.message}</div>
}

// use() —Å Context
function ThemedButton() {
  const theme = use(ThemeContext)
  return <button className={theme}>Click</button>
}

// –£—Å–ª–æ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (—É–Ω–∏–∫–∞–ª—å–Ω–æ –¥–ª—è use!)
function Component({ shouldLoad }) {
  let data = null

  if (shouldLoad) {
    data = use(fetchData()) // ‚úÖ –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —É—Å–ª–æ–≤–Ω–æ!
  }

  return <div>{data || 'No data'}</div>
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å Suspense
function App() {
  return (
    <Suspense fallback={<div>Loading...</div>}>
      <DataComponent dataPromise={fetchData()} />
    </Suspense>
  )
}`}
        </pre>
      </div>

      <div style={{
        backgroundColor: '#7c2d12',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li>use() - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ö—É–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å —É—Å–ª–æ–≤–Ω–æ</li>
          <li>–î–ª—è Promise —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–µ—Ä–Ω—É—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ Suspense</li>
          <li>Promise –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω—ã–º (–Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤ —Ä–µ–Ω–¥–µ—Ä–µ)</li>
          <li>–†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ React 19+</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#1e3a8a',
        color: 'white',
        padding: '15px',
        borderRadius: '8px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>üÜö use() vs –¥—Ä—É–≥–∏–µ —Ö—É–∫–∏</h3>
        <div style={{ fontSize: '14px', lineHeight: '1.8' }}>
          <div style={{ marginBottom: '10px' }}>
            <strong>use():</strong> –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π, —É—Å–ª–æ–≤–Ω—ã–π, –¥–ª—è Promise –∏ Context
          </div>
          <div style={{ marginBottom: '10px' }}>
            <strong>useContext():</strong> –¢–æ–ª—å–∫–æ –¥–ª—è Context, –ø—Ä–∞–≤–∏–ª–∞ —Ö—É–∫–æ–≤
          </div>
          <div>
            <strong>useEffect():</strong> –ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
          </div>
        </div>
      </div>
    </div>
  )
}

export default UseDemo