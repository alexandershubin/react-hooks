import { useId, useState } from 'react'

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã —Å useId
function FormField({ label, type = 'text' }) {
  const id = useId()

  return (
    <div style={{ marginBottom: '15px' }}>
      <label
        htmlFor={id}
        style={{
          display: 'block',
          color: '#f3f4f6',
          marginBottom: '5px',
          fontWeight: '500'
        }}
      >
        {label}
      </label>
      <input
        id={id}
        type={type}
        style={{
          width: '100%',
          padding: '10px',
          fontSize: '14px',
          borderRadius: '6px',
          border: '2px solid #60a5fa',
          backgroundColor: '#1f2937',
          color: '#f3f4f6',
          outline: 'none'
        }}
      />
      <div style={{ fontSize: '11px', color: '#9ca3af', marginTop: '4px' }}>
        ID: {id}
      </div>
    </div>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
function MultiField({ label }) {
  const baseId = useId()
  const options = ['–í–∞—Ä–∏–∞–Ω—Ç 1', '–í–∞—Ä–∏–∞–Ω—Ç 2', '–í–∞—Ä–∏–∞–Ω—Ç 3']

  return (
    <div style={{ marginBottom: '20px' }}>
      <div style={{
        color: '#f3f4f6',
        marginBottom: '10px',
        fontWeight: '500'
      }}>
        {label}
      </div>
      {options.map((option, index) => {
        const optionId = `${baseId}-option-${index}`
        return (
          <div key={index} style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>
            <input
              type="radio"
              id={optionId}
              name={baseId}
              style={{ marginRight: '8px', cursor: 'pointer' }}
            />
            <label
              htmlFor={optionId}
              style={{ color: '#d1d5db', cursor: 'pointer', fontSize: '14px' }}
            >
              {option}
            </label>
            <span style={{ marginLeft: 'auto', fontSize: '11px', color: '#6b7280' }}>
              {optionId}
            </span>
          </div>
        )
      })}
    </div>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å aria-labelledby
function AccessibleSection() {
  const headingId = useId()
  const descriptionId = useId()

  return (
    <section
      aria-labelledby={headingId}
      aria-describedby={descriptionId}
      style={{
        padding: '15px',
        backgroundColor: '#1f2937',
        borderRadius: '8px',
        border: '2px solid #3b82f6'
      }}
    >
      <h4 id={headingId} style={{ color: '#60a5fa', marginTop: 0 }}>
        –î–æ—Å—Ç—É–ø–Ω–∞—è —Å–µ–∫—Ü–∏—è
      </h4>
      <p id={descriptionId} style={{ color: '#d1d5db', fontSize: '14px' }}>
        –≠—Ç–∞ —Å–µ–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç useId –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
        –¥–ª—è aria-–∞—Ç—Ä–∏–±—É—Ç–æ–≤, —É–ª—É—á—à–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å.
      </p>
      <div style={{ fontSize: '11px', color: '#9ca3af', marginTop: '10px' }}>
        <div>Heading ID: {headingId}</div>
        <div>Description ID: {descriptionId}</div>
      </div>
    </section>
  )
}

// –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
function BadExample() {
  const [counter, setCounter] = useState(0)

  // ‚ùå –ù–ï –î–ï–õ–ê–ô–¢–ï –¢–ê–ö - —Å–æ–∑–¥–∞–Ω–∏–µ ID –≤ —Ä–µ–Ω–¥–µ—Ä–µ
  const badId1 = `field-${Math.random()}`
  const badId2 = `field-${Date.now()}`
  const badId3 = `field-${counter}`

  return (
    <div style={{
      padding: '15px',
      backgroundColor: '#7f1d1d',
      borderRadius: '8px',
      color: 'white'
    }}>
      <h4 style={{ marginTop: 0 }}>‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥</h4>
      <button
        onClick={() => setCounter(c => c + 1)}
        style={{
          padding: '8px 16px',
          backgroundColor: '#991b1b',
          color: 'white',
          border: 'none',
          borderRadius: '4px',
          cursor: 'pointer',
          marginBottom: '10px'
        }}
      >
        –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å ({counter})
      </button>
      <div style={{ fontSize: '12px' }}>
        <div style={{ marginBottom: '5px' }}>
          Random ID: {badId1} (–º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ)
        </div>
        <div style={{ marginBottom: '5px' }}>
          Timestamp ID: {badId2} (–º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ)
        </div>
        <div>
          Counter ID: {badId3} (—Å—Ç–∞–±–∏–ª–µ–Ω, –Ω–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏)
        </div>
      </div>
    </div>
  )
}

function UseIdDemo() {
  const [showMultiple, setShowMultiple] = useState(false)

  return (
    <div style={{
      padding: '20px',
      maxWidth: '1200px',
      margin: '0 auto',
      fontFamily: 'system-ui, -apple-system, sans-serif'
    }}>
      <h2 style={{ color: '#f3f4f6', marginBottom: '10px' }}>
        useId - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID
      </h2>

      <div style={{
        backgroundColor: '#1e40af',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>üí° –ß—Ç–æ –¥–µ–ª–∞–µ—Ç useId?</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID, —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –º–µ–∂–¥—É —Ä–µ–Ω–¥–µ—Ä–∞–º–∏</li>
          <li>–†–∞–±–æ—Ç–∞–µ—Ç —Å Server-Side Rendering (SSR)</li>
          <li>–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏</li>
          <li>–û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è accessibility (aria-–∞—Ç—Ä–∏–±—É—Ç—ã)</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#374151',
        padding: '20px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ color: '#f3f4f6', marginTop: 0 }}>üéØ –î–µ–º–æ: –§–æ—Ä–º–∞ —Å label</h3>
        <p style={{ color: '#d1d5db', marginBottom: '20px' }}>
          –ö–∞–∂–¥–æ–µ –ø–æ–ª–µ –ø–æ–ª—É—á–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å–≤—è–∑–∏ label –∏ input:
        </p>

        <FormField label="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" />
        <FormField label="Email –∞–¥—Ä–µ—Å" type="email" />
        <FormField label="–ü–∞—Ä–æ–ª—å" type="password" />

        <div style={{
          marginTop: '20px',
          padding: '12px',
          backgroundColor: '#065f46',
          color: 'white',
          borderRadius: '6px',
          fontSize: '14px'
        }}>
          ‚úÖ –ö–∞–∂–¥—ã–π ID —É–Ω–∏–∫–∞–ª–µ–Ω –∏ —Å—Ç–∞–±–∏–ª–µ–Ω –º–µ–∂–¥—É —Ä–µ–Ω–¥–µ—Ä–∞–º–∏
        </div>
      </div>

      <div style={{
        backgroundColor: '#374151',
        padding: '20px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ color: '#f3f4f6', marginTop: 0 }}>üéØ –î–µ–º–æ: Radio –≥—Ä—É–ø–ø–∞ —Å –æ–±—â–∏–º –±–∞–∑–æ–≤—ã–º ID</h3>

        <MultiField label="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç" />

        <div style={{
          marginTop: '15px',
          padding: '12px',
          backgroundColor: '#065f46',
          color: 'white',
          borderRadius: '6px',
          fontSize: '14px'
        }}>
          ‚úÖ –í—Å–µ –æ–ø—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–∏–Ω –±–∞–∑–æ–≤—ã–π ID —Å —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏
        </div>
      </div>

      <div style={{
        backgroundColor: '#374151',
        padding: '20px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ color: '#f3f4f6', marginTop: 0 }}>üéØ –î–µ–º–æ: ARIA –∞—Ç—Ä–∏–±—É—Ç—ã</h3>

        <AccessibleSection />

        <div style={{
          marginTop: '15px',
          padding: '12px',
          backgroundColor: '#065f46',
          color: 'white',
          borderRadius: '6px',
          fontSize: '14px'
        }}>
          ‚úÖ useId –∏–¥–µ–∞–ª–µ–Ω –¥–ª—è aria-labelledby –∏ aria-describedby
        </div>
      </div>

      <div style={{
        backgroundColor: '#374151',
        padding: '20px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ color: '#f3f4f6', marginTop: 0 }}>üéØ –î–µ–º–æ: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã</h3>

        <button
          onClick={() => setShowMultiple(!showMultiple)}
          style={{
            padding: '10px 20px',
            fontSize: '14px',
            backgroundColor: '#3b82f6',
            color: 'white',
            border: 'none',
            borderRadius: '6px',
            cursor: 'pointer',
            marginBottom: '20px'
          }}
        >
          {showMultiple ? '–°–∫—Ä—ã—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã' : '–ü–æ–∫–∞–∑–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤'}
        </button>

        <div style={{
          display: 'grid',
          gridTemplateColumns: showMultiple ? 'repeat(2, 1fr)' : '1fr',
          gap: '20px'
        }}>
          <div style={{
            padding: '15px',
            backgroundColor: '#1f2937',
            borderRadius: '8px'
          }}>
            <h4 style={{ color: '#60a5fa', marginTop: 0 }}>–≠–∫–∑–µ–º–ø–ª—è—Ä 1</h4>
            <FormField label="Email" type="email" />
          </div>

          {showMultiple && (
            <div style={{
              padding: '15px',
              backgroundColor: '#1f2937',
              borderRadius: '8px'
            }}>
              <h4 style={{ color: '#60a5fa', marginTop: 0 }}>–≠–∫–∑–µ–º–ø–ª—è—Ä 2</h4>
              <FormField label="Email" type="email" />
            </div>
          )}
        </div>

        {showMultiple && (
          <div style={{
            marginTop: '15px',
            padding: '12px',
            backgroundColor: '#065f46',
            color: 'white',
            borderRadius: '6px',
            fontSize: '14px'
          }}>
            ‚úÖ ID –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç –¥–∞–∂–µ –ø—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
          </div>
        )}
      </div>

      <BadExample />

      <div style={{
        backgroundColor: '#065f46',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginTop: '20px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useId</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li><strong>–§–æ—Ä–º—ã</strong> - —Å–≤—è–∑—å label —Å input —á–µ—Ä–µ–∑ htmlFor/id</li>
          <li><strong>Accessibility</strong> - aria-labelledby, aria-describedby</li>
          <li><strong>SSR –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</strong> - —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ ID –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä–æ–º –∏ –∫–ª–∏–µ–Ω—Ç–æ–º</li>
          <li><strong>–°–ø–∏—Å–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤</strong> - —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#1f2937',
        padding: '15px',
        borderRadius: '8px',
        color: '#f3f4f6'
      }}>
        <h3 style={{ marginTop: 0 }}>üìù –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞</h3>
        <pre style={{
          backgroundColor: '#111827',
          padding: '15px',
          borderRadius: '6px',
          overflow: 'auto',
          fontSize: '13px'
        }}>
{`import { useId } from 'react'

function FormField({ label }) {
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
  const id = useId()

  return (
    <div>
      <label htmlFor={id}>
        {label}
      </label>
      <input id={id} />
    </div>
  )
}

// –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
function RadioGroup() {
  const baseId = useId()

  return (
    <>
      <input
        type="radio"
        id={\`\${baseId}-option-1\`}
        name={baseId}
      />
      <label htmlFor={\`\${baseId}-option-1\`}>
        –í–∞—Ä–∏–∞–Ω—Ç 1
      </label>

      <input
        type="radio"
        id={\`\${baseId}-option-2\`}
        name={baseId}
      />
      <label htmlFor={\`\${baseId}-option-2\`}>
        –í–∞—Ä–∏–∞–Ω—Ç 2
      </label>
    </>
  )
}`}
        </pre>
      </div>

      <div style={{
        backgroundColor: '#7c2d12',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginTop: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li>–ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –∫–ª—é—á–µ–π –≤ —Å–ø–∏—Å–∫–∞—Ö (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ key prop)</li>
          <li>ID –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞</li>
          <li>–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è SSR - —Å–æ–≤–ø–∞–¥–∞–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –∫–ª–∏–µ–Ω—Ç–µ</li>
          <li>–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å—ã/—Å—É—Ñ—Ñ–∏–∫—Å—ã –¥–ª—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤</li>
        </ul>
      </div>
    </div>
  )
}

export default UseIdDemo