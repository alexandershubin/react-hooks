import { useState, useDeferredValue, useMemo } from 'react'

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –º–µ–¥–ª–µ–Ω–Ω–æ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è
function SlowList({ text, isDeferredVersion }) {
  const items = useMemo(() => {
    const arr = []
    for (let i = 0; i < 5000; i++) {
      arr.push(`${text} - –≠–ª–µ–º–µ–Ω—Ç ${i + 1}`)
    }
    return arr
  }, [text])

  return (
    <div style={{
      backgroundColor: isDeferredVersion ? '#1f2937' : '#374151',
      padding: '15px',
      borderRadius: '8px',
      maxHeight: '400px',
      overflowY: 'auto',
      color: '#f3f4f6'
    }}>
      <h4 style={{ margin: '0 0 10px 0', color: isDeferredVersion ? '#fbbf24' : '#60a5fa' }}>
        {isDeferredVersion ? '‚ö° –° useDeferredValue' : 'üêå –ë–µ–∑ useDeferredValue'}
      </h4>
      <p style={{ fontSize: '12px', color: '#9ca3af', marginBottom: '10px' }}>
        –†–µ–Ω–¥–µ—Ä–∏—Ç—Å—è {items.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      </p>
      {items.slice(0, 50).map((item, index) => (
        <div
          key={index}
          style={{
            padding: '8px',
            margin: '4px 0',
            backgroundColor: isDeferredVersion ? '#374151' : '#4b5563',
            borderRadius: '4px',
            fontSize: '12px'
          }}
        >
          {item}
        </div>
      ))}
      <div style={{ fontSize: '12px', color: '#9ca3af', marginTop: '10px', textAlign: 'center' }}>
        ...–ø–æ–∫–∞–∑–∞–Ω–æ 50 –∏–∑ {items.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      </div>
    </div>
  )
}

function UseDeferredValueDemo() {
  const [input, setInput] = useState('')
  const [showComparison, setShowComparison] = useState(false)

  // –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  const deferredInput = useDeferredValue(input)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ª–æ–∂–µ–Ω–æ –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ
  const isStale = input !== deferredInput

  return (
    <div style={{
      padding: '20px',
      maxWidth: '1200px',
      margin: '0 auto',
      fontFamily: 'system-ui, -apple-system, sans-serif'
    }}>
      <h2 style={{ color: '#f3f4f6', marginBottom: '10px' }}>
        useDeferredValue - –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
      </h2>

      <div style={{
        backgroundColor: '#1e40af',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>üí° –ß—Ç–æ –¥–µ–ª–∞–µ—Ç useDeferredValue?</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li>–ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–ª–æ–∂–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç–∏ UI</li>
          <li>–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä—É–µ—Ç –≤–∞–∂–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞)</li>
          <li>–¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π</li>
          <li>–£–ª—É—á—à–∞–µ—Ç –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#374151',
        padding: '20px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ color: '#f3f4f6', marginTop: 0 }}>üéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è</h3>

        <div style={{ marginBottom: '20px' }}>
          <label style={{
            display: 'block',
            color: '#f3f4f6',
            marginBottom: '8px',
            fontWeight: 'bold'
          }}>
            –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞:
          </label>
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å..."
            style={{
              width: '100%',
              padding: '12px',
              fontSize: '16px',
              borderRadius: '6px',
              border: '2px solid #60a5fa',
              backgroundColor: '#1f2937',
              color: '#f3f4f6',
              outline: 'none',
              transition: 'border-color 0.2s'
            }}
          />
          {isStale && (
            <div style={{
              marginTop: '8px',
              padding: '8px',
              backgroundColor: '#fef3c7',
              color: '#92400e',
              borderRadius: '4px',
              fontSize: '14px'
            }}>
              ‚è≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–ª–æ–∂–µ–Ω–æ... –í–≤–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä—ã–º!
            </div>
          )}
        </div>

        <button
          onClick={() => setShowComparison(!showComparison)}
          style={{
            padding: '10px 20px',
            fontSize: '14px',
            backgroundColor: '#3b82f6',
            color: 'white',
            border: 'none',
            borderRadius: '6px',
            cursor: 'pointer',
            marginBottom: '20px'
          }}
        >
          {showComparison ? '–°–∫—Ä—ã—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ' : '–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å/–±–µ–∑ useDeferredValue'}
        </button>

        {showComparison ? (
          <div style={{
            display: 'grid',
            gridTemplateColumns: '1fr 1fr',
            gap: '20px',
            marginTop: '20px'
          }}>
            <SlowList text={input} isDeferredVersion={false} />
            <SlowList text={deferredInput} isDeferredVersion={true} />
          </div>
        ) : (
          <SlowList text={deferredInput} isDeferredVersion={true} />
        )}
      </div>

      <div style={{
        backgroundColor: '#065f46',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginBottom: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>‚úÖ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useDeferredValue</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li><strong>–ü–æ–∏—Å–∫ –≤ –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö</strong> - –æ—Ç–ª–æ–∂–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é</li>
          <li><strong>–¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è</strong> - –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å UI</li>
          <li><strong>–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤/–¥–∏–∞–≥—Ä–∞–º–º</strong> - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤–≤–æ–¥—É</li>
          <li><strong>–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</strong> - –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç–∏</li>
        </ul>
      </div>

      <div style={{
        backgroundColor: '#1f2937',
        padding: '15px',
        borderRadius: '8px',
        color: '#f3f4f6'
      }}>
        <h3 style={{ marginTop: 0 }}>üìù –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞</h3>
        <pre style={{
          backgroundColor: '#111827',
          padding: '15px',
          borderRadius: '6px',
          overflow: 'auto',
          fontSize: '13px'
        }}>
{`import { useState, useDeferredValue } from 'react'

function SearchComponent() {
  const [input, setInput] = useState('')

  // –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  const deferredInput = useDeferredValue(input)

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–ª–æ–∂–µ–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  const isStale = input !== deferredInput

  return (
    <>
      <input
        value={input}
        onChange={(e) => setInput(e.target.value)}
        placeholder="–ü–æ–∏—Å–∫..."
      />

      {isStale && <div>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...</div>}

      {/* –¢—è–∂–µ–ª—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç
          –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ */}
      <SlowList searchText={deferredInput} />
    </>
  )
}`}
        </pre>
      </div>

      <div style={{
        backgroundColor: '#7c2d12',
        color: 'white',
        padding: '15px',
        borderRadius: '8px',
        marginTop: '20px'
      }}>
        <h3 style={{ margin: '0 0 10px 0' }}>‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã</h3>
        <ul style={{ margin: 0, paddingLeft: '20px' }}>
          <li>useDeferredValue –Ω–µ –¥–µ–ª–∞–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –±—ã—Å—Ç—Ä–µ–µ</li>
          <li>–û–Ω –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –Ω–∏–∑–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º</li>
          <li>–†–∞–±–æ—Ç–∞–µ—Ç –ª—É—á—à–µ –≤—Å–µ–≥–æ —Å React.memo –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏</li>
          <li>–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π</li>
        </ul>
      </div>
    </div>
  )
}

export default UseDeferredValueDemo