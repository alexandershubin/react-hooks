import { useState } from 'react'

// –°–ª–∞–π–¥ 10: –ü–æ—á–µ–º—É –Ω–µ–ª—å–∑—è async –≤ useEffect
function Slide10AsyncInUseEffect() {
  const [activeStep, setActiveStep] = useState(0)

  const steps = [
    {
      title: '‚ùå –ü—Ä–æ–±–ª–µ–º–∞: async –≤ useEffect',
      description: '–ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å async —Ñ—É–Ω–∫—Ü–∏–µ–π –Ω–∞–ø—Ä—è–º—É—é?',
      content: `**–ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å async –Ω–∞–ø—Ä—è–º—É—é:**

–ú–Ω–æ–≥–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—ã—Ç–∞—é—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫:`,
      code: `// ‚ùå –û–®–ò–ë–ö–ê! –¢–∞–∫ –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å!
useEffect(async () => {
  const data = await fetch('/api/data')
  const json = await data.json()
  setData(json)
}, [])

// React –≤—ã–¥–∞—Å—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ:
// ‚ö†Ô∏è Warning: useEffect must not return anything besides
// a function, which is used for clean-up.`,
      issue: `**–ß—Ç–æ –Ω–µ —Ç–∞–∫?**

async —Ñ—É–Ω–∫—Ü–∏—è –í–°–ï–ì–î–ê –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Promise!

useEffect –æ–∂–∏–¥–∞–µ—Ç:
‚Ä¢ –ª–∏–±–æ –Ω–∏—á–µ–≥–æ (undefined)
‚Ä¢ –ª–∏–±–æ cleanup —Ñ—É–Ω–∫—Ü–∏—é

–ê –ø–æ–ª—É—á–∞–µ—Ç Promise - —ç—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!`
    },
    {
      title: 'üîç –ü–æ—á–µ–º—É —ç—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞?',
      description: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ',
      content: `**–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç useEffect:**

1. React –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —ç—Ñ—Ñ–µ–∫—Ç–∞
2. –ó–∞–ø–æ–º–∏–Ω–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
3. –ï—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–∞—Å—å —Ñ—É–Ω–∫—Ü–∏—è - —ç—Ç–æ cleanup
4. –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ñ—Ñ–µ–∫—Ç–µ –∏–ª–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç cleanup

**–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å async:**`,
      code: `// –ß—Ç–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:
useEffect(async () => {
  // ...
}, [])

// –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤:
useEffect(() => {
  return new Promise(async (resolve) => {
    // ...
    resolve(undefined)
  })
}, [])

// React –ø–æ–ª—É—á–∞–µ—Ç Promise –≤–º–µ—Å—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏!
// React –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–∑–≤–∞—Ç—å Promise –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é
// promise() // ‚ùå TypeError!`,
      issue: `**–ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è:**

1. React –Ω–µ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å cleanup (—ç—Ç–æ Promise, –Ω–µ —Ñ—É–Ω–∫—Ü–∏—è)
2. –¢–µ—Ä—è–µ—Ç—Å—è –º–µ—Ö–∞–Ω–∏–∑–º –æ—á–∏—Å—Ç–∫–∏
3. –í–æ–∑–º–æ–∂–Ω—ã —É—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏
4. Race conditions (—Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ–Ω–∫–∏)`
    },
    {
      title: 'üêõ Race Condition',
      description: '–°–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ–Ω–∫–∏ –±–µ–∑ cleanup',
      content: `**–ß—Ç–æ —Ç–∞–∫–æ–µ Race Condition?**

–ö–æ–≥–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–≥—É—Ç –ø—Ä–∏–π—Ç–∏ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

**–°—Ü–µ–Ω–∞—Ä–∏–π –ø—Ä–æ–±–ª–µ–º—ã:**

1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç User ID = 1
2. –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –¥–ª—è User 1
3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω—è–µ—Ç –Ω–∞ User ID = 2
4. –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –¥–ª—è User 2
5. –ó–∞–ø—Ä–æ—Å User 2 –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º ‚úÖ
6. –ó–∞–ø—Ä–æ—Å User 1 –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –≤—Ç–æ—Ä—ã–º ‚ùå
7. –ù–∞ —ç–∫—Ä–∞–Ω–µ –¥–∞–Ω–Ω—ã–µ User 1, —Ö–æ—Ç—è –≤—ã–±—Ä–∞–Ω User 2!`,
      code: `// ‚ùå –ü–†–û–ë–õ–ï–ú–ê: Race condition
function UserProfile({ userId }) {
  const [user, setUser] = useState(null)

  useEffect(async () => {
    // –ó–∞–ø—Ä–æ—Å –¥–ª—è userId
    const response = await fetch(\`/api/users/\${userId}\`)
    const data = await response.json()
    setUser(data) // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç —Ç–æ–≥–æ, –∫—Ç–æ –ø—Ä–∏—à—ë–ª –ø–æ—Å–ª–µ–¥–Ω–∏–º!
  }, [userId])

  return <div>{user?.name}</div>
}

// Timeline –ø—Ä–æ–±–ª–µ–º—ã:
// 0ms:   userId=1, –∑–∞–ø—Ä–æ—Å –Ω–∞—á–∞—Ç
// 100ms: userId=2, –∑–∞–ø—Ä–æ—Å –Ω–∞—á–∞—Ç (–ø–µ—Ä–≤—ã–π –µ—â—ë –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω!)
// 150ms: –û—Ç–≤–µ—Ç –¥–ª—è userId=2 –ø—Ä–∏—à—ë–ª, setUser(user2) ‚úÖ
// 200ms: –û—Ç–≤–µ—Ç –¥–ª—è userId=1 –ø—Ä–∏—à—ë–ª, setUser(user1) ‚ùå
// –†–µ–∑—É–ª—å—Ç–∞—Ç: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º user1, –Ω–æ userId=2!`,
      issue: `**–ü–æ—á–µ–º—É –±–µ–∑ cleanup —ç—Ç–æ —Ö—É–∂–µ:**

–ï—Å–ª–∏ –±—ã –±—ã–ª cleanup, –º—ã –º–æ–≥–ª–∏ –±—ã:
‚Ä¢ –û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å
‚Ä¢ –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –æ—Ç–≤–µ—Ç—ã
‚Ä¢ –ò–∑–±–µ–∂–∞—Ç—å –≥–æ–Ω–∫–∏`
    },
    {
      title: '‚úÖ –†–µ—à–µ–Ω–∏–µ 1: async –≤–Ω—É—Ç—Ä–∏',
      description: '–°–æ–∑–¥–∞—Ç—å async —Ñ—É–Ω–∫—Ü–∏—é –≤–Ω—É—Ç—Ä–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞',
      content: `**–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±: async —Ñ—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ useEffect**

–°–æ–∑–¥–∞—ë–º async —Ñ—É–Ω–∫—Ü–∏—é –í–ù–£–¢–†–ò –∏ –≤—ã–∑—ã–≤–∞–µ–º –µ—ë:`,
      code: `// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: async —Ñ—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏
useEffect(() => {
  // –°–æ–∑–¥–∞—ë–º async —Ñ—É–Ω–∫—Ü–∏—é
  const fetchData = async () => {
    try {
      const response = await fetch('/api/data')
      const json = await response.json()
      setData(json)
    } catch (error) {
      setError(error)
    }
  }

  // –í—ã–∑—ã–≤–∞–µ–º –µ—ë
  fetchData()

  // –ú–æ–∂–µ–º –≤–µ—Ä–Ω—É—Ç—å cleanup —Ñ—É–Ω–∫—Ü–∏—é
  return () => {
    // –û—á–∏—Å—Ç–∫–∞
  }
}, [])

// useEffect –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é (cleanup), –Ω–µ Promise ‚úÖ`,
      issue: `**–ü–æ—á–µ–º—É —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**

1. useEffect –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ã—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
2. –í–Ω—É—Ç—Ä–∏ –Ω–µ—ë –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è async —Ñ—É–Ω–∫—Ü–∏—è
3. useEffect –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å cleanup
4. –í—Å—ë –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!`
    },
    {
      title: '‚úÖ –†–µ—à–µ–Ω–∏–µ 2: AbortController',
      description: '–û—Ç–º–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏',
      content: `**–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ: –æ—Ç–º–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–æ–≤**

–ò—Å–ø–æ–ª—å–∑—É–µ–º AbortController –¥–ª—è –æ—Ç–º–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:`,
      code: `// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: —Å –æ—Ç–º–µ–Ω–æ–π –∑–∞–ø—Ä–æ—Å–∞
useEffect(() => {
  // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ—Ç–º–µ–Ω—ã
  const abortController = new AbortController()

  const fetchUser = async () => {
    try {
      const response = await fetch(
        \`/api/users/\${userId}\`,
        { signal: abortController.signal } // –ü–µ—Ä–µ–¥–∞—ë–º —Å–∏–≥–Ω–∞–ª
      )
      const data = await response.json()
      setUser(data)
    } catch (error) {
      if (error.name === 'AbortError') {
        console.log('–ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω')
        return // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—Ç–º–µ–Ω—ë–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
      }
      setError(error)
    }
  }

  fetchUser()

  // Cleanup: –æ—Ç–º–µ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  return () => {
    abortController.abort() // –û—Ç–º–µ–Ω—è–µ—Ç fetch!
  }
}, [userId])

// –¢–µ–ø–µ—Ä—å –ø—Ä–∏ —Å–º–µ–Ω–µ userId:
// 1. –°—Ç–∞—Ä—ã–π —ç—Ñ—Ñ–µ–∫—Ç –≤—ã–∑—ã–≤–∞–µ—Ç cleanup
// 2. abort() –æ—Ç–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—ã–π –∑–∞–ø—Ä–æ—Å
// 3. –ù–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
// 4. Race condition —Ä–µ—à—ë–Ω! ‚úÖ`,
      issue: `**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**

‚úÖ –û—Ç–º–µ–Ω—è–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø—Ä–æ—Å—ã
‚úÖ –ù–µ—Ç race condition
‚úÖ –≠–∫–æ–Ω–æ–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫
‚úÖ –ò–∑–±–µ–≥–∞–µ—Ç —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏`
    },
    {
      title: '‚úÖ –†–µ—à–µ–Ω–∏–µ 3: —Ñ–ª–∞–≥ cancelled',
      description: '–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
      content: `**–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: —Ñ–ª–∞–≥ –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è**

–ï—Å–ª–∏ API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç–º–µ–Ω—É, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–ª–∞–≥:`,
      code: `// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: —Ñ–ª–∞–≥ cancelled
useEffect(() => {
  let cancelled = false // –§–ª–∞–≥ –æ—Ç–º–µ–Ω—ã

  const fetchUser = async () => {
    const response = await fetch(\`/api/users/\${userId}\`)
    const data = await response.json()

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º state
    if (!cancelled) {
      setUser(data) // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –æ—Ç–º–µ–Ω–µ–Ω–æ
    } else {
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω')
    }
  }

  fetchUser()

  // Cleanup: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥
  return () => {
    cancelled = true // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –æ—Ç–º–µ–Ω—ë–Ω–Ω—ã–π
  }
}, [userId])

// –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:
// 1. userId=1: –∑–∞–ø—Ä–æ—Å –Ω–∞—á–∞—Ç, cancelled=false
// 2. userId=2: cleanup –≤—ã–∑–≤–∞–Ω, cancelled=true –¥–ª—è userId=1
// 3. userId=2: –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, cancelled=false
// 4. –û—Ç–≤–µ—Ç userId=1 –ø—Ä–∏—Ö–æ–¥–∏—Ç, –Ω–æ cancelled=true
//    ‚Üí setUser –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è ‚úÖ
// 5. –û—Ç–≤–µ—Ç userId=2 –ø—Ä–∏—Ö–æ–¥–∏—Ç, cancelled=false
//    ‚Üí setUser –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è ‚úÖ`,
      issue: `**–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**

‚Ä¢ –°—Ç–∞—Ä—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã –±–µ–∑ AbortController
‚Ä¢ API –±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç–º–µ–Ω—ã
‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ —Å–ª—É—á–∞–∏

**–ú–∏–Ω—É—Å:** –ó–∞–ø—Ä–æ—Å –≤—Å—ë —Ä–∞–≤–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è (–ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç)`
    },
    {
      title: 'üéØ –ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä',
      description: '–í—Å–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤–º–µ—Å—Ç–µ',
      content: `**–ü—Ä–æ–¥–∞–∫—à–Ω-–≥–æ—Ç–æ–≤—ã–π –∫–æ–¥ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤—Å–µ—Ö —Å–ª—É—á–∞–µ–≤:**`,
      code: `function UserProfile({ userId }) {
  const [user, setUser] = useState(null)
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState(null)

  useEffect(() => {
    // –§–ª–∞–≥ –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
    let cancelled = false

    // –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ—Ç–º–µ–Ω—ã
    const abortController = new AbortController()

    const fetchUser = async () => {
      try {
        setLoading(true)
        setError(null)

        const response = await fetch(
          \`/api/users/\${userId}\`,
          {
            signal: abortController.signal,
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
            headers: {
              'Content-Type': 'application/json'
            }
          }
        )

        if (!response.ok) {
          throw new Error(\`HTTP \${response.status}\`)
        }

        const data = await response.json()

        // –î–≤–æ–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞!
        if (!cancelled) {
          setUser(data)
        }
      } catch (err) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—Ç–º–µ–Ω—ë–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        if (err.name === 'AbortError') {
          console.log('–ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω')
          return
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º cancelled –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –æ—à–∏–±–∫–∏
        if (!cancelled) {
          setError(err.message)
        }
      } finally {
        if (!cancelled) {
          setLoading(false)
        }
      }
    }

    fetchUser()

    // Cleanup —Ñ—É–Ω–∫—Ü–∏—è
    return () => {
      cancelled = true
      abortController.abort()
    }
  }, [userId]) // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–º–µ–Ω–µ userId

  if (loading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
  if (error) return <div>–û—à–∏–±–∫–∞: {error}</div>
  if (!user) return null

  return (
    <div>
      <h1>{user.name}</h1>
      <p>{user.email}</p>
    </div>
  )
}`,
      issue: `**–ß—Ç–æ –∑–¥–µ—Å—å —Å–¥–µ–ª–∞–Ω–æ:**

‚úÖ async —Ñ—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ useEffect
‚úÖ AbortController –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞
‚úÖ –§–ª–∞–≥ cancelled –¥–ª—è –¥–≤–æ–π–Ω–æ–π –∑–∞—â–∏—Ç—ã
‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
‚úÖ Loading –∏ error —Å–æ—Å—Ç–æ—è–Ω–∏—è
‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ response.ok
‚úÖ Cleanup —Ñ—É–Ω–∫—Ü–∏—è
‚úÖ –ù–µ—Ç race condition!`
    }
  ]

  return (
    <div style={{ padding: '40px', maxWidth: '1200px', margin: '0 auto' }}>
      <h1 style={{
        fontSize: '3em',
        textAlign: 'center',
        color: '#61dafb',
        marginBottom: '40px'
      }}>
        ‚ö†Ô∏è –ü–æ—á–µ–º—É –Ω–µ–ª—å–∑—è async –≤ useEffect
      </h1>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div style={{
        display: 'flex',
        gap: '10px',
        marginBottom: '30px',
        flexWrap: 'wrap',
        justifyContent: 'center'
      }}>
        {steps.map((step, idx) => (
          <button
            key={idx}
            onClick={() => setActiveStep(idx)}
            style={{
              padding: '12px 20px',
              fontSize: '0.9em',
              backgroundColor: activeStep === idx ? '#f59e0b' : '#f5f5f5',
              color: activeStep === idx ? 'white' : '#333',
              border: `2px solid ${activeStep === idx ? '#f59e0b' : '#ddd'}`,
              borderRadius: '8px',
              cursor: 'pointer',
              fontWeight: activeStep === idx ? 'bold' : 'normal',
              transition: 'all 0.3s ease',
              flex: '1 1 150px'
            }}
          >
            {idx === 0 ? '‚ùå' : '‚úÖ'} –®–∞–≥ {idx + 1}
          </button>
        ))}
      </div>

      {/* –¢–µ–∫—É—â–∏–π —à–∞–≥ */}
      <div style={{
        background: 'white',
        border: `3px solid ${activeStep === 0 || activeStep === 1 || activeStep === 2 ? '#ef4444' : '#10b981'}`,
        borderRadius: '20px',
        padding: '30px',
        boxShadow: '0 8px 24px rgba(0,0,0,0.15)'
      }}>
        <h2 style={{
          color: activeStep === 0 || activeStep === 1 || activeStep === 2 ? '#ef4444' : '#10b981',
          marginTop: 0,
          fontSize: '2em',
          marginBottom: '10px'
        }}>
          {steps[activeStep].title}
        </h2>

        <p style={{
          fontSize: '1.2em',
          color: '#666',
          fontStyle: 'italic',
          marginBottom: '20px'
        }}>
          {steps[activeStep].description}
        </p>

        <div style={{
          fontSize: '1.1em',
          lineHeight: '1.8',
          whiteSpace: 'pre-line',
          marginBottom: '20px'
        }}>
          {steps[activeStep].content}
        </div>

        {steps[activeStep].code && (
          <>
            <h3 style={{
              color: activeStep === 0 || activeStep === 1 || activeStep === 2 ? '#ef4444' : '#10b981',
              fontSize: '1.4em'
            }}>
              üíª –ö–æ–¥:
            </h3>
            <pre style={{
              background: '#263238',
              color: '#aed581',
              padding: '20px',
              borderRadius: '10px',
              fontSize: '0.9em',
              overflow: 'auto',
              lineHeight: '1.6',
              marginBottom: '20px'
            }}>
              {steps[activeStep].code}
            </pre>
          </>
        )}

        {steps[activeStep].issue && (
          <div style={{
            background: activeStep === 0 || activeStep === 1 || activeStep === 2 ? '#fee2e2' : '#d1fae5',
            border: `2px solid ${activeStep === 0 || activeStep === 1 || activeStep === 2 ? '#ef4444' : '#10b981'}`,
            borderRadius: '10px',
            padding: '20px',
            fontSize: '1.1em',
            lineHeight: '1.8',
            whiteSpace: 'pre-line'
          }}>
            {steps[activeStep].issue}
          </div>
        )}
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div style={{
        marginTop: '30px',
        textAlign: 'center',
        color: '#666',
        fontSize: '1.1em'
      }}>
        –®–∞–≥ {activeStep + 1} –∏–∑ {steps.length}
      </div>

      {/* –ò—Ç–æ–≥ */}
      {activeStep === steps.length - 1 && (
        <div style={{
          marginTop: '30px',
          background: '#fff9c4',
          border: '3px solid #fbc02d',
          borderRadius: '15px',
          padding: '25px',
          textAlign: 'center'
        }}>
          <h3 style={{ color: '#f57f17', marginTop: 0, fontSize: '1.5em' }}>
            üí° –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ
          </h3>
          <p style={{ fontSize: '1.2em', lineHeight: '1.8', margin: 0 }}>
            <strong>–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∞–π—Ç–µ useEffect async –Ω–∞–ø—Ä—è–º—É—é!</strong><br />
            –°–æ–∑–¥–∞–≤–∞–π—Ç–µ async —Ñ—É–Ω–∫—Ü–∏—é –≤–Ω—É—Ç—Ä–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ cleanup –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–æ–≤.
          </p>
        </div>
      )}
    </div>
  )
}

export default Slide10AsyncInUseEffect