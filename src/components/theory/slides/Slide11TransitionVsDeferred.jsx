import { useState } from 'react'

// –°–ª–∞–π–¥ 11: useTransition vs useDeferredValue
function Slide11TransitionVsDeferred() {
  const [activeStep, setActiveStep] = useState(0)

  const steps = [
    {
      title: 'ü§î –í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞?',
      description: '–û–±–∞ —Ä–µ—à–∞—é—Ç –æ–¥–Ω—É –ø—Ä–æ–±–ª–µ–º—É, –Ω–æ –ø–æ-—Ä–∞–∑–Ω–æ–º—É',
      content: `–û–±–∞ —Ö—É–∫–∞ –ø–æ–º–æ–≥–∞—é—Ç —Å–¥–µ–ª–∞—Ç—å UI –æ—Ç–∑—ã–≤—á–∏–≤—ã–º –ø—Ä–∏ —Ç—è–∂—ë–ª—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö, –Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ-—Ä–∞–∑–Ω–æ–º—É:

**useTransition:**
‚Ä¢ –¢—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—à—å **–û–ë–ù–û–í–õ–ï–ù–ò–ï** (–∫–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—à—å setState)
‚Ä¢ "–Ø —Ö–æ—á—É –æ—Ç–ª–æ–∂–∏—Ç—å –≠–¢–û –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è"
‚Ä¢ –û–±–æ—Ä–∞—á–∏–≤–∞–µ—à—å setState –≤ startTransition()

**useDeferredValue:**
‚Ä¢ –¢—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—à—å **–ó–ù–ê–ß–ï–ù–ò–ï** (React —Å–∞–º –µ–≥–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ—Ç)
‚Ä¢ "–°–¥–µ–ª–∞–π –º–Ω–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –∫–æ–ø–∏—é —ç—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è"
‚Ä¢ –°–æ–∑–¥–∞—ë—à—å –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∑–Ω–∞—á–µ–Ω–∏—è

**–ì–ª–∞–≤–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ:**
useTransition = –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º (action)
useDeferredValue = –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –¥–∞–Ω–Ω—ã–º–∏ (value)`,
      code: `// useTransition - –∫–æ–Ω—Ç—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
const [isPending, startTransition] = useTransition()

startTransition(() => {
  setState(newValue) // –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –≠–¢–û –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
})

// useDeferredValue - –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–Ω–∞—á–µ–Ω–∏—è
const [value, setValue] = useState('')
const deferredValue = useDeferredValue(value)
// value - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
// deferredValue - —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π`
    },
    {
      title: 'üîÑ useTransition - –∫–æ–Ω—Ç—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
      description: '–û–±–æ—Ä–∞—á–∏–≤–∞–µ–º setState –≤ startTransition',
      content: `**–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
‚Ä¢ –£ —Ç–µ–±—è –ï–°–¢–¨ –¥–æ—Å—Ç—É–ø –∫ –º–µ—Å—Ç—É –≥–¥–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è setState
‚Ä¢ –¢—ã —Å–∞–º –¥–µ–ª–∞–µ—à—å —Ç—è–∂—ë–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
‚Ä¢ –ù—É–∂–µ–Ω —Ñ–ª–∞–≥ isPending –¥–ª—è –ø–æ–∫–∞–∑–∞ –∑–∞–≥—Ä—É–∑–∫–∏

**–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
1. –í—ã–∑—ã–≤–∞–µ—à—å startTransition(() => setState(...))
2. React –ø–æ–º–µ—á–∞–µ—Ç —ç—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∫ –Ω–∏–∑–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ
3. isPending = true –ø–æ–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
4. –ú–æ–∂–µ—à—å –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏–Ω–Ω–µ—Ä –∏–ª–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏

**–ü–ª—é—Å—ã:**
‚úÖ –ë–æ–ª—å—à–µ –∫–æ–Ω—Ç—Ä–æ–ª—è (–∑–Ω–∞–µ—à—å –∫–æ–≥–¥–∞ –Ω–∞—á–∞–ª–æ—Å—å/–∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å)
‚úÖ –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π isPending —Ñ–ª–∞–≥
‚úÖ –ì–∏–±–∫–æ—Å—Ç—å - –º–æ–∂–µ—à—å –æ–±–µ—Ä–Ω—É—Ç—å –ª—é–±–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

**–ú–∏–Ω—É—Å—ã:**
‚ùå –ë–æ–ª—å—à–µ –∫–æ–¥–∞
‚ùå –ù—É–∂–Ω–æ –æ–±–æ—Ä–∞—á–∏–≤–∞—Ç—å –∫–∞–∂–¥–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é`,
      code: `function SearchPage() {
  const [query, setQuery] = useState('')
  const [results, setResults] = useState([])
  const [isPending, startTransition] = useTransition()

  const handleSearch = (e) => {
    const value = e.target.value

    // –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
    setQuery(value)

    // –ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º
    startTransition(() => {
      // –¢—è–∂—ë–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
      const filtered = hugeList.filter(item =>
        item.includes(value)
      )
      setResults(filtered)
    })
  }

  return (
    <>
      <input value={query} onChange={handleSearch} />
      {isPending && <Spinner />} {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É */}
      <Results items={results} />
    </>
  )
}

// Timeline:
// 0ms   - –í–≤–æ–¥ "a"
// 1ms   - setQuery('a') –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ (–∏–Ω–ø—É—Ç –æ–±–Ω–æ–≤–∏–ª—Å—è)
// 1ms   - isPending = true
// 100ms - setResults –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ
// 100ms - isPending = false`
    },
    {
      title: '‚è≥ useDeferredValue - –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–Ω–∞—á–µ–Ω–∏—è',
      description: '–°–æ–∑–¥–∞—ë–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –∫–æ–ø–∏—é –∑–Ω–∞—á–µ–Ω–∏—è',
      content: `**–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
‚Ä¢ –£ —Ç–µ–±—è –ù–ï–¢ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–µ—Å—Ç—É –≥–¥–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è setState
‚Ä¢ –¢—è–∂—ë–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ –¥–æ—á–µ—Ä–Ω–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—à—å —Å–æ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π
‚Ä¢ –ù—É–∂–Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç–∞ (–º–µ–Ω—å—à–µ –∫–æ–¥–∞)

**–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
1. –°–æ–∑–¥–∞—ë—à—å deferredValue = useDeferredValue(value)
2. React —Å–æ–∑–¥–∞—ë—Ç –∫–æ–ø–∏—é value –∫–æ—Ç–æ—Ä–∞—è –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
3. value –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
4. deferredValue –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ñ–æ–Ω–µ (–Ω–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)

**–ü–ª—é—Å—ã:**
‚úÖ –ú–µ–Ω—å—à–µ –∫–æ–¥–∞
‚úÖ –ù–µ –Ω—É–∂–Ω–æ –æ–±–æ—Ä–∞—á–∏–≤–∞—Ç—å setState
‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç "–º–∞–≥–∏—á–µ—Å–∫–∏"

**–ú–∏–Ω—É—Å—ã:**
‚ùå –ù–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ isPending (–Ω–æ –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏—Ç—å value !== deferredValue)
‚ùå –ú–µ–Ω—å—à–µ –∫–æ–Ω—Ç—Ä–æ–ª—è`,
      code: `function SearchPage() {
  const [query, setQuery] = useState('')

  // –°–æ–∑–¥–∞—ë–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é query
  const deferredQuery = useDeferredValue(query)

  const handleSearch = (e) => {
    setQuery(e.target.value) // –û–±—ã—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  }

  return (
    <>
      {/* –ò–Ω–ø—É—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç query - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ */}
      <input value={query} onChange={handleSearch} />

      {/* –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É */}
      {query !== deferredQuery && <Spinner />}

      {/* –°–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç deferredQuery - —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π */}
      <HeavyList searchQuery={deferredQuery} />
    </>
  )
}

function HeavyList({ searchQuery }) {
  // –¢—è–∂—ë–ª–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–¥–µ—Å—å
  const results = useMemo(() =>
    hugeList.filter(item => item.includes(searchQuery))
  , [searchQuery])

  return <Results items={results} />
}

// Timeline:
// 0ms   - –í–≤–æ–¥ "a"
// 1ms   - setQuery('a') –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ
// 1ms   - query = 'a', deferredQuery = '' (—Å—Ç–∞—Ä–æ–µ)
// 100ms - deferredQuery = 'a' ‚úÖ (—Å–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–∏–ª—Å—è)`
    },
    {
      title: '‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ: useTransition',
      description: '–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤ —Å useTransition',
      content: `**–ü—Ä–∏–º–µ—Ä: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ç—è–∂—ë–ª—ã–º–∏ —Ç–∞–±–∞–º–∏**

–ü—Ä–µ–¥—Å—Ç–∞–≤—å —á—Ç–æ —É —Ç–µ–±—è —Ç–∞–±—ã —Å —Ç—è–∂—ë–ª—ã–º–∏ —Å–ø–∏—Å–∫–∞–º–∏ (5000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–∞–∂–¥—ã–π).

**–ü—Ä–æ–±–ª–µ–º–∞ –±–µ–∑ useTransition:**
‚Ä¢ –ö–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É ‚Üí UI –∑–∞–≤–∏—Å–∞–µ—Ç –Ω–∞ 300–º—Å
‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–∏–¥–∏—Ç —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞
‚Ä¢ –ü–ª–æ—Ö–æ–π UX ‚ùå

**–†–µ—à–µ–Ω–∏–µ —Å useTransition:**
‚Ä¢ –ö–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É ‚Üí –∫–Ω–æ–ø–∫–∞ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
‚Ä¢ –°—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Å—Ç–∞—ë—Ç—Å—è –≤–∏–¥–∏–º—ã–º (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º)
‚Ä¢ –ù–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –≤ —Ñ–æ–Ω–µ
‚Ä¢ –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥! ‚úÖ`,
      code: `// –ë–ï–ó useTransition
function Tabs() {
  const [tab, setTab] = useState('posts')

  return (
    <>
      <button onClick={() => setTab('posts')}>
        –ü–æ—Å—Ç—ã
      </button>
      <button onClick={() => setTab('comments')}>
        –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
      </button>

      {tab === 'posts' && <HeavyPostsList />}
      {tab === 'comments' && <HeavyCommentsList />}
    </>
  )
}
// ‚ùå –ü—Ä–∏ –∫–ª–∏–∫–µ UI –∑–∞–≤–∏—Å–∞–µ—Ç –Ω–∞ 300–º—Å

// –° useTransition ‚úÖ
function Tabs() {
  const [tab, setTab] = useState('posts')
  const [isPending, startTransition] = useTransition()

  const switchTab = (newTab) => {
    startTransition(() => {
      setTab(newTab)
    })
  }

  return (
    <>
      <button onClick={() => switchTab('posts')}>
        –ü–æ—Å—Ç—ã
      </button>
      <button onClick={() => switchTab('comments')}>
        –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
      </button>

      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É */}
      <div style={{ opacity: isPending ? 0.5 : 1 }}>
        {tab === 'posts' && <HeavyPostsList />}
        {tab === 'comments' && <HeavyCommentsList />}
      </div>
    </>
  )
}
// ‚úÖ –ö–Ω–æ–ø–∫–∞ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
// ‚úÖ –°—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Å—Ç–∞—ë—Ç—Å—è –≤–∏–¥–∏–º—ã–º
// ‚úÖ –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥!`
    },
    {
      title: '‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ: useDeferredValue',
      description: '–ü–æ–∏—Å–∫ —Å —Ç—è–∂—ë–ª—ã–º —Å–ø–∏—Å–∫–æ–º —á–µ—Ä–µ–∑ useDeferredValue',
      content: `**–¢–æ—Ç –∂–µ –ø—Ä–∏–º–µ—Ä —Å useDeferredValue:**

**–ö–æ–≥–¥–∞ –ø—Ä–µ–¥–ø–æ—á–µ—Å—Ç—å useDeferredValue:**
‚Ä¢ –¢—è–∂—ë–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ –¥–æ—á–µ—Ä–Ω–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—à—å —Å–æ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π (–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ setState)
‚Ä¢ –ù—É–∂–Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç–∞

**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:**
–ù–µ –Ω—É–∂–Ω–æ –æ–±–æ—Ä–∞—á–∏–≤–∞—Ç—å setState - –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞—ë—à—å –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∑–Ω–∞—á–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞—ë—à—å –µ—ë –¥–∞–ª—å—à–µ.`,
      code: `// –° useDeferredValue ‚úÖ
function Search() {
  const [query, setQuery] = useState('')
  const deferredQuery = useDeferredValue(query)

  return (
    <>
      <input
        value={query}
        onChange={(e) => setQuery(e.target.value)}
      />

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {query !== deferredQuery && (
        <div>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...</div>
      )}

      {/* –ü–µ—Ä–µ–¥–∞—ë–º –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ */}
      <HeavyList query={deferredQuery} />
    </>
  )
}

function HeavyList({ query }) {
  const results = useMemo(() => {
    // –¢—è–∂—ë–ª–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è 5000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    return items.filter(item =>
      item.name.toLowerCase().includes(query.toLowerCase())
    )
  }, [query])

  return (
    <div>
      {results.map(item => (
        <div key={item.id}>{item.name}</div>
      ))}
    </div>
  )
}

// ‚úÖ –ú–µ–Ω—å—à–µ –∫–æ–¥–∞
// ‚úÖ –ò–Ω–ø—É—Ç –æ—Ç–∑—ã–≤—á–∏–≤—ã–π
// ‚úÖ –°–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ñ–æ–Ω–µ`
    },
    {
      title: 'üìä –ö–æ–≥–¥–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?',
      description: '–¢–∞–±–ª–∏—Ü–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
      content: `**–ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ –≤—ã–±–æ—Ä–∞:**

1Ô∏è‚É£ **useTransition - –µ—Å–ª–∏ –º–æ–∂–µ—à—å –æ–±–µ—Ä–Ω—É—Ç—å setState:**
   ‚Ä¢ –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
   ‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤
   ‚Ä¢ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
   ‚Ä¢ –ù—É–∂–µ–Ω —Ñ–ª–∞–≥ isPending

2Ô∏è‚É£ **useDeferredValue - –µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—à—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º:**
   ‚Ä¢ –ü–æ–∏—Å–∫ —Å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º
   ‚Ä¢ –ñ–∏–≤–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞
   ‚Ä¢ –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
   ‚Ä¢ –ù—É–∂–Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç–∞

3Ô∏è‚É£ **–û–±–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Ö–æ—Ä–æ—à–æ:**
   ‚Ä¢ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π
   ‚Ä¢ –í—ã–±–∏—Ä–∞–π —á—Ç–æ —É–¥–æ–±–Ω–µ–µ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–ª—É—á–∞–µ`,
      code: `// useTransition - –∫–æ–Ω—Ç—Ä–æ–ª—å action
function Example1() {
  const [state, setState] = useState(initial)
  const [isPending, startTransition] = useTransition()

  const handleAction = () => {
    startTransition(() => {
      setState(newValue) // –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    })
  }

  return <Button onClick={handleAction} />
}

// useDeferredValue - –∫–æ–Ω—Ç—Ä–æ–ª—å value
function Example2() {
  const [value, setValue] = useState('')
  const deferredValue = useDeferredValue(value)

  return (
    <>
      <Input value={value} onChange={setValue} />
      <HeavyComponent value={deferredValue} />
    </>
  )
}

// –û–±–∞ —Ä–µ—à–∞—é—Ç –æ–¥–Ω—É –∑–∞–¥–∞—á—É:
// –°–¥–µ–ª–∞—Ç—å UI –æ—Ç–∑—ã–≤—á–∏–≤—ã–º –ø—Ä–∏ —Ç—è–∂—ë–ª—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö! ‚úÖ`
    }
  ]

  return (
    <div style={{ padding: '40px', maxWidth: '1200px', margin: '0 auto' }}>
      <h1 style={{
        fontSize: '3em',
        textAlign: 'center',
        color: '#61dafb',
        marginBottom: '40px'
      }}>
        üîÄ useTransition vs useDeferredValue
      </h1>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º */}
      <div style={{
        display: 'flex',
        gap: '10px',
        marginBottom: '30px',
        flexWrap: 'wrap',
        justifyContent: 'center'
      }}>
        {steps.map((step, idx) => (
          <button
            key={idx}
            onClick={() => setActiveStep(idx)}
            style={{
              padding: '12px 20px',
              fontSize: '0.9em',
              backgroundColor: activeStep === idx ? '#8b5cf6' : '#f5f5f5',
              color: activeStep === idx ? 'white' : '#333',
              border: `2px solid ${activeStep === idx ? '#8b5cf6' : '#ddd'}`,
              borderRadius: '8px',
              cursor: 'pointer',
              fontWeight: activeStep === idx ? 'bold' : 'normal',
              transition: 'all 0.3s ease',
              flex: '1 1 200px'
            }}
          >
            –®–∞–≥ {idx + 1}
          </button>
        ))}
      </div>

      {/* –¢–µ–∫—É—â–∏–π —à–∞–≥ */}
      <div style={{
        background: 'white',
        border: '3px solid #8b5cf6',
        borderRadius: '20px',
        padding: '30px',
        boxShadow: '0 8px 24px rgba(0,0,0,0.15)'
      }}>
        <h2 style={{
          color: '#8b5cf6',
          marginTop: 0,
          fontSize: '2em',
          marginBottom: '10px'
        }}>
          {steps[activeStep].title}
        </h2>

        <p style={{
          fontSize: '1.2em',
          color: '#666',
          fontStyle: 'italic',
          marginBottom: '20px'
        }}>
          {steps[activeStep].description}
        </p>

        <div style={{
          fontSize: '1.1em',
          lineHeight: '1.8',
          whiteSpace: 'pre-line',
          marginBottom: '20px'
        }}>
          {steps[activeStep].content}
        </div>

        {steps[activeStep].code && (
          <>
            <h3 style={{ color: '#8b5cf6', fontSize: '1.4em' }}>
              üíª –ö–æ–¥:
            </h3>
            <pre style={{
              background: '#263238',
              color: '#aed581',
              padding: '20px',
              borderRadius: '10px',
              fontSize: '0.9em',
              overflow: 'auto',
              lineHeight: '1.6',
              margin: 0
            }}>
              {steps[activeStep].code}
            </pre>
          </>
        )}
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div style={{
        marginTop: '30px',
        textAlign: 'center',
        color: '#666',
        fontSize: '1.1em'
      }}>
        –®–∞–≥ {activeStep + 1} –∏–∑ {steps.length}
      </div>

      {/* –ò—Ç–æ–≥–æ–≤–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ */}
      {activeStep === steps.length - 1 && (
        <div style={{
          marginTop: '30px',
          background: '#fff9c4',
          border: '3px solid #fbc02d',
          borderRadius: '15px',
          padding: '25px',
          textAlign: 'center'
        }}>
          <h3 style={{ color: '#f57f17', marginTop: 0, fontSize: '1.5em' }}>
            üí° –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ
          </h3>
          <p style={{ fontSize: '1.2em', lineHeight: '1.8', margin: 0 }}>
            <strong>useTransition</strong> - –∫–æ–≥–¥–∞ –º–æ–∂–µ—à—å –æ–±–µ—Ä–Ω—É—Ç—å setState<br />
            <strong>useDeferredValue</strong> - –∫–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—à—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º<br />
            –û–±–∞ –¥–µ–ª–∞—é—Ç UI –æ—Ç–∑—ã–≤—á–∏–≤—ã–º! üöÄ
          </p>
        </div>
      )}
    </div>
  )
}

export default Slide11TransitionVsDeferred
