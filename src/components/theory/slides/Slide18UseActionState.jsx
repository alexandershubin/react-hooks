import { useState } from 'react'

function Slide18UseActionState() {
  const [currentStep, setCurrentStep] = useState(0)

  const steps = [
    {
      title: 'üé¨ –ß—Ç–æ —Ç–∞–∫–æ–µ useActionState?',
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π',
      content: `**useActionState** - —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ñ–æ—Ä–º –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π. –≠—Ç–æ "–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π" —Å–ø–æ—Å–æ–± —Ä–∞–±–æ—Ç—ã —Å Server Actions –≤ React 19.

**–ü—Ä–æ–±–ª–µ–º–∞:**
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã ‚Üí –Ω—É–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å loading, error, success
‚Ä¢ –ü—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –ø–∏—Å–∞—Ç—å –∫—É—á—É useState
‚Ä¢ –°–ª–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º —É–ª—É—á—à–µ–Ω–∏–µ–º

**–†–µ—à–µ–Ω–∏–µ:**
‚Ä¢ –û–¥–∏–Ω —Ö—É–∫ –≤–º–µ—Å—Ç–æ 3-4 useState
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ —Å —Ñ–æ—Ä–º–∞–º–∏
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Server Actions –∏–∑ –∫–æ—Ä–æ–±–∫–∏
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ JavaScript (progressive enhancement)`,
      code: `// ‚ùå –ë–ï–ó useActionState - –º–Ω–æ–≥–æ –∫–æ–¥–∞
function Form() {
  const [data, setData] = useState(null)
  const [error, setError] = useState(null)
  const [loading, setLoading] = useState(false)

  async function handleSubmit(e) {
    e.preventDefault()
    setLoading(true)
    setError(null)

    try {
      const result = await submitForm(formData)
      setData(result)
    } catch (err) {
      setError(err.message)
    } finally {
      setLoading(false)
    }
  }

  return (
    <form onSubmit={handleSubmit}>
      {loading && <Spinner />}
      {error && <Error message={error} />}
      {/* ... */}
    </form>
  )
}`
    },
    {
      title: '‚ú® –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç useActionState?',
      description: '–°–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ –º–µ—Ö–∞–Ω–∏–∫–∞',
      content: `**–°–∏–Ω—Ç–∞–∫—Å–∏—Å:**
\`\`\`javascript
const [state, formAction, isPending] = useActionState(
  action,        // –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  initialState   // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
)
\`\`\`

**–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
‚Ä¢ \`state\` - —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞)
‚Ä¢ \`formAction\` - —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è form action (—Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ JS!)
‚Ä¢ \`isPending\` - true –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

**–ú–µ—Ö–∞–Ω–∏–∫–∞:**
1. –ü—Ä–∏ submit —Ñ–æ—Ä–º—ã –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è \`action(prevState, formData)\`
2. \`isPending\` —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è true
3. –ö–æ–≥–¥–∞ action –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è - \`state\` –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è
4. \`isPending\` —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è false`,
      code: `// ‚úÖ –° useActionState - –ø—Ä–æ—Å—Ç–æ –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ
function Form() {
  const [state, formAction, isPending] = useActionState(
    async (prevState, formData) => {
      try {
        const result = await submitForm(formData)
        return { success: true, data: result }
      } catch (error) {
        return { success: false, error: error.message }
      }
    },
    { success: null, data: null, error: null }
  )

  return (
    <form action={formAction}>
      {isPending && <Spinner />}
      {state.error && <Error message={state.error} />}
      {state.success && <Success data={state.data} />}
      <button disabled={isPending}>
        {isPending ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
      </button>
    </form>
  )
}`
    },
    {
      title: 'üìù –ü—Ä–∏–º–µ—Ä: –§–æ—Ä–º–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π',
      description: '–í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫',
      content: `**–ó–∞–¥–∞—á–∞:**
–°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞.`,
      code: `function SignupForm() {
  const [state, formAction, isPending] = useActionState(
    async (prevState, formData) => {
      const email = formData.get('email')
      const password = formData.get('password')

      // –í–∞–ª–∏–¥–∞—Ü–∏—è
      if (!email || !email.includes('@')) {
        return {
          success: false,
          errors: { email: '–ù–µ–≤–µ—Ä–Ω—ã–π email' }
        }
      }

      if (password.length < 6) {
        return {
          success: false,
          errors: { password: '–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤' }
        }
      }

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      try {
        const user = await registerUser({ email, password })
        return { success: true, user }
      } catch (error) {
        return {
          success: false,
          errors: { _form: error.message }
        }
      }
    },
    { success: null, errors: {} }
  )

  return (
    <form action={formAction}>
      <input name="email" type="email" required />
      {state.errors?.email && (
        <span style={{ color: 'red' }}>{state.errors.email}</span>
      )}

      <input name="password" type="password" required />
      {state.errors?.password && (
        <span style={{ color: 'red' }}>{state.errors.password}</span>
      )}

      {state.errors?._form && (
        <div style={{ color: 'red' }}>{state.errors._form}</div>
      )}

      {state.success && (
        <div>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {state.user.name}!</div>
      )}

      <button disabled={isPending}>
        {isPending ? '‚è≥ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
      </button>
    </form>
  )
}`
    },
    {
      title: 'üöÄ –ü—Ä–∏–º–µ—Ä: Server Actions (Next.js)',
      description: '–†–∞–±–æ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏',
      content: `**–ó–∞–¥–∞—á–∞:**
–°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ë–ï–ó JavaScript (progressive enhancement).`,
      code: `// ‚úÖ Server Action (—Ñ–∞–π–ª actions.js)
'use server'

export async function createPost(prevState, formData) {
  const title = formData.get('title')
  const content = formData.get('content')

  if (!title || title.length < 3) {
    return {
      success: false,
      error: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞'
    }
  }

  try {
    const post = await db.posts.create({
      title,
      content,
      userId: getCurrentUserId()
    })

    revalidatePath('/posts') // –û–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à
    return { success: true, post }
  } catch (error) {
    return { success: false, error: error.message }
  }
}

// ‚úÖ Client Component
'use client'
import { useActionState } from 'react'
import { createPost } from './actions'

function CreatePostForm() {
  const [state, formAction, isPending] = useActionState(
    createPost,
    { success: null, error: null }
  )

  return (
    <form action={formAction}>
      <input name="title" required />
      <textarea name="content" required />

      {state.error && <div style={{ color: 'red' }}>
        {state.error}
      </div>}

      {state.success && <div style={{ color: 'green' }}>
        –ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω! ID: {state.post.id}
      </div>}

      <button disabled={isPending}>
        {isPending ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç'}
      </button>
    </form>
  )
}

// üéØ –†–∞–±–æ—Ç–∞–µ—Ç –ë–ï–ó JavaScript!
// –ï—Å–ª–∏ JS –æ—Ç–∫–ª—é—á–µ–Ω - —Ñ–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –æ–±—ã—á–Ω—ã–º POST`
    },
    {
      title: 'üîÑ –ü—Ä–∏–º–µ—Ä: –ú–Ω–æ–≥–æ—à–∞–≥–æ–≤–∞—è —Ñ–æ—Ä–º–∞',
      description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ prevState –¥–ª—è —à–∞–≥–æ–≤',
      content: `**–ó–∞–¥–∞—á–∞:**
–°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —à–∞–≥–∞–º–∏, –≥–¥–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–µ—Ç—Å—è.`,
      code: `function MultiStepForm() {
  const [state, formAction, isPending] = useActionState(
    async (prevState, formData) => {
      const currentStep = prevState.step || 1

      if (currentStep === 1) {
        const name = formData.get('name')
        const email = formData.get('email')

        if (!name || !email) {
          return {
            ...prevState,
            errors: { step1: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è' }
          }
        }

        return {
          step: 2,
          data: { name, email },
          errors: {}
        }
      }

      if (currentStep === 2) {
        const address = formData.get('address')
        const phone = formData.get('phone')

        if (!address || !phone) {
          return {
            ...prevState,
            errors: { step2: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è' }
          }
        }

        // –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
        try {
          const result = await submitOrder({
            ...prevState.data,
            address,
            phone
          })

          return {
            step: 3,
            success: true,
            orderId: result.id
          }
        } catch (error) {
          return {
            ...prevState,
            errors: { submit: error.message }
          }
        }
      }
    },
    { step: 1, data: {}, errors: {} }
  )

  return (
    <form action={formAction}>
      {state.step === 1 && (
        <>
          <h2>–®–∞–≥ 1: –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>
          <input name="name" placeholder="–ò–º—è" required />
          <input name="email" type="email" placeholder="Email" required />
          {state.errors?.step1 && (
            <div style={{ color: 'red' }}>{state.errors.step1}</div>
          )}
        </>
      )}

      {state.step === 2 && (
        <>
          <h2>–®–∞–≥ 2: –î–æ—Å—Ç–∞–≤–∫–∞</h2>
          <p>–ò–º—è: {state.data.name}</p>
          <input name="address" placeholder="–ê–¥—Ä–µ—Å" required />
          <input name="phone" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" required />
          {state.errors?.step2 && (
            <div style={{ color: 'red' }}>{state.errors.step2}</div>
          )}
        </>
      )}

      {state.step === 3 && (
        <div>
          <h2>‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h2>
          <p>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {state.orderId}</p>
        </div>
      )}

      {state.step < 3 && (
        <button disabled={isPending}>
          {isPending ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–î–∞–ª–µ–µ'}
        </button>
      )}
    </form>
  )
}`
    },
    {
      title: '‚ö° useActionState + useOptimistic',
      description: '–ö–æ–º–±–∏–Ω–∞—Ü–∏—è –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ UX',
      content: `**–ó–∞–¥–∞—á–∞:**
–°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–º UI.`,
      code: `function CommentForm({ postId, comments }) {
  const [optimisticComments, addOptimisticComment] = useOptimistic(
    comments,
    (state, newComment) => [...state, newComment]
  )

  const [state, formAction, isPending] = useActionState(
    async (prevState, formData) => {
      const text = formData.get('comment')

      // –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º
      const tempComment = {
        id: 'temp-' + Date.now(),
        text,
        author: 'You',
        pending: true
      }
      addOptimisticComment(tempComment)

      try {
        const comment = await postComment(postId, text)
        return { success: true, comment }
      } catch (error) {
        return { success: false, error: error.message }
      }
    },
    { success: null, error: null }
  )

  return (
    <div>
      <div>
        {optimisticComments.map(comment => (
          <div
            key={comment.id}
            style={{ opacity: comment.pending ? 0.5 : 1 }}
          >
            <strong>{comment.author}:</strong> {comment.text}
            {comment.pending && ' ‚è≥'}
          </div>
        ))}
      </div>

      <form action={formAction}>
        <textarea name="comment" required />
        {state.error && (
          <div style={{ color: 'red' }}>{state.error}</div>
        )}
        <button disabled={isPending}>
          {isPending ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
        </button>
      </form>
    </div>
  )
}

// üéØ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ú–ì–ù–û–í–ï–ù–ù–û
// üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
// üéØ Progressive enhancement –∏–∑ –∫–æ—Ä–æ–±–∫–∏`
    },
    {
      title: '‚ö†Ô∏è –ö–æ–≥–¥–∞ –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useActionState',
      description: '–í–∞–∂–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è',
      content: `**‚ùå –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–≥–¥–∞:**

1Ô∏è‚É£ **–ü—Ä–æ—Å—Ç—ã–µ —Ñ–æ—Ä–º—ã –±–µ–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏**
   ‚Ä¢ –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
   ‚Ä¢ –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ useState

2Ô∏è‚É£ **–°–ª–æ–∂–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞**
   ‚Ä¢ –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ —Å–ª–æ–∂–Ω–∞—è –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
   ‚Ä¢ –õ—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å React Query / SWR

3Ô∏è‚É£ **–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Server Actions**
   ‚Ä¢ –í Vite/CRA –Ω–µ—Ç Server Actions
   ‚Ä¢ –¢–æ–≥–¥–∞ useActionState –∏–∑–±—ã—Ç–æ—á–µ–Ω

4Ô∏è‚É£ **–ù—É–∂–µ–Ω –¥–µ—Ç–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å**
   ‚Ä¢ –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã
   ‚Ä¢ –†–µ—Ç—Ä–∞–∏, –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ - –Ω—É–∂–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞`,
      code: `// ‚ùå –ü–õ–û–•–û: –ø—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º–∞ –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞
function LocalForm() {
  const [state, formAction] = useActionState(
    async (prev, formData) => {
      return { value: formData.get('name') }
    },
    { value: '' }
  )
  // –ò–∑–±—ã—Ç–æ—á–Ω–æ! useState –ø—Ä–æ—â–µ
}

// ‚úÖ –•–û–†–û–®–û: –ø—Ä–æ—Å—Ç–æ–π useState
function LocalForm() {
  const [value, setValue] = useState('')
  return (
    <input
      value={value}
      onChange={e => setValue(e.target.value)}
    />
  )
}

// ‚ùå –ü–õ–û–•–û: —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞
function ComplexForm() {
  const [state, formAction] = useActionState(async () => {
    // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    // –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ä–µ—Ç—Ä–∞–∏...
    // useActionState –Ω–µ –¥–ª—è —ç—Ç–æ–≥–æ!
  })
}

// ‚úÖ –•–û–†–û–®–û: React Query
function ComplexForm() {
  const mutation = useMutation({
    mutationFn: submitForm,
    onSuccess: () => {
      queryClient.invalidateQueries(['posts'])
    },
    retry: 3
  })
}`
    },
    {
      title: 'üéØ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useActionState',
      description: '–ò–¥–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏',
      content: `**‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–≥–¥–∞:**

1Ô∏è‚É£ **–§–æ—Ä–º—ã —Å Server Actions (Next.js)**
   ‚Ä¢ Progressive enhancement –∏–∑ –∫–æ—Ä–æ–±–∫–∏
   ‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ JavaScript

2Ô∏è‚É£ **–ü—Ä–æ—Å—Ç—ã–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã**
   ‚Ä¢ –õ–æ–≥–∏–Ω, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
   ‚Ä¢ –ù–µ –Ω—É–∂–Ω–∞ —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞

3Ô∏è‚É£ **–ù—É–∂–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å useOptimistic**
   ‚Ä¢ –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è + Server Actions
   ‚Ä¢ –ò–¥–µ–∞–ª—å–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è

4Ô∏è‚É£ **–ú–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã–µ —Ñ–æ—Ä–º—ã**
   ‚Ä¢ prevState –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —à–∞–≥–æ–≤
   ‚Ä¢ –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —à–∞–≥–∞–º–∏`,
      code: `// ‚úÖ –ò–¥–µ–∞–ª—å–Ω—ã–π –∫–µ–π—Å: Server Action
'use server'
export async function login(prevState, formData) {
  const email = formData.get('email')
  const password = formData.get('password')

  const user = await authenticateUser(email, password)

  if (!user) {
    return { error: '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å' }
  }

  await createSession(user.id)
  redirect('/dashboard')
}

// Client
'use client'
function LoginForm() {
  const [state, formAction, isPending] = useActionState(
    login,
    { error: null }
  )

  return (
    <form action={formAction}>
      <input name="email" type="email" required />
      <input name="password" type="password" required />
      {state.error && <div>{state.error}</div>}
      <button disabled={isPending}>
        {isPending ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
      </button>
    </form>
  )
}

// üéØ –†–∞–±–æ—Ç–∞–µ—Ç –ë–ï–ó JavaScript!
// üéØ –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
// üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π loading state`
    },
    {
      title: 'üìä –ò—Ç–æ–≥–∏: useActionState',
      description: '–ì–ª–∞–≤–Ω–æ–µ –æ —Ö—É–∫–µ',
      content: `**–ß—Ç–æ —Ç–∞–∫–æ–µ useActionState?**
–•—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π (–æ—Å–æ–±–µ–Ω–Ω–æ Server Actions). –ó–∞–º–µ–Ω–∞ useState + useEffect –¥–ª—è —Ñ–æ—Ä–º.

**–ü–ª—é—Å—ã:**
‚úÖ –û–¥–∏–Ω —Ö—É–∫ –≤–º–µ—Å—Ç–æ 3-4 useState
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π loading state (isPending)
‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Å Server Actions –∏–∑ –∫–æ—Ä–æ–±–∫–∏
‚úÖ Progressive enhancement - —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ JS
‚úÖ –î–æ—Å—Ç—É–ø –∫ prevState –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã—Ö —Ñ–æ—Ä–º

**–ú–∏–Ω—É—Å—ã:**
‚ùå –¢–æ–ª—å–∫–æ –¥–ª—è Next.js —Å Server Actions (–≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ)
‚ùå –ù–µ—Ç –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–æ–≤, —Ä–µ—Ç—Ä–∞–µ–≤, –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
‚ùå –î–ª—è —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏ - –ª—É—á—à–µ React Query

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å Server Actions –≤ Next.js
üéØ –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ —Å useOptimistic –¥–ª—è –ª—É—á—à–µ–≥–æ UX
üéØ –î–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º - React Query / SWR
üéØ –î–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ä–º - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ useState`,
      code: `// üéØ –ò–¥–µ–∞–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
'use server'
export async function serverAction(prevState, formData) {
  // –í–∞–ª–∏–¥–∞—Ü–∏—è
  const data = Object.fromEntries(formData)
  const errors = validate(data)
  if (errors) return { success: false, errors }

  // –î–µ–π—Å—Ç–≤–∏–µ
  try {
    const result = await performAction(data)
    revalidatePath('/items')
    return { success: true, result }
  } catch (error) {
    return { success: false, error: error.message }
  }
}

// Client
function Form() {
  const [state, formAction, isPending] = useActionState(
    serverAction,
    { success: null }
  )

  return (
    <form action={formAction}>
      {/* inputs */}
      {state.errors && <Errors errors={state.errors} />}
      {state.success && <Success data={state.result} />}
      <button disabled={isPending}>Submit</button>
    </form>
  )
}`
    }
  ]

  const nextStep = () => {
    setCurrentStep((prev) => (prev + 1) % steps.length)
  }

  const prevStep = () => {
    setCurrentStep((prev) => (prev - 1 + steps.length) % steps.length)
  }

  const step = steps[currentStep]

  return (
    <div style={{ padding: '40px', fontFamily: 'system-ui, -apple-system, sans-serif' }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        padding: '30px',
        borderRadius: '15px',
        marginBottom: '30px',
        color: 'white'
      }}>
        <h2 style={{ margin: '0 0 10px 0', fontSize: '2.5em' }}>
          {step.title}
        </h2>
        <p style={{ margin: 0, fontSize: '1.3em', opacity: 0.9 }}>
          {step.description}
        </p>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr 1fr',
        gap: '30px',
        marginBottom: '30px'
      }}>
        {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
        <div style={{
          background: '#f8f9fa',
          padding: '30px',
          borderRadius: '15px',
          lineHeight: '1.8'
        }}>
          <div style={{
            whiteSpace: 'pre-line',
            fontSize: '1.1em'
          }}>
            {step.content}
          </div>
        </div>

        {/* –ö–æ–¥ */}
        <div style={{
          background: '#1e1e1e',
          padding: '25px',
          borderRadius: '15px',
          color: '#d4d4d4',
          fontFamily: 'Monaco, Consolas, monospace',
          fontSize: '0.95em',
          lineHeight: '1.6',
          overflowX: 'auto',
          position: 'relative'
        }}>
          <div style={{
            position: 'absolute',
            top: '10px',
            right: '10px',
            background: '#667eea',
            color: 'white',
            padding: '5px 10px',
            borderRadius: '5px',
            fontSize: '0.8em'
          }}>
            JavaScript
          </div>
          <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>
            <code>{step.code}</code>
          </pre>
        </div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º */}
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginTop: '20px'
      }}>
        <button
          onClick={prevStep}
          style={{
            padding: '12px 24px',
            fontSize: '1em',
            backgroundColor: '#667eea',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontWeight: 'bold'
          }}
        >
          ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
        </button>

        <div style={{
          fontSize: '1.1em',
          fontWeight: 'bold',
          color: '#667eea'
        }}>
          –®–∞–≥ {currentStep + 1} –∏–∑ {steps.length}
        </div>

        <button
          onClick={nextStep}
          style={{
            padding: '12px 24px',
            fontSize: '1em',
            backgroundColor: '#764ba2',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontWeight: 'bold'
          }}
        >
          –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Üí
        </button>
      </div>
    </div>
  )
}

export default Slide18UseActionState