import { useState } from 'react'

// –°–ª–∞–π–¥ 9: –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç Server Components
function Slide9ServerComponentsDeep() {
  const [activeStep, setActiveStep] = useState(0)

  const steps = [
    {
      title: 'ü§î –ü—Ä–æ–±–ª–µ–º–∞: –í–µ—Å—å React –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ',
      description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥: –≤–µ—Å—å –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ',
      content: `**–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π React:**

1. –°–µ—Ä–≤–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç HTML (–ø—É—Å—Ç–æ–π –∏–ª–∏ —Å SSR)
2. –ë—Ä–∞—É–∑–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤–µ—Å—å JavaScript –±–∞–Ω–¥–ª
3. React "–≥–∏–¥—Ä–∏—Ä—É–µ—Ç" (hydrate) –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
4. –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
5. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ API

**–ü—Ä–æ–±–ª–µ–º—ã:**
‚Ä¢ –ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä –±–∞–Ω–¥–ª–∞ (–≤–µ—Å—å –∫–æ–¥ React + –±–∏–±–ª–∏–æ—Ç–µ–∫–∏)
‚Ä¢ –ú–µ–¥–ª–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–ª–∞–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
‚Ä¢ –ù—É–∂–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–µ API endpoints
‚Ä¢ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ (—Å–µ—Ä–≤–µ—Ä + –∫–ª–∏–µ–Ω—Ç)
‚Ä¢ Waterfall –∑–∞–ø—Ä–æ—Å–æ–≤ (–∫–æ–º–ø–æ–Ω–µ–Ω—Ç ‚Üí –∑–∞–ø—Ä–æ—Å ‚Üí –¥–∞–Ω–Ω—ã–µ)`,
      code: `// –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π Client Component
'use client' // –∏–ª–∏ –±–µ–∑ —ç—Ç–æ–≥–æ –≤ React 17
function UserProfile({ userId }) {
  const [user, setUser] = useState(null)
  const [posts, setPosts] = useState([])

  useEffect(() => {
    // –ó–∞–ø—Ä–æ—Å 1: –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    fetch(\`/api/users/\${userId}\`)
      .then(res => res.json())
      .then(setUser)

    // –ó–∞–ø—Ä–æ—Å 2: –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–æ–≤
    fetch(\`/api/users/\${userId}/posts\`)
      .then(res => res.json())
      .then(setPosts)
  }, [userId])

  if (!user) return <Spinner />

  return (
    <div>
      <h1>{user.name}</h1>
      {posts.map(post => <Post key={post.id} {...post} />)}
    </div>
  )
}

// –ü—Ä–æ–±–ª–µ–º—ã:
// ‚ùå –í–µ—Å—å –∫–æ–¥ Post –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –±–∞–Ω–¥–ª–µ
// ‚ùå 2 –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∫ API
// ‚ùå Waterfall: —Å–Ω–∞—á–∞–ª–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –ø–æ—Ç–æ–º –¥–∞–Ω–Ω—ã–µ
// ‚ùå –ù—É–∂–µ–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π API endpoint`
    },
    {
      title: 'üåê –†–µ—à–µ–Ω–∏–µ: Server Components',
      description: '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
      content: `**React Server Components (RSC):**

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Ä–µ–Ω–¥–µ—Ä–∏—Ç –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–∞—É–∑–µ—Ä—É.

**–ö–ª—é—á–µ–≤–æ–µ –æ—Ç–ª–∏—á–∏–µ:**
‚Ä¢ Server Component —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Üí –∫–ª–∏–µ–Ω—Ç
‚Ä¢ Client Component —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ (–∫–∞–∫ –æ–±—ã—á–Ω–æ)
‚Ä¢ –ú–æ–∂–Ω–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±–∞ —Ç–∏–ø–∞!

**–ß—Ç–æ –º–æ–∂–µ—Ç Server Component:**
‚úÖ –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –ë–î
‚úÖ –ß–∏—Ç–∞—Ç—å —Ñ–∞–π–ª—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ (–Ω–µ –ø–æ–ø–∞–¥—É—Ç –≤ –∫–ª–∏–µ–Ω—Ç!)
‚úÖ –¢—è–∂—ë–ª—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

**–ß—Ç–æ –ù–ï –º–æ–∂–µ—Ç:**
‚ùå useState, useEffect - –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π (onClick –∏ —Ç.–¥.)
‚ùå Browser APIs (window, document)`,
      code: `// Server Component (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ Next.js App Router)
async function UserProfile({ userId }) {
  // ‚úÖ –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –ë–î –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!
  const user = await db.users.findUnique({
    where: { id: userId },
    include: { posts: true } // –û–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º!
  })

  return (
    <div>
      <h1>{user.name}</h1>
      {user.posts.map(post => (
        <Post key={post.id} {...post} />
      ))}
    </div>
  )
}

// –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
// ‚úÖ –ö–æ–¥ db –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫ –ù–ï –ø–æ–ø–∞–¥—ë—Ç –≤ –±–∞–Ω–¥–ª –∫–ª–∏–µ–Ω—Ç–∞
// ‚úÖ 1 –∑–∞–ø—Ä–æ—Å –∫ –ë–î –≤–º–µ—Å—Ç–æ 2 –∫ API
// ‚úÖ –ù–µ—Ç waterfall - –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É
// ‚úÖ –ù–µ—Ç loading state - –¥–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å`
    },
    {
      title: 'üîÑ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç: –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è',
      description: 'React –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç',
      content: `**–ü—Ä–æ—Ü–µ—Å—Å —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ Server Component:**

1. **–°–µ—Ä–≤–µ—Ä –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç**
   - –í—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
   - –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
   - –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å—é –ª–æ–≥–∏–∫—É

2. **–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤ RSC Wire Format**
   - –ù–µ HTML! –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç React
   - –°–æ–¥–µ—Ä–∂–∏—Ç: —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞, props, –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
   - –ö–æ–º–ø–∞–∫—Ç–Ω–µ–µ —á–µ–º HTML

3. **–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—É**
   - –°—Ç—Ä–∏–º–∏—Ç—Å—è —á–∞—Å—Ç—è–º–∏ (–º–æ–∂–Ω–æ!)
   - –ö–ª–∏–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ—Ä–µ–≤–∞

4. **–ö–ª–∏–µ–Ω—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–µ—Ä–µ–≤–æ**
   - React –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ —á–∏—Ç–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç
   - –°—Ç—Ä–æ–∏—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –¥–µ—Ä–µ–≤–æ
   - –†–µ–Ω–¥–µ—Ä–∏—Ç –≤ DOM`,
      code: `// Server Component
function UserCard({ userId }) {
  const user = await db.users.findOne(userId)
  return <div className="card">{user.name}</div>
}

// –°–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ RSC Wire Format (—É–ø—Ä–æ—â—ë–Ω–Ω–æ):
/*
{
  type: "div",
  props: { className: "card" },
  children: [
    { type: "text", value: "John Doe" }
  ]
}
*/

// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∫–ª–∏–µ–Ω—Ç—É –∫–∞–∫ –ø–æ—Ç–æ–∫:
/*
M1:{"id":"./UserCard.js","chunks":[],"name":""}
J0:["$","div",null,{"className":"card","children":"John Doe"}]
*/

// –ö–ª–∏–µ–Ω—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç:
const element = React.createElement(
  'div',
  { className: 'card' },
  'John Doe'
)

// –ò —Ä–µ–Ω–¥–µ—Ä–∏—Ç –≤ DOM:
// <div class="card">John Doe</div>`
    },
    {
      title: 'üîÄ –ö–æ–º–ø–æ–∑–∏—Ü–∏—è: Server + Client',
      description: '–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤',
      content: `**–ü—Ä–∞–≤–∏–ª–∞ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏:**

1. Server Component –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Server Component ‚úÖ
2. Server Component –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Client Component ‚úÖ
3. Client Component –ù–ï –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Server Component ‚ùå
   (–Ω–æ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –∫–∞–∫ children!)

**–ü–æ—á–µ–º—É —Ç–∞–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞?**
‚Ä¢ Server Component –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
‚Ä¢ Client Component –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
‚Ä¢ –ù–µ–ª—å–∑—è "–≤—ã–∑–≤–∞—Ç—å" —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
‚Ä¢ –ù–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ prop!

**–ü–∞—Ç—Ç–µ—Ä–Ω: Composition**
–ü–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ Server Component –∫–∞–∫ children/prop –≤ Client Component`,
      code: `// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: Server ‚Üí Server
// ServerPage.jsx (Server Component)
import ServerSidebar from './ServerSidebar' // Server

export default function Page() {
  return <ServerSidebar />
}

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: Server ‚Üí Client
// ServerPage.jsx (Server Component)
import ClientButton from './ClientButton' // Client

export default function Page() {
  return <ClientButton onClick={...} /> {/* ‚ùå onClick –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! */}
}

// ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û: Client ‚Üí Server
'use client'
import ServerData from './ServerData' // ‚ùå –û—à–∏–±–∫–∞!

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: Composition pattern
// ServerPage.jsx (Server)
import ClientLayout from './ClientLayout'
import ServerData from './ServerData'

export default function Page() {
  return (
    <ClientLayout>
      {/* –ü–µ—Ä–µ–¥–∞—ë–º Server Component –∫–∞–∫ children */}
      <ServerData />
    </ClientLayout>
  )
}

// ClientLayout.jsx (Client)
'use client'
export default function ClientLayout({ children }) {
  const [isOpen, setIsOpen] = useState(false)

  return (
    <div>
      <button onClick={() => setIsOpen(!isOpen)}>Toggle</button>
      {isOpen && children} {/* Server Component –∑–¥–µ—Å—å! */}
    </div>
  )
}`
    },
    {
      title: '‚öôÔ∏è Server Actions: –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç',
      description: '–í—ã–∑–æ–≤ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –∫–ª–∏–µ–Ω—Ç–∞',
      content: `**Server Action** - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Å –¥–∏—Ä–µ–∫—Ç–∏–≤–æ–π 'use server'

**–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**

1. **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ**
   - –§—É–Ω–∫—Ü–∏—è –ø–æ–º–µ—á–µ–Ω–∞ 'use server'
   - React —Å–æ–∑–¥–∞—ë—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏

2. **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è endpoint**
   - React –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç HTTP endpoint
   - –ö–ª–∏–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç "—Å—Å—ã–ª–∫—É" –Ω–∞ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é

3. **–í—ã–∑–æ–≤ —Å –∫–ª–∏–µ–Ω—Ç–∞**
   - –ö–ª–∏–µ–Ω—Ç –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–∫ –æ–±—ã—á–Ω–æ
   - React –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–ª–∞–µ—Ç POST –∑–∞–ø—Ä–æ—Å
   - –î–∞–Ω–Ω—ã–µ —Å–µ—Ä–∏–∞–ª–∏–∑—É—é—Ç—Å—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è

4. **–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ**
   - –°–µ—Ä–≤–µ—Ä –ø–æ–ª—É—á–∞–µ—Ç –∑–∞–ø—Ä–æ—Å
   - –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é
   - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç

5. **–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ**
   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è
   - React –æ–±–Ω–æ–≤–ª—è–µ—Ç UI`,
      code: `// 1. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Server Action
'use server'
export async function createTodo(formData) {
  const title = formData.get('title')

  // –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!
  const todo = await db.todos.create({
    data: { title }
  })

  // –ú–æ–∂–µ–º –¥–µ–ª–∞—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç
  redirect('/todos')

  return todo
}

// 2. React –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç (–ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º):
// POST /actions/createTodo_abc123
// –ö–ª–∏–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É: createTodo_abc123

// 3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ Client Component
'use client'
import { createTodo } from './actions'

export default function TodoForm() {
  return (
    <form action={createTodo}>
      {/* –ü—Ä–∏ submit React –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: */}
      {/* 1. –°–æ–±–∏—Ä–∞–µ—Ç FormData */}
      {/* 2. POST /actions/createTodo_abc123 */}
      {/* 3. –ñ–¥—ë—Ç –æ—Ç–≤–µ—Ç–∞ */}
      {/* 4. –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É */}
      <input name="title" />
      <button type="submit">Add</button>
    </form>
  )
}

// 4. –†–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –ë–ï–ó JavaScript! (–ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ)
// –ï—Å–ª–∏ JS –æ—Ç–∫–ª—é—á–µ–Ω - –æ–±—ã—á–Ω–∞—è —Ñ–æ—Ä–º–∞ —Å POST –∑–∞–ø—Ä–æ—Å–æ–º`
    },
    {
      title: 'üéØ Practical Example',
      description: '–†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±–ª–æ–≥–∞',
      content: `–ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º Server Components, Client Components –∏ Server Actions`,
      code: `// app/blog/[slug]/page.jsx - Server Component
import { ClientComments } from './ClientComments'
import { likePost } from './actions'

export default async function BlogPost({ params }) {
  // ‚úÖ –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –ë–î
  const post = await db.posts.findUnique({
    where: { slug: params.slug },
    include: { author: true, comments: true }
  })

  return (
    <article>
      <h1>{post.title}</h1>
      <p>By {post.author.name}</p>

      <div dangerouslySetInnerHTML={{ __html: post.content }} />

      {/* Server Action –¥–ª—è –ª–∞–π–∫–æ–≤ */}
      <form action={likePost}>
        <input type="hidden" name="postId" value={post.id} />
        <button type="submit">
          ‚ù§Ô∏è {post.likes}
        </button>
      </form>

      {/* Client Component –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ */}
      <ClientComments comments={post.comments} postId={post.id} />
    </article>
  )
}

// ClientComments.jsx - Client Component
'use client'
import { useState } from 'react'
import { addComment } from './actions'

export function ClientComments({ comments: initialComments, postId }) {
  const [comments, setComments] = useState(initialComments)

  return (
    <div>
      <h2>Comments</h2>
      {comments.map(c => <Comment key={c.id} {...c} />)}

      <form action={async (formData) => {
        // –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        const text = formData.get('text')
        setComments([...comments, { text, pending: true }])

        // Server Action
        const newComment = await addComment(formData)

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞
        setComments(prev =>
          prev.filter(c => !c.pending).concat(newComment)
        )
      }}>
        <input name="text" />
        <input type="hidden" name="postId" value={postId} />
        <button>Add Comment</button>
      </form>
    </div>
  )
}

// actions.js - Server Actions
'use server'
export async function likePost(formData) {
  const postId = formData.get('postId')
  await db.posts.update({
    where: { id: postId },
    data: { likes: { increment: 1 } }
  })
  revalidatePath(\`/blog/\${postId}\`)
}

export async function addComment(formData) {
  const postId = formData.get('postId')
  const text = formData.get('text')

  const comment = await db.comments.create({
    data: { postId, text }
  })

  revalidatePath(\`/blog/\${postId}\`)
  return comment
}

// –ò—Ç–æ–≥:
// ‚úÖ –ë–î –∫–æ–¥ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
// ‚úÖ –ú–∞–ª–µ–Ω—å–∫–∏–π –±–∞–Ω–¥–ª (–Ω–µ—Ç prisma –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ)
// ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ (—Å–µ–∫—Ä–µ—Ç—ã –ë–î –Ω–µ —É—Ç–µ–∫—É—Ç)
// ‚úÖ –ë—ã—Å—Ç—Ä–æ (–¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É, –Ω–µ—Ç waterfall)
// ‚úÖ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ (Client Components –≥–¥–µ –Ω—É–∂–Ω–æ)`
    }
  ]

  return (
    <div style={{ padding: '40px', maxWidth: '1200px', margin: '0 auto' }}>
      <h1 style={{
        fontSize: '3em',
        textAlign: 'center',
        color: '#61dafb',
        marginBottom: '40px'
      }}>
        üåê –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç Server Components
      </h1>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º */}
      <div style={{
        display: 'flex',
        gap: '10px',
        marginBottom: '30px',
        flexWrap: 'wrap',
        justifyContent: 'center'
      }}>
        {steps.map((step, idx) => (
          <button
            key={idx}
            onClick={() => setActiveStep(idx)}
            style={{
              padding: '12px 20px',
              fontSize: '0.9em',
              backgroundColor: activeStep === idx ? '#10b981' : '#f5f5f5',
              color: activeStep === idx ? 'white' : '#333',
              border: `2px solid ${activeStep === idx ? '#10b981' : '#ddd'}`,
              borderRadius: '8px',
              cursor: 'pointer',
              fontWeight: activeStep === idx ? 'bold' : 'normal',
              transition: 'all 0.3s ease',
              flex: '1 1 200px'
            }}
          >
            –®–∞–≥ {idx + 1}
          </button>
        ))}
      </div>

      {/* –¢–µ–∫—É—â–∏–π —à–∞–≥ */}
      <div style={{
        background: 'white',
        border: '3px solid #10b981',
        borderRadius: '20px',
        padding: '30px',
        boxShadow: '0 8px 24px rgba(0,0,0,0.15)'
      }}>
        <h2 style={{
          color: '#10b981',
          marginTop: 0,
          fontSize: '2em',
          marginBottom: '10px'
        }}>
          {steps[activeStep].title}
        </h2>

        <p style={{
          fontSize: '1.2em',
          color: '#666',
          fontStyle: 'italic',
          marginBottom: '20px'
        }}>
          {steps[activeStep].description}
        </p>

        <div style={{
          fontSize: '1.1em',
          lineHeight: '1.8',
          whiteSpace: 'pre-line',
          marginBottom: '20px'
        }}>
          {steps[activeStep].content}
        </div>

        {steps[activeStep].code && (
          <>
            <h3 style={{ color: '#10b981', fontSize: '1.4em' }}>
              üíª –ö–æ–¥:
            </h3>
            <pre style={{
              background: '#263238',
              color: '#aed581',
              padding: '20px',
              borderRadius: '10px',
              fontSize: '0.9em',
              overflow: 'auto',
              lineHeight: '1.6',
              margin: 0
            }}>
              {steps[activeStep].code}
            </pre>
          </>
        )}
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div style={{
        marginTop: '30px',
        textAlign: 'center',
        color: '#666',
        fontSize: '1.1em'
      }}>
        –®–∞–≥ {activeStep + 1} –∏–∑ {steps.length}
      </div>
    </div>
  )
}

export default Slide9ServerComponentsDeep