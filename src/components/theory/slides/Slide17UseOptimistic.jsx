import { useState } from 'react'

function Slide17UseOptimistic() {
  const [currentStep, setCurrentStep] = useState(0)

  const steps = [
    {
      title: 'üéØ –ß—Ç–æ —Ç–∞–∫–æ–µ useOptimistic?',
      description: '–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI',
      content: `**useOptimistic** - —Ö—É–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è "–æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–≥–æ" UI, –∫–æ—Ç–æ—Ä—ã–π –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.

**–ü—Ä–æ–±–ª–µ–º–∞:**
‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç "–õ–∞–π–∫" ‚Üí –∂–¥—ë—Ç 2 —Å–µ–∫—É–Ω–¥—ã ‚Üí –≤–∏–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
‚Ä¢ UI "–∑–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ—Ç—Å—è" –∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–∞–¥–µ—Ä—ã
‚Ä¢ –ü–ª–æ—Ö–æ–π UX

**–†–µ—à–µ–Ω–∏–µ:**
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ (–æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ)
‚Ä¢ –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É–ø–∞–ª - –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
‚Ä¢ UI –∫–∞–∂–µ—Ç—Å—è –º–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–º`,
      code: `// ‚ùå –ë–ï–ó useOptimistic - –º–µ–¥–ª–µ–Ω–Ω–æ
const [likes, setLikes] = useState(0)
const [loading, setLoading] = useState(false)

async function handleLike() {
  setLoading(true) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
  const newLikes = await likePost() // –ñ–¥—ë–º 2 —Å–µ–∫
  setLikes(newLikes) // –¢–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –æ–±–Ω–æ–≤–ª—è–µ–º
  setLoading(false)
}

return <button disabled={loading}>
  {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : \`‚ù§Ô∏è \${likes}\`}
</button>`
    },
    {
      title: '‚ú® –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç useOptimistic?',
      description: '–°–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ –º–µ—Ö–∞–Ω–∏–∫–∞',
      content: `**–°–∏–Ω—Ç–∞–∫—Å–∏—Å:**
\`\`\`javascript
const [optimisticState, addOptimistic] = useOptimistic(
  state,           // –†–µ–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  updateFn         // –ö–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ
)
\`\`\`

**–ú–µ—Ö–∞–Ω–∏–∫–∞:**
1. \`optimisticState\` - —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ä–µ–Ω–¥–µ—Ä–∏–º
2. \`addOptimistic(value)\` - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç UI
3. –ö–æ–≥–¥–∞ \`state\` –º–µ–Ω—è–µ—Ç—Å—è - \`optimisticState\` —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è
4. –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É–ø–∞–ª - –æ—Ç–∫–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π`,
      code: `// ‚úÖ –° useOptimistic - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
const [likes, setLikes] = useState(0)
const [optimisticLikes, addOptimisticLike] = useOptimistic(
  likes,
  (currentLikes, newLike) => currentLikes + newLike
)

async function handleLike() {
  addOptimisticLike(1) // ‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ +1

  try {
    const newLikes = await likePost() // –ñ–¥—ë–º –æ—Ç–≤–µ—Ç
    setLikes(newLikes) // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º
  } catch {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç –∫ \`likes\`
  }
}

return <button>‚ù§Ô∏è {optimisticLikes}</button>`
    },
    {
      title: 'üí¨ –ü—Ä–∏–º–µ—Ä: –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏',
      description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è',
      content: `**–ó–∞–¥–∞—á–∞:**
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. –ú—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —Å –ø–æ–º–µ—Ç–∫–æ–π "–û—Ç–ø—Ä–∞–≤–∫–∞...", –∞ –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏—Ç - –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π.`,
      code: `function Comments() {
  const [comments, setComments] = useState([
    { id: 1, text: '–ü—Ä–∏–≤–µ—Ç!', status: 'sent' }
  ])

  const [optimisticComments, addOptimisticComment] = useOptimistic(
    comments,
    (state, newComment) => [
      ...state,
      { ...newComment, status: 'sending' } // –ü–æ–º–µ—á–∞–µ–º
    ]
  )

  async function sendComment(text) {
    const tempComment = { id: Date.now(), text }
    addOptimisticComment(tempComment) // ‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ

    const savedComment = await postComment(text) // 2 —Å–µ–∫
    setComments(prev => [...prev, savedComment]) // –†–µ–∞–ª—å–Ω—ã–π
  }

  return optimisticComments.map(c => (
    <div key={c.id} style={{
      opacity: c.status === 'sending' ? 0.5 : 1
    }}>
      {c.text} {c.status === 'sending' && '‚è≥'}
    </div>
  ))
}`
    },
    {
      title: 'üëç –ü—Ä–∏–º–µ—Ä: –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–µ –ª–∞–π–∫–∏',
      description: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–ª–∏–∫',
      content: `**–ó–∞–¥–∞—á–∞:**
–õ–∞–π–∫ –¥–æ–ª–∂–µ–Ω —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ, –¥–∞–∂–µ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç 2 —Å–µ–∫—É–Ω–¥—ã.`,
      code: `function Post({ postId, initialLikes }) {
  const [likes, setLikes] = useState(initialLikes)
  const [liked, setLiked] = useState(false)

  const [optimisticLikes, addOptimisticLike] = useOptimistic(
    likes,
    (current, amount) => current + amount
  )

  async function toggleLike() {
    const delta = liked ? -1 : 1
    addOptimisticLike(delta) // ‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ
    setLiked(!liked) // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –º–µ–Ω—è–µ–º —Ü–≤–µ—Ç

    try {
      const newLikes = await fetch(\`/api/like/\${postId}\`, {
        method: liked ? 'DELETE' : 'POST'
      }).then(r => r.json())

      setLikes(newLikes) // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º
    } catch (error) {
      // –û—Ç–∫–∞—Ç –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
      setLiked(!liked) // –¢–æ–ª—å–∫–æ –º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ
    }
  }

  return (
    <button onClick={toggleLike}>
      {liked ? '‚ù§Ô∏è' : 'ü§ç'} {optimisticLikes}
    </button>
  )
}`
    },
    {
      title: 'üìù –ü—Ä–∏–º–µ—Ä: –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π TODO',
      description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫',
      content: `**–ó–∞–¥–∞—á–∞:**
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ TODO –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–º, –Ω–æ –Ω—É–∂–µ–Ω –æ—Ç–∫–∞—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ.`,
      code: `function TodoList() {
  const [todos, setTodos] = useState([])
  const [optimisticTodos, addOptimisticTodo] = useOptimistic(
    todos,
    (state, newTodo) => [...state, newTodo]
  )

  async function addTodo(text) {
    const tempTodo = {
      id: 'temp-' + Date.now(),
      text,
      completed: false,
      optimistic: true // –ü–æ–º–µ—á–∞–µ–º
    }

    addOptimisticTodo(tempTodo) // ‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ

    try {
      const saved = await fetch('/api/todos', {
        method: 'POST',
        body: JSON.stringify({ text })
      }).then(r => r.json())

      setTodos(prev => [...prev, saved]) // –†–µ–∞–ª—å–Ω—ã–π
    } catch (error) {
      alert('–û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
      // –û—Ç–∫–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π
    }
  }

  return optimisticTodos.map(todo => (
    <div key={todo.id} style={{
      opacity: todo.optimistic ? 0.5 : 1
    }}>
      {todo.text}
    </div>
  ))
}`
    },
    {
      title: '‚ö†Ô∏è –ö–æ–≥–¥–∞ –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useOptimistic',
      description: '–í–∞–∂–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è',
      content: `**‚ùå –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–≥–¥–∞:**

1Ô∏è‚É£ **–ö—Ä–∏—Ç–∏—á–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏**
   ‚Ä¢ –ü–ª–∞—Ç–µ–∂–∏, –ø–µ—Ä–µ–≤–æ–¥—ã –¥–µ–Ω–µ–≥
   ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
   ‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

2Ô∏è‚É£ **–°–ª–æ–∂–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ**
   ‚Ä¢ –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –æ—Ç–∫–ª–æ–Ω–∏—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–∏—á–∏–Ω–∞–º–∏
   ‚Ä¢ –û—Ç–∫–∞—Ç + –ø–æ–∫–∞–∑ –æ—à–∏–±–∫–∏ —Ö—É–∂–µ —á–µ–º —á–µ—Å—Ç–Ω—ã–π –ª–æ–∞–¥–µ—Ä

3Ô∏è‚É£ **–ù–µ—Ç Suspense/Error Boundary**
   ‚Ä¢ useOptimistic –Ω–µ –ª–æ–≤–∏—Ç –æ—à–∏–±–∫–∏
   ‚Ä¢ –ù—É–∂–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ä—É—á–Ω—É—é

4Ô∏è‚É£ **–ó–∞–≤–∏—Å–∏–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è**
   ‚Ä¢ –ï—Å–ª–∏ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç ID —Å —Å–µ—Ä–≤–µ—Ä–∞`,
      code: `// ‚ùå –ü–õ–û–•–û: –æ–ø—Ç–∏–º–∏–∑–º –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞
function PaymentButton() {
  const [paid, setPaid] = useState(false)
  const [optimisticPaid, addOptimistic] = useOptimistic(
    paid,
    () => true
  )

  function handlePay() {
    addOptimistic() // ‚ùå –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–û–ø–ª–∞—á–µ–Ω–æ"
    // –ù–æ —á—Ç–æ –µ—Å–ª–∏ –∫–∞—Ä—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞?
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —É–≤–∏–¥–µ–ª "–£—Å–ø–µ—Ö"!
  }
}

// ‚úÖ –•–û–†–û–®–û: —á–µ—Å—Ç–Ω—ã–π –ª–æ–∞–¥–µ—Ä
function PaymentButton() {
  const [paying, setPaying] = useState(false)

  async function handlePay() {
    setPaying(true)
    const result = await processPayment()
    if (result.success) {
      // –¢–æ–ª—å–∫–æ –ø–æ —Ñ–∞–∫—Ç—É —É—Å–ø–µ—Ö–∞
    }
  }
}`
    },
    {
      title: 'üéØ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useOptimistic',
      description: '–ò–¥–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏',
      content: `**‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–≥–¥–∞:**

1Ô∏è‚É£ **–õ–∞–π–∫–∏, —Ä–µ–∞–∫—Ü–∏–∏, –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è**
   ‚Ä¢ –û—Ç–∫–∞—Ç –Ω–µ –∫—Ä–∏—Ç–∏—á–µ–Ω
   ‚Ä¢ –í—ã—Å–æ–∫–∞—è —á–∞—Å—Ç–æ—Ç–∞ –¥–µ–π—Å—Ç–≤–∏–π

2Ô∏è‚É£ **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —Å–æ–æ–±—â–µ–Ω–∏—è**
   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Å–≤–æ–π —Ç–µ–∫—Å—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
   ‚Ä¢ –ü—Ä–∏ –æ—à–∏–±–∫–µ –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å "–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"

3Ô∏è‚É£ **TODO, –∑–∞–º–µ—Ç–∫–∏, —á–µ—Ä–Ω–æ–≤–∏–∫–∏**
   ‚Ä¢ –õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
   ‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤ —Ñ–æ–Ω–µ

4Ô∏è‚É£ **–ü–æ–¥–ø–∏—Å–∫–∏, –∏–∑–±—Ä–∞–Ω–Ω–æ–µ**
   ‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ toggle –¥–µ–π—Å—Ç–≤–∏—è
   ‚Ä¢ –û—Ç–∫–∞—Ç –ø–æ–Ω—è—Ç–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é`,
      code: `// ‚úÖ –ò–¥–µ–∞–ª—å–Ω—ã–π –∫–µ–π—Å
function LikeButton({ postId, initialLikes }) {
  const [likes, setLikes] = useState(initialLikes)
  const [optimisticLikes, addOptimistic] = useOptimistic(
    likes,
    (current, delta) => current + delta
  )

  async function handleLike() {
    addOptimistic(1) // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ
    const newLikes = await likePost(postId)
    setLikes(newLikes) // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
  }

  return <button onClick={handleLike}>
    ‚ù§Ô∏è {optimisticLikes}
  </button>
}

// ‚úÖ –•–æ—Ä–æ—à–æ: –æ—Ç–∫–∞—Ç –æ—á–µ–≤–∏–¥–µ–Ω –∏ –Ω–µ –∫—Ä–∏—Ç–∏—á–µ–Ω
// ‚úÖ –•–æ—Ä–æ—à–æ: –≤—ã—Å–æ–∫–∞—è —á–∞—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
// ‚úÖ –•–æ—Ä–æ—à–æ: —É–ª—É—á—à–∞–µ—Ç UX –±–µ–∑ —Ä–∏—Å–∫–æ–≤`
    },
    {
      title: 'üìä –ò—Ç–æ–≥–∏: useOptimistic',
      description: '–ì–ª–∞–≤–Ω–æ–µ –æ —Ö—É–∫–µ',
      content: `**–ß—Ç–æ —Ç–∞–∫–æ–µ useOptimistic?**
–•—É–∫ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ—Ç–∫–∞—Ç–æ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ.

**–ü–ª—é—Å—ã:**
‚úÖ –ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π UI - –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–¥–µ—Ä–∂–µ–∫
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
‚úÖ –ü—Ä–æ—Å—Ç–æ–π API - –ª–µ–≥–∫–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ª–∞–π–∫–æ–≤, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, TODO

**–ú–∏–Ω—É—Å—ã:**
‚ùå –ù–µ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (–ø–ª–∞—Ç–µ–∂–∏)
‚ùå –ù—É–∂–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤—Ä—É—á–Ω—É—é
‚ùå –ú–æ–∂–µ—Ç —Å–±–∏—Ç—å —Å —Ç–æ–ª–∫—É –ø—Ä–∏ —Å–ª–æ–∂–Ω—ã—Ö –æ—Ç–∫–∞—Ç–∞—Ö

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è —á–∞—Å—Ç—ã—Ö –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
üéØ –î–æ–±–∞–≤–ª—è–π—Ç–µ –≤–∏–∑—É–∞–ª—å–Ω—É—é –∏–Ω–¥–∏–∫–∞—Ü–∏—é (opacity, –∏–∫–æ–Ω–∫–∏)
üéØ –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
üéØ –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ –º–µ–¥–ª–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ`,
      code: `// üéØ –ò–¥–µ–∞–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
function OptimisticAction() {
  const [data, setData] = useState(initial)
  const [optimisticData, addOptimistic] = useOptimistic(
    data,
    (state, update) => ({ ...state, ...update })
  )

  async function handleAction(update) {
    addOptimistic(update) // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ

    try {
      const result = await serverAction(update)
      setData(result) // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
      // –û—Ç–∫–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π
    }
  }

  return <UI data={optimisticData} onAction={handleAction} />
}

// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è UX! üöÄ`
    }
  ]

  const nextStep = () => {
    setCurrentStep((prev) => (prev + 1) % steps.length)
  }

  const prevStep = () => {
    setCurrentStep((prev) => (prev - 1 + steps.length) % steps.length)
  }

  const step = steps[currentStep]

  return (
    <div style={{ padding: '40px', fontFamily: 'system-ui, -apple-system, sans-serif' }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        padding: '30px',
        borderRadius: '15px',
        marginBottom: '30px',
        color: 'white'
      }}>
        <h2 style={{ margin: '0 0 10px 0', fontSize: '2.5em' }}>
          {step.title}
        </h2>
        <p style={{ margin: 0, fontSize: '1.3em', opacity: 0.9 }}>
          {step.description}
        </p>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr 1fr',
        gap: '30px',
        marginBottom: '30px'
      }}>
        {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
        <div style={{
          background: '#f8f9fa',
          padding: '30px',
          borderRadius: '15px',
          lineHeight: '1.8'
        }}>
          <div style={{
            whiteSpace: 'pre-line',
            fontSize: '1.1em'
          }}>
            {step.content}
          </div>
        </div>

        {/* –ö–æ–¥ */}
        <div style={{
          background: '#1e1e1e',
          padding: '25px',
          borderRadius: '15px',
          color: '#d4d4d4',
          fontFamily: 'Monaco, Consolas, monospace',
          fontSize: '0.95em',
          lineHeight: '1.6',
          overflowX: 'auto',
          position: 'relative'
        }}>
          <div style={{
            position: 'absolute',
            top: '10px',
            right: '10px',
            background: '#667eea',
            color: 'white',
            padding: '5px 10px',
            borderRadius: '5px',
            fontSize: '0.8em'
          }}>
            JavaScript
          </div>
          <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>
            <code>{step.code}</code>
          </pre>
        </div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º */}
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginTop: '20px'
      }}>
        <button
          onClick={prevStep}
          style={{
            padding: '12px 24px',
            fontSize: '1em',
            backgroundColor: '#667eea',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontWeight: 'bold'
          }}
        >
          ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
        </button>

        <div style={{
          fontSize: '1.1em',
          fontWeight: 'bold',
          color: '#667eea'
        }}>
          –®–∞–≥ {currentStep + 1} –∏–∑ {steps.length}
        </div>

        <button
          onClick={nextStep}
          style={{
            padding: '12px 24px',
            fontSize: '1em',
            backgroundColor: '#764ba2',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontWeight: 'bold'
          }}
        >
          –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Üí
        </button>
      </div>
    </div>
  )
}

export default Slide17UseOptimistic