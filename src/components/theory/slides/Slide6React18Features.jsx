import { useState } from 'react'

// –°–ª–∞–π–¥ 6: –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ React 18
function Slide6React18Features() {
  const [selectedFeature, setSelectedFeature] = useState(null)

  const features = [
    {
      id: 'concurrent',
      title: '‚ö° Concurrent Rendering',
      subtitle: '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥',
      icon: 'üöÄ',
      color: '#2196f3',
      bgColor: '#e3f2fd',
      description: 'React –º–æ–∂–µ—Ç –ø—Ä–µ—Ä—ã–≤–∞—Ç—å, –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è—Ç—å —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –¥–µ–ª–∞—è UI –±–æ–ª–µ–µ –æ—Ç–∑—ã–≤—á–∏–≤—ã–º.',
      details: [
        'React –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ',
        '–ú–æ–∂–µ—Ç –ø—Ä–µ—Ä–≤–∞—Ç—å –º–µ–Ω–µ–µ –≤–∞–∂–Ω—É—é —Ä–∞–±–æ—Ç—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π',
        '–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—Å—Ä–æ—á–Ω—ã–µ vs –Ω–µ—Å—Ä–æ—á–Ω—ã–µ)',
        '–£–ª—É—á—à–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞ –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö'
      ],
      example: `// –†–∞–Ω—å—à–µ –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±—ã–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏
setState(newValue) // –ë–ª–æ–∫–∏—Ä—É–µ—Ç UI

// –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–º–µ—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∫ transition
startTransition(() => {
  setState(newValue) // –ù–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç UI!
})`
    },
    {
      id: 'automatic-batching',
      title: 'üì¶ Automatic Batching',
      subtitle: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞',
      icon: 'üéØ',
      color: '#ff6b6b',
      bgColor: '#ffe3e3',
      description: 'React –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –æ–¥–∏–Ω —Ä–µ-—Ä–µ–Ω–¥–µ—Ä –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.',
      details: [
        '–í React 17: –±–∞—Ç—á–∏–Ω–≥ —Ç–æ–ª—å–∫–æ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö —Å–æ–±—ã—Ç–∏–π React',
        '–í React 18: –±–∞—Ç—á–∏–Ω–≥ –≤–µ–∑–¥–µ (–ø—Ä–æ–º–∏—Å—ã, setTimeout, –Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è)',
        '–ú–µ–Ω—å—à–µ —Ä–µ-—Ä–µ–Ω–¥–µ—Ä–æ–≤ = –ª—É—á—à–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        '–†–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∫–æ–¥–µ'
      ],
      example: `// React 17: 2 —Ä–µ-—Ä–µ–Ω–¥–µ—Ä–∞
setTimeout(() => {
  setCount(c => c + 1)  // –†–µ-—Ä–µ–Ω–¥–µ—Ä
  setFlag(f => !f)      // –†–µ-—Ä–µ–Ω–¥–µ—Ä
}, 1000)

// React 18: 1 —Ä–µ-—Ä–µ–Ω–¥–µ—Ä! üéâ
setTimeout(() => {
  setCount(c => c + 1)
  setFlag(f => !f)
  // –û–±–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞—Ç—á–∞—Ç—Å—è!
}, 1000)`
    },
    {
      id: 'transitions',
      title: 'üîÄ Transitions API',
      subtitle: 'API –ø–µ—Ä–µ—Ö–æ–¥–æ–≤',
      icon: '‚è±Ô∏è',
      color: '#10b981',
      bgColor: '#d1fae5',
      description: '–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–∞ —Å—Ä–æ—á–Ω—ã–µ –∏ –Ω–µ—Å—Ä–æ—á–Ω—ã–µ –¥–ª—è –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–æ–≥–æ UX.',
      details: [
        'useTransition() - –ø–æ–º–µ—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∫ –Ω–µ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ',
        '–°—Ä–æ—á–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞) –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å—Ä–∞–∑—É',
        '–ù–µ—Å—Ä–æ—á–Ω—ã–µ (—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞) –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–ª–æ–∂–µ–Ω—ã',
        'isPending –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø–æ–∫–∞–∑–∞ –∑–∞–≥—Ä—É–∑–∫–∏'
      ],
      example: `function SearchResults() {
  const [query, setQuery] = useState('')
  const [results, setResults] = useState([])
  const [isPending, startTransition] = useTransition()

  const handleChange = (e) => {
    setQuery(e.target.value) // –°—Ä–æ—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

    startTransition(() => {
      // –ù–µ—Å—Ä–æ—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
      setResults(filterHugeList(e.target.value))
    })
  }

  return (
    <>
      <input value={query} onChange={handleChange} />
      {isPending && <Spinner />}
      <List items={results} />
    </>
  )
}`
    },
    {
      id: 'suspense',
      title: '‚è≥ Suspense –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
      subtitle: 'Server-Side Suspense',
      icon: 'üåê',
      color: '#a855f7',
      bgColor: '#f3e8ff',
      description: 'Suspense —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å SSR –∏ Streaming HTML.',
      details: [
        'Streaming SSR - —Å–µ—Ä–≤–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç HTML —á–∞—Å—Ç—è–º–∏',
        'Selective Hydration - –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Å—Ç–µ–π',
        '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–≥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ',
        '–£–ª—É—á—à–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ –ø–µ—Ä–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è (TTI)'
      ],
      example: `// –°–µ—Ä–≤–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç HTML —á–∞—Å—Ç—è–º–∏
<Suspense fallback={<Spinner />}>
  <Comments /> {/* –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ */}
</Suspense>

// Streaming SSR
import { renderToPipeableStream } from 'react-dom/server'

renderToPipeableStream(<App />, {
  onShellReady() {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π HTML
    res.pipe(response)
  }
})`
    },
    {
      id: 'new-hooks',
      title: 'üé£ –ù–æ–≤—ã–µ —Ö—É–∫–∏',
      subtitle: 'React 18 Hooks',
      icon: '‚ú®',
      color: '#f59e0b',
      bgColor: '#fef3c7',
      description: 'React 18 –¥–æ–±–∞–≤–∏–ª 5 –Ω–æ–≤—ã—Ö —Ö—É–∫–æ–≤ –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤.',
      details: [
        'useId() - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID –¥–ª—è SSR',
        'useTransition() - –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
        'useDeferredValue() - –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è',
        'useSyncExternalStore() - –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞',
        'useInsertionEffect() - –≤—Å—Ç–∞–≤–∫–∞ CSS –¥–æ layout'
      ],
      example: `// useId - —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID –¥–ª—è SSR
const id = useId()
<label htmlFor={id}>Name</label>
<input id={id} />

// useDeferredValue - –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
const deferredQuery = useDeferredValue(query)

// useSyncExternalStore - –≤–Ω–µ—à–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
const width = useSyncExternalStore(
  subscribe,
  () => window.innerWidth
)`
    },
    {
      id: 'strict-mode',
      title: 'üîç –°—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º',
      subtitle: '–£–ª—É—á—à–µ–Ω–Ω—ã–π StrictMode',
      icon: '‚ö†Ô∏è',
      color: '#dc2626',
      bgColor: '#fee2e2',
      description: 'StrictMode –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å Concurrent Rendering.',
      details: [
        '–ù–∞–º–µ—Ä–µ–Ω–Ω–æ –º–æ–Ω—Ç–∏—Ä—É–µ—Ç/—Ä–∞–∑–º–æ–Ω—Ç–∏—Ä—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–≤–∞–∂–¥—ã',
        '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å cleanup —Ñ—É–Ω–∫—Ü–∏–π',
        '–í—ã—è–≤–ª—è–µ—Ç –ø–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –≤ —Ä–µ–Ω–¥–µ—Ä–µ',
        '–ü–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ Concurrent Features'
      ],
      example: `// –í StrictMode –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–Ω—Ç–∏—Ä—É—é—Ç—Å—è –¥–≤–∞–∂–¥—ã
useEffect(() => {
  console.log('–ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ')

  return () => {
    console.log('–†–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ')
  }
}, [])

// –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —É–≤–∏–¥–∏—Ç–µ:
// 1. –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
// 2. –†–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (!)
// 3. –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ`
    }
  ]

  return (
    <div style={{ padding: '40px', maxWidth: '1400px', margin: '0 auto' }}>
      <h1 style={{
        fontSize: '3em',
        textAlign: 'center',
        color: '#61dafb',
        marginBottom: '20px',
        textShadow: '2px 2px 4px rgba(0,0,0,0.1)'
      }}>
        üöÄ –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ React 18
      </h1>

      <div style={{
        textAlign: 'center',
        fontSize: '1.2em',
        marginBottom: '40px',
        padding: '20px',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        borderRadius: '15px',
        color: 'white'
      }}>
        <strong>React 18</strong> –≤—ã—à–µ–ª –≤ –º–∞—Ä—Ç–µ 2022 –≥–æ–¥–∞ –∏ –ø—Ä–∏–Ω—ë—Å —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ UX
      </div>

      {/* –°–µ—Ç–∫–∞ —Å —Ñ–∏—á–∞–º–∏ */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',
        gap: '20px',
        marginBottom: '40px'
      }}>
        {features.map((feature) => (
          <div
            key={feature.id}
            onClick={() => setSelectedFeature(selectedFeature === feature.id ? null : feature.id)}
            style={{
              background: feature.bgColor,
              border: `3px solid ${feature.color}`,
              borderRadius: '15px',
              padding: '25px',
              cursor: 'pointer',
              transition: 'all 0.3s ease',
              transform: selectedFeature === feature.id ? 'scale(1.05)' : 'scale(1)',
              boxShadow: selectedFeature === feature.id
                ? `0 10px 30px ${feature.color}60`
                : '0 4px 12px rgba(0,0,0,0.1)'
            }}
          >
            <div style={{
              fontSize: '3em',
              textAlign: 'center',
              marginBottom: '15px'
            }}>
              {feature.icon}
            </div>
            <h3 style={{
              color: feature.color,
              marginTop: 0,
              fontSize: '1.4em',
              textAlign: 'center',
              marginBottom: '5px'
            }}>
              {feature.title}
            </h3>
            <p style={{
              textAlign: 'center',
              fontSize: '0.9em',
              color: '#666',
              marginTop: 0,
              marginBottom: '15px',
              fontStyle: 'italic'
            }}>
              {feature.subtitle}
            </p>
            <p style={{
              fontSize: '1.05em',
              lineHeight: '1.6',
              margin: 0,
              textAlign: 'center'
            }}>
              {feature.description}
            </p>
          </div>
        ))}
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ñ–∏—á–µ */}
      {selectedFeature && (
        <div
          style={{
            background: 'white',
            border: `3px solid ${features.find(f => f.id === selectedFeature).color}`,
            borderRadius: '20px',
            padding: '30px',
            boxShadow: '0 8px 24px rgba(0,0,0,0.15)',
            animation: 'fadeIn 0.3s ease'
          }}
        >
          {(() => {
            const feature = features.find(f => f.id === selectedFeature)
            return (
              <>
                <h2 style={{
                  color: feature.color,
                  marginTop: 0,
                  fontSize: '2em',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '15px'
                }}>
                  <span style={{ fontSize: '1.3em' }}>{feature.icon}</span>
                  {feature.title}
                </h2>

                <h3 style={{ color: feature.color, fontSize: '1.4em' }}>
                  üìã –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
                </h3>
                <ul style={{ fontSize: '1.15em', lineHeight: '2', marginBottom: '25px' }}>
                  {feature.details.map((detail, idx) => (
                    <li key={idx}>{detail}</li>
                  ))}
                </ul>

                <h3 style={{ color: feature.color, fontSize: '1.4em' }}>
                  üíª –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
                </h3>
                <pre style={{
                  background: '#263238',
                  color: '#aed581',
                  padding: '20px',
                  borderRadius: '10px',
                  fontSize: '0.95em',
                  overflow: 'auto',
                  lineHeight: '1.6',
                  margin: 0
                }}>
                  {feature.example}
                </pre>
              </>
            )
          })()}
        </div>
      )}

      {/* –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      {!selectedFeature && (
        <div style={{
          background: '#fff9c4',
          border: '3px solid #fbc02d',
          borderRadius: '15px',
          padding: '25px',
          textAlign: 'center'
        }}>
          <h3 style={{ color: '#f57f17', marginTop: 0, fontSize: '1.5em' }}>
            üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏!
          </h3>
          <p style={{ fontSize: '1.1em', lineHeight: '1.8', margin: 0 }}>
            React 18 —Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —É–ª—É—á—à–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ —á–µ—Ä–µ–∑ Concurrent Rendering
          </p>
        </div>
      )}

      <style>
{`@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}`}
      </style>
    </div>
  )
}

export default Slide6React18Features