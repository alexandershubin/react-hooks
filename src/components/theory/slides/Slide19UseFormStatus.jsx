import { useState } from 'react'

function Slide19UseFormStatus() {
  const [currentStep, setCurrentStep] = useState(0)

  const steps = [
    {
      title: 'üìã –ß—Ç–æ —Ç–∞–∫–æ–µ useFormStatus?',
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ–æ—Ä–º—ã',
      content: `**useFormStatus** - —Ö—É–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç –¥–æ—Å—Ç—É–ø –∫ —Å—Ç–∞—Ç—É—Å—É —Ñ–æ—Ä–º—ã –∏–∑–Ω—É—Ç—Ä–∏ –î–û–ß–ï–†–ù–ï–ì–û –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å useActionState.

**–ü—Ä–æ–±–ª–µ–º–∞:**
‚Ä¢ –£ –≤–∞—Å –µ—Å—Ç—å —Ñ–æ—Ä–º–∞ —Å useActionState
‚Ä¢ –ù—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å loading –≤ –∫–Ω–æ–ø–∫–µ Submit
‚Ä¢ –ù–æ –∫–Ω–æ–ø–∫–∞ - –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
‚Ä¢ –ö–∞–∫ –ø–µ—Ä–µ–¥–∞—Ç—å isPending –≤ –∫–Ω–æ–ø–∫—É?

**–†–µ—à–µ–Ω–∏–µ:**
‚Ä¢ useFormStatus —á–∏—Ç–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ–æ—Ä–º—ã
‚Ä¢ –ù–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å props
‚Ä¢ –ö–Ω–æ–ø–∫–∞ —Å–∞–º–∞ "–∑–Ω–∞–µ—Ç" –æ —Å—Ç–∞—Ç—É—Å–µ —Ñ–æ—Ä–º—ã`,
      code: `// ‚ùå –ë–ï–ó useFormStatus - –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º props
function Form() {
  const [state, formAction, isPending] = useActionState(...)

  return (
    <form action={formAction}>
      <input name="email" />
      {/* –ù—É–∂–Ω–æ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å isPending */}
      <SubmitButton isPending={isPending} />
    </form>
  )
}

function SubmitButton({ isPending }) {
  return (
    <button disabled={isPending}>
      {isPending ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
    </button>
  )
}

// ‚ùå –ü—Ä–æ–±–ª–µ–º—ã:
// - Props drilling
// - –ö–Ω–æ–ø–∫–∞ –Ω–µ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è
// - –ù—É–∂–Ω–æ –≤–µ–∑–¥–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å isPending`
    },
    {
      title: '‚ú® –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç useFormStatus?',
      description: '–°–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ –º–µ—Ö–∞–Ω–∏–∫–∞',
      content: `**–°–∏–Ω—Ç–∞–∫—Å–∏—Å:**
\`\`\`javascript
const { pending, data, method, action } = useFormStatus()
\`\`\`

**–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
‚Ä¢ \`pending\` - true –≤–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
‚Ä¢ \`data\` - FormData, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
‚Ä¢ \`method\` - –º–µ—Ç–æ–¥ —Ñ–æ—Ä–º—ã ('get' –∏–ª–∏ 'post')
‚Ä¢ \`action\` - —Ñ—É–Ω–∫—Ü–∏—è action —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ–æ—Ä–º—ã

**‚ö†Ô∏è –í–ê–ñ–ù–û:**
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –¢–û–õ–¨–ö–û –≤–Ω—É—Ç—Ä–∏ –¥–æ—á–µ—Ä–Ω–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Ñ–æ—Ä–º—ã
‚Ä¢ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Å–∞–º–æ–π —Ñ–æ—Ä–º–µ!
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç React Context –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º`,
      code: `// ‚úÖ –° useFormStatus - –º–∞–≥–∏—è!
function Form() {
  const [state, formAction] = useActionState(...)

  return (
    <form action={formAction}>
      <input name="email" />
      {/* –ö–Ω–æ–ø–∫–∞ –°–ê–ú–ê —É–∑–Ω–∞—ë—Ç —Å—Ç–∞—Ç—É—Å */}
      <SubmitButton />
    </form>
  )
}

// ‚úÖ –î–æ—á–µ—Ä–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
function SubmitButton() {
  const { pending } = useFormStatus()

  return (
    <button disabled={pending}>
      {pending ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
    </button>
  )
}

// ‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
// - –ù–µ—Ç props drilling
// - –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –∫–Ω–æ–ø–∫–∞
// - –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±–æ–π —Ñ–æ—Ä–º–æ–π`
    },
    {
      title: 'üéØ –ü—Ä–∏–º–µ—Ä: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è Submit –∫–Ω–æ–ø–∫–∞',
      description: '–ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç',
      content: `**–ó–∞–¥–∞—á–∞:**
–°–æ–∑–¥–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±–æ–π —Ñ–æ—Ä–º–æ–π.`,
      code: `// ‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞
function SubmitButton({
  children,
  pendingText = '–ó–∞–≥—Ä—É–∑–∫–∞...',
  ...props
}) {
  const { pending } = useFormStatus()

  return (
    <button
      type="submit"
      disabled={pending}
      style={{
        opacity: pending ? 0.6 : 1,
        cursor: pending ? 'not-allowed' : 'pointer'
      }}
      {...props}
    >
      {pending ? (
        <>
          <Spinner /> {pendingText}
        </>
      ) : (
        children
      )}
    </button>
  )
}

// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ö
function LoginForm() {
  const [state, formAction] = useActionState(loginAction, {})

  return (
    <form action={formAction}>
      <input name="email" />
      <input name="password" />
      <SubmitButton pendingText="–í—Ö–æ–¥...">
        –í–æ–π—Ç–∏
      </SubmitButton>
    </form>
  )
}

function SignupForm() {
  const [state, formAction] = useActionState(signupAction, {})

  return (
    <form action={formAction}>
      <input name="email" />
      <input name="password" />
      <SubmitButton pendingText="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...">
        –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
      </SubmitButton>
    </form>
  )
}

// üéØ –û–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ - –º–Ω–æ–≥–æ —Ñ–æ—Ä–º!`
    },
    {
      title: 'üìä –ü—Ä–∏–º–µ—Ä: –ü–æ–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
      description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ data –∏–∑ useFormStatus',
      content: `**–ó–∞–¥–∞—á–∞:**
–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–µ–π—á–∞—Å –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è.`,
      code: `function FormDebugInfo() {
  const { pending, data, method } = useFormStatus()

  if (!pending) return null

  const entries = data ? Array.from(data.entries()) : []

  return (
    <div style={{
      background: '#f0f0f0',
      padding: '10px',
      borderRadius: '8px',
      marginTop: '10px'
    }}>
      <strong>üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö ({method}):</strong>
      <ul>
        {entries.map(([key, value]) => (
          <li key={key}>
            <code>{key}</code>: {value.toString()}
          </li>
        ))}
      </ul>
    </div>
  )
}

// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤ —Ñ–æ—Ä–º–µ
function Form() {
  const [state, formAction] = useActionState(
    async (prev, formData) => {
      await new Promise(r => setTimeout(r, 2000))
      return { success: true }
    },
    {}
  )

  return (
    <form action={formAction}>
      <input name="username" placeholder="Username" />
      <input name="email" placeholder="Email" />
      <input name="age" type="number" placeholder="Age" />

      <SubmitButton>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</SubmitButton>

      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ */}
      <FormDebugInfo />
    </form>
  )
}

// üéØ –û—Ç–ª–∏—á–Ω–æ –¥–ª—è –¥–µ–±–∞–≥–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ UX`
    },
    {
      title: 'üí™ –ü—Ä–∏–º–µ—Ä: –£–º–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º',
      description: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å data –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ UI',
      content: `**–ó–∞–¥–∞—á–∞:**
–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è.`,
      code: `function SmartSubmitButton() {
  const { pending, data, action } = useFormStatus()

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è –ø–æ data
  const getActionType = () => {
    if (!data) return 'default'

    const actionType = data.get('_action')
    return actionType || 'default'
  }

  const actionType = getActionType()

  const texts = {
    default: {
      idle: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
      pending: '–û—Ç–ø—Ä–∞–≤–∫–∞...'
    },
    delete: {
      idle: '–£–¥–∞–ª–∏—Ç—å',
      pending: '–£–¥–∞–ª–µ–Ω–∏–µ...'
    },
    save: {
      idle: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
      pending: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...'
    },
    publish: {
      idle: '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å',
      pending: '–ü—É–±–ª–∏–∫–∞—Ü–∏—è...'
    }
  }

  const text = texts[actionType] || texts.default

  return (
    <button
      type="submit"
      disabled={pending}
      style={{
        background: pending
          ? '#ccc'
          : actionType === 'delete'
          ? '#dc3545'
          : '#007bff',
        color: 'white',
        padding: '10px 20px',
        border: 'none',
        borderRadius: '5px',
        cursor: pending ? 'not-allowed' : 'pointer'
      }}
    >
      {pending ? (
        <>
          <Spinner /> {text.pending}
        </>
      ) : (
        text.idle
      )}
    </button>
  }
}

// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º
function PostEditor() {
  const [state, formAction] = useActionState(postAction, {})

  return (
    <form action={formAction}>
      <input name="title" />
      <textarea name="content" />

      {/* –°–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ –¥–ª—è —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è */}
      <input type="hidden" name="_action" value="save" />
      <SmartSubmitButton />
    </form>
  )
}`
    },
    {
      title: 'üöÄ –ü—Ä–∏–º–µ—Ä: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏',
      description: '–†–∞–∑–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ',
      content: `**–ó–∞–¥–∞—á–∞:**
–§–æ—Ä–º–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ (–°–æ—Ö—Ä–∞–Ω–∏—Ç—å, –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å, –£–¥–∞–ª–∏—Ç—å).`,
      code: `function ActionButton({ action, children, variant = 'primary' }) {
  const { pending, data } = useFormStatus()

  const currentAction = data?.get('_action')
  const isThisButtonPending = pending && currentAction === action

  const colors = {
    primary: '#007bff',
    success: '#28a745',
    danger: '#dc3545'
  }

  return (
    <button
      type="submit"
      name="_action"
      value={action}
      disabled={pending}
      style={{
        background: isThisButtonPending ? '#ccc' : colors[variant],
        color: 'white',
        padding: '10px 20px',
        margin: '5px',
        border: 'none',
        borderRadius: '5px',
        opacity: pending && !isThisButtonPending ? 0.5 : 1
      }}
    >
      {isThisButtonPending ? <Spinner /> : null}
      {children}
    </button>
  )
}

// ‚úÖ –§–æ—Ä–º–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
function ArticleForm() {
  const [state, formAction] = useActionState(
    async (prev, formData) => {
      const action = formData.get('_action')
      const title = formData.get('title')
      const content = formData.get('content')

      switch (action) {
        case 'save':
          return await saveArticle({ title, content })
        case 'publish':
          return await publishArticle({ title, content })
        case 'delete':
          return await deleteArticle()
        default:
          return prev
      }
    },
    {}
  )

  return (
    <form action={formAction}>
      <input name="title" placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫" />
      <textarea name="content" placeholder="–¢–µ–∫—Å—Ç" />

      <div>
        <ActionButton action="save" variant="primary">
          üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫
        </ActionButton>

        <ActionButton action="publish" variant="success">
          üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
        </ActionButton>

        <ActionButton action="delete" variant="danger">
          üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
        </ActionButton>
      </div>

      {state.message && <div>{state.message}</div>}
    </form>
  )
}

// üéØ –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –∑–Ω–∞–µ—Ç —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å!`
    },
    {
      title: '‚ö†Ô∏è –ö–æ–≥–¥–∞ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç useFormStatus',
      description: '–í–∞–∂–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è',
      content: `**‚ùå –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–≥–¥–∞:**

1Ô∏è‚É£ **–í—ã–∑—ã–≤–∞–µ—Ç–µ –≤ —Å–∞–º–æ–π —Ñ–æ—Ä–º–µ**
   ‚Ä¢ useFormStatus —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –î–û–ß–ï–†–ù–ò–• –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
   ‚Ä¢ –í —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ–æ—Ä–º–µ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ isPending

2Ô∏è‚É£ **–§–æ—Ä–º–∞ –±–µ–∑ action**
   ‚Ä¢ –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ onSubmit - useFormStatus –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
   ‚Ä¢ –ù—É–∂–µ–Ω –∞—Ç—Ä–∏–±—É—Ç action="..."

3Ô∏è‚É£ **–ù–µ—Ç useActionState**
   ‚Ä¢ useFormStatus —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å form action
   ‚Ä¢ –û–±—ã—á–Ω—ã–π onSubmit –Ω–µ –¥–∞—Å—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç

4Ô∏è‚É£ **–í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã**
   ‚Ä¢ HTML –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
   ‚Ä¢ useFormStatus –±–µ—Ä—ë—Ç –ë–õ–ò–ñ–ê–ô–®–£–Æ —Ñ–æ—Ä–º—É`,
      code: `// ‚ùå –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç: –≤—ã–∑–æ–≤ –≤ —Å–∞–º–æ–π —Ñ–æ—Ä–º–µ
function Form() {
  const { pending } = useFormStatus() // ‚ùå –û–®–ò–ë–ö–ê!
  // pending –±—É–¥–µ—Ç –≤—Å–µ–≥–¥–∞ false

  return <form>...</form>
}

// ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç: –≤—ã–∑–æ–≤ –≤ –¥–æ—á–µ—Ä–Ω–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
function Form() {
  return (
    <form action={...}>
      <SubmitButton /> {/* ‚úÖ –ó–¥–µ—Å—å —Ä–∞–±–æ—Ç–∞–µ—Ç */}
    </form>
  )
}

// ‚ùå –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç: onSubmit –≤–º–µ—Å—Ç–æ action
function Form() {
  const handleSubmit = (e) => {
    e.preventDefault()
    // ...
  }

  return (
    <form onSubmit={handleSubmit}>
      <SubmitButton /> {/* ‚ùå pending –≤—Å–µ–≥–¥–∞ false */}
    </form>
  )
}

// ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç: form action
function Form() {
  const [state, formAction] = useActionState(...)

  return (
    <form action={formAction}>
      <SubmitButton /> {/* ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç */}
    </form>
  )
}`
    },
    {
      title: 'üéØ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useFormStatus',
      description: '–ò–¥–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏',
      content: `**‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–≥–¥–∞:**

1Ô∏è‚É£ **–ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã**
   ‚Ä¢ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ Submit
   ‚Ä¢ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..."

2Ô∏è‚É£ **–°–ª–æ–∂–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–æ—Ä–º—ã**
   ‚Ä¢ –ö–Ω–æ–ø–∫–∞ Submit –≥–ª—É–±–æ–∫–æ –≤ –¥–µ—Ä–µ–≤–µ
   ‚Ä¢ –ù–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å props
   ‚Ä¢ –ú–Ω–æ–≥–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

3Ô∏è‚É£ **–§–æ—Ä–º—ã —Å useActionState**
   ‚Ä¢ –ò–¥–µ–∞–ª—å–Ω–∞—è –ø–∞—Ä–∞
   ‚Ä¢ Server Actions –≤ Next.js
   ‚Ä¢ Progressive enhancement

4Ô∏è‚É£ **–î–µ–±–∞–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ**
   ‚Ä¢ –ü–æ–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–µ–π—Å—Ç–≤–∏–π —Ñ–æ—Ä–º—ã`,
      code: `// ‚úÖ –ò–¥–µ–∞–ª—å–Ω—ã–π –∫–µ–π—Å: UI Kit
// components/SubmitButton.jsx
export function SubmitButton({ children, ...props }) {
  const { pending } = useFormStatus()

  return (
    <button type="submit" disabled={pending} {...props}>
      {pending ? <Spinner /> : null}
      {children}
    </button>
  )
}

// components/FormStatus.jsx
export function FormStatus() {
  const { pending } = useFormStatus()

  if (!pending) return null

  return (
    <div style={{ color: '#007bff' }}>
      ‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö...
    </div>
  )
}

// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ–∑–¥–µ
function AnyForm() {
  const [state, formAction] = useActionState(...)

  return (
    <form action={formAction}>
      {/* –õ—é–±–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ */}
      <div>
        <div>
          <div>
            <SubmitButton>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</SubmitButton>
            <FormStatus />
          </div>
        </div>
      </div>
    </form>
  )
}

// üéØ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ
// üéØ –ù–µ—Ç props drilling
// üéØ –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±–æ–π —Ñ–æ—Ä–º–æ–π`
    },
    {
      title: 'üìä –ò—Ç–æ–≥–∏: useFormStatus',
      description: '–ì–ª–∞–≤–Ω–æ–µ –æ —Ö—É–∫–µ',
      content: `**–ß—Ç–æ —Ç–∞–∫–æ–µ useFormStatus?**
–•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ–æ—Ä–º—ã –∏–∑ –¥–æ—á–µ—Ä–Ω–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –†–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ React Context.

**–ü–ª—é—Å—ã:**
‚úÖ –ù–µ—Ç props drilling - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–∞–º "–∑–Ω–∞–µ—Ç" —Å—Ç–∞—Ç—É—Å
‚úÖ –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–∫–Ω–æ–ø–∫–∏, –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã)
‚úÖ –ò–¥–µ–∞–ª—å–Ω–∞—è –ø–∞—Ä–∞ —Å useActionState
‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Å Server Actions –≤ Next.js
‚úÖ –î–æ—Å—Ç—É–ø –∫ data, method, action

**–ú–∏–Ω—É—Å—ã:**
‚ùå –†–∞–±–æ—Ç–∞–µ—Ç –¢–û–õ–¨–ö–û –≤ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö —Ñ–æ—Ä–º—ã
‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å onSubmit (—Ç–æ–ª—å–∫–æ —Å action)
‚ùå –ù—É–∂–µ–Ω useActionState –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ vanilla React (–Ω—É–∂–µ–Ω Next.js)

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
üéØ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å useActionState + Server Actions
üéØ –ù–µ –≤—ã–∑—ã–≤–∞–π—Ç–µ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ–æ—Ä–º–µ
üéØ –î–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä`,
      code: `// üéØ –ò–¥–µ–∞–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: UI Kit
// lib/form-components.jsx
export function SubmitButton({ children, variant = 'primary' }) {
  const { pending } = useFormStatus()

  return (
    <button
      type="submit"
      disabled={pending}
      className={\`btn btn-\${variant}\`}
    >
      {pending && <Spinner />}
      {children}
    </button>
  )
}

export function FormDebugger() {
  const { pending, data, method } = useFormStatus()

  if (process.env.NODE_ENV === 'production') return null

  return (
    <div className="debug">
      Status: {pending ? 'Pending' : 'Idle'}
      Method: {method}
      Data: {data ? Array.from(data.entries()).length : 0} fields
    </div>
  )
}

// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤ –ª—é–±—ã—Ö —Ñ–æ—Ä–º–∞—Ö
function MyForm() {
  const [state, formAction] = useActionState(myAction, {})

  return (
    <form action={formAction}>
      <input name="email" />
      <SubmitButton>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</SubmitButton>
      <FormDebugger />
    </form>
  )
}

// –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π UI Kit –¥–ª—è —Ñ–æ—Ä–º! üé®`
    }
  ]

  const nextStep = () => {
    setCurrentStep((prev) => (prev + 1) % steps.length)
  }

  const prevStep = () => {
    setCurrentStep((prev) => (prev - 1 + steps.length) % steps.length)
  }

  const step = steps[currentStep]

  return (
    <div style={{ padding: '40px', fontFamily: 'system-ui, -apple-system, sans-serif' }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        padding: '30px',
        borderRadius: '15px',
        marginBottom: '30px',
        color: 'white'
      }}>
        <h2 style={{ margin: '0 0 10px 0', fontSize: '2.5em' }}>
          {step.title}
        </h2>
        <p style={{ margin: 0, fontSize: '1.3em', opacity: 0.9 }}>
          {step.description}
        </p>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr 1fr',
        gap: '30px',
        marginBottom: '30px'
      }}>
        {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
        <div style={{
          background: '#f8f9fa',
          padding: '30px',
          borderRadius: '15px',
          lineHeight: '1.8'
        }}>
          <div style={{
            whiteSpace: 'pre-line',
            fontSize: '1.1em'
          }}>
            {step.content}
          </div>
        </div>

        {/* –ö–æ–¥ */}
        <div style={{
          background: '#1e1e1e',
          padding: '25px',
          borderRadius: '15px',
          color: '#d4d4d4',
          fontFamily: 'Monaco, Consolas, monospace',
          fontSize: '0.95em',
          lineHeight: '1.6',
          overflowX: 'auto',
          position: 'relative'
        }}>
          <div style={{
            position: 'absolute',
            top: '10px',
            right: '10px',
            background: '#667eea',
            color: 'white',
            padding: '5px 10px',
            borderRadius: '5px',
            fontSize: '0.8em'
          }}>
            JavaScript
          </div>
          <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>
            <code>{step.code}</code>
          </pre>
        </div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º */}
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginTop: '20px'
      }}>
        <button
          onClick={prevStep}
          style={{
            padding: '12px 24px',
            fontSize: '1em',
            backgroundColor: '#667eea',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontWeight: 'bold'
          }}
        >
          ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
        </button>

        <div style={{
          fontSize: '1.1em',
          fontWeight: 'bold',
          color: '#667eea'
        }}>
          –®–∞–≥ {currentStep + 1} –∏–∑ {steps.length}
        </div>

        <button
          onClick={nextStep}
          style={{
            padding: '12px 24px',
            fontSize: '1em',
            backgroundColor: '#764ba2',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontWeight: 'bold'
          }}
        >
          –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Üí
        </button>
      </div>
    </div>
  )
}

export default Slide19UseFormStatus