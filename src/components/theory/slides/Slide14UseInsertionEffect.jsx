import { useState } from 'react'

// –°–ª–∞–π–¥ 14: useInsertionEffect - —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è CSS-in-JS
function Slide14UseInsertionEffect() {
  const [activeStep, setActiveStep] = useState(0)

  const steps = [
    {
      title: 'üíÖ –ß—Ç–æ —Ç–∞–∫–æ–µ useInsertionEffect?',
      description: '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ö—É–∫ –¥–ª—è CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫',
      content: `**useInsertionEffect** - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö—É–∫ –¥–ª—è –∏–Ω—ä–µ–∫—Ü–∏–∏ —Å—Ç–∏–ª–µ–π –≤ DOM –ü–ï–†–ï–î –ª—é–±—ã–º–∏ DOM –º—É—Ç–∞—Ü–∏—è–º–∏.

**–î–ª—è –∫–æ–≥–æ —ç—Ç–æ—Ç —Ö—É–∫:**
‚Ä¢ –ê–≤—Ç–æ—Ä—ã CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫ (styled-components, emotion, stitches)
‚Ä¢ 99.9% —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º —ç—Ç–æ—Ç —Ö—É–∫ –ù–ï –Ω—É–∂–µ–Ω!

**–ó–∞—á–µ–º –Ω—É–∂–µ–Ω:**
–†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ CSS.

**–°–∏–≥–Ω–∞—Ç—É—Ä–∞:**
useInsertionEffect(setup, dependencies?)

–†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ useEffect, –Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –†–ê–ù–¨–®–ï:
1. useInsertionEffect ‚ö° (–†–ê–ù–¨–®–ï –í–°–ï–•)
2. useLayoutEffect
3. useEffect

**–í–∞–∂–Ω–æ:**
‚Ä¢ –ù–ï –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ refs (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è DOM)
‚Ä¢ –ù–ï –º–æ–∂–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å state
‚Ä¢ –¢–æ–ª—å–∫–æ –¥–ª—è –∏–Ω—ä–µ–∫—Ü–∏–∏ —Å—Ç–∏–ª–µ–π!`,
      code: `import { useInsertionEffect } from 'react'

// ‚ö†Ô∏è –û–±—ã—á–Ω—ã–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –ù–ï –Ω—É–∂–µ–Ω —ç—Ç–æ—Ç —Ö—É–∫!
// –≠—Ç–æ –¥–ª—è –∞–≤—Ç–æ—Ä–æ–≤ CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫

function useCSS(rule) {
  useInsertionEffect(() => {
    // –ò–Ω—ä–µ–∫—Ü–∏—è CSS –≤ DOM
    const styleElement = document.createElement('style')
    styleElement.textContent = rule
    document.head.appendChild(styleElement)

    // Cleanup
    return () => {
      document.head.removeChild(styleElement)
    }
  })
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (–≤ CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫–µ)
function Button({ children }) {
  // –°—Ç–∏–ª–∏ –≤—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –ü–ï–†–ï–î —Ä–µ–Ω–¥–µ—Ä–æ–º
  useCSS('.my-button { background: blue; color: white; }')

  return <button className="my-button">{children}</button>
}

// Timeline –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
// 1. useInsertionEffect - –≤—Å—Ç–∞–≤–ª—è–µ—Ç <style> –≤ <head>
// 2. React —Å–æ–∑–¥–∞—ë—Ç <button> –≤ DOM
// 3. –ë—Ä–∞—É–∑–µ—Ä —Ä–µ–Ω–¥–µ—Ä–∏—Ç –∫–Ω–æ–ø–∫—É —Å–æ —Å—Ç–∏–ª—è–º–∏ ‚úÖ
// (–ù–ï–¢ FOUC - Flash of Unstyled Content)`
    },
    {
      title: '‚ö° –ü–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ö—É–∫–æ–≤',
      description: 'useInsertionEffect vs useLayoutEffect vs useEffect',
      content: `**–ü–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤:**

1Ô∏è‚É£ **useInsertionEffect** - –°–ê–ú–´–ô –†–ê–ù–ù–ò–ô
   ‚Ä¢ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ü–ï–†–ï–î –ª—é–±—ã–º–∏ DOM –º—É—Ç–∞—Ü–∏—è–º–∏
   ‚Ä¢ –ù–ï–¢ –¥–æ—Å—Ç—É–ø–∞ –∫ DOM (refs –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç)
   ‚Ä¢ –¢–æ–ª—å–∫–æ –¥–ª—è –∏–Ω—ä–µ–∫—Ü–∏–∏ <style>

2Ô∏è‚É£ **useLayoutEffect** - –ü–ï–†–ï–î PAINT
   ‚Ä¢ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ü–û–°–õ–ï DOM –º—É—Ç–∞—Ü–∏–π, –ù–û –¥–æ paint
   ‚Ä¢ –ï—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ DOM (refs —Ä–∞–±–æ—Ç–∞—é—Ç)
   ‚Ä¢ –î–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è/–∏–∑–º–µ–Ω–µ–Ω–∏—è layout

3Ô∏è‚É£ **useEffect** - –ü–û–°–õ–ï PAINT
   ‚Ä¢ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ü–û–°–õ–ï paint (–Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç —ç–∫—Ä–∞–Ω)
   ‚Ä¢ –ï—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ DOM
   ‚Ä¢ –î–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ side effects

**–í–∞–∂–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ:**
useInsertionEffect –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –î–û —Ç–æ–≥–æ –∫–∞–∫ React —Å–æ–∑–¥–∞—Å—Ç DOM —ç–ª–µ–º–µ–Ω—Ç—ã!`,
      code: `function Component() {
  const ref = useRef(null)

  useInsertionEffect(() => {
    console.log('1. useInsertionEffect')
    console.log(ref.current) // ‚ùå null - DOM –µ—â—ë –Ω–µ—Ç!

    // ‚úÖ –ú–æ–∂–Ω–æ: –≤—Å—Ç–∞–≤–∏—Ç—å <style> –≤ <head>
    const style = document.createElement('style')
    style.textContent = '.my-class { color: red; }'
    document.head.appendChild(style)

    return () => document.head.removeChild(style)
  })

  useLayoutEffect(() => {
    console.log('2. useLayoutEffect')
    console.log(ref.current) // ‚úÖ <div> - DOM —É–∂–µ –µ—Å—Ç—å!

    // ‚úÖ –ú–æ–∂–Ω–æ: –∏–∑–º–µ—Ä–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã
    const { width } = ref.current.getBoundingClientRect()
    console.log('Width:', width)
  })

  useEffect(() => {
    console.log('3. useEffect')
    console.log(ref.current) // ‚úÖ <div> - DOM –µ—Å—Ç—å, —ç–∫—Ä–∞–Ω –æ–±–Ω–æ–≤–ª—ë–Ω

    // ‚úÖ –ú–æ–∂–Ω–æ: –∑–∞–ø—Ä–æ—Å—ã, –ø–æ–¥–ø–∏—Å–∫–∏, setTimeout
    fetch('/api/data')
  })

  console.log('0. Render')
  return <div ref={ref}>Content</div>
}

// –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å:
// 0. Render
// 1. useInsertionEffect
// (React —Å–æ–∑–¥–∞—ë—Ç DOM)
// 2. useLayoutEffect
// (–ë—Ä–∞—É–∑–µ—Ä —Ä–∏—Å—É–µ—Ç —ç–∫—Ä–∞–Ω)
// 3. useEffect

// ‚ö†Ô∏è useInsertionEffect –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –î–û —Å–æ–∑–¥–∞–Ω–∏—è DOM!`
    },
    {
      title: 'üé® –ü—Ä–æ–±–ª–µ–º–∞: FOUC',
      description: 'Flash of Unstyled Content –±–µ–∑ useInsertionEffect',
      content: `**FOUC (Flash of Unstyled Content)** - —ç—Ç–æ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —ç–ª–µ–º–µ–Ω—Ç –ë–ï–ó —Å—Ç–∏–ª–µ–π –Ω–∞ –¥–æ–ª—é —Å–µ–∫—É–Ω–¥—ã.

**–ö–∞–∫ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç FOUC –≤ CSS-in-JS:**

1. React —Ä–µ–Ω–¥–µ—Ä–∏—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
2. –°–æ–∑–¥–∞—ë—Ç <button> –≤ DOM
3. –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –ë–ï–ó —Å—Ç–∏–ª–µ–π (FOUC!) ‚ùå
4. useLayoutEffect –≤—Å—Ç–∞–≤–ª—è–µ—Ç <style>
5. –ë—Ä–∞—É–∑–µ—Ä –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —Å–æ —Å—Ç–∏–ª—è–º–∏

**useInsertionEffect —Ä–µ—à–∞–µ—Ç —ç—Ç–æ:**

1. useInsertionEffect –≤—Å—Ç–∞–≤–ª—è–µ—Ç <style> –≤ <head>
2. React —Å–æ–∑–¥–∞—ë—Ç <button> –≤ DOM
3. –ë—Ä–∞—É–∑–µ—Ä —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –°–û —Å—Ç–∏–ª—è–º–∏ ‚úÖ
4. –ù–ï–¢ FOUC!`,
      code: `// ‚ùå –ë–ï–ó useInsertionEffect - –º–æ–∂–µ—Ç –±—ã—Ç—å FOUC
function ButtonBad() {
  useLayoutEffect(() => {
    // –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –ü–û–°–õ–ï —Å–æ–∑–¥–∞–Ω–∏—è DOM
    const style = document.createElement('style')
    style.textContent = \`
      .button-bad {
        background: blue;
        color: white;
        padding: 10px 20px;
      }
    \`
    document.head.appendChild(style)
  }, [])

  return <button className="button-bad">Click</button>
}

// –ü—Ä–æ–±–ª–µ–º–∞:
// 1. React —Å–æ–∑–¥–∞—ë—Ç <button> –±–µ–∑ —Å—Ç–∏–ª–µ–π
// 2. –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ–∫—Ä–∞—Å–∏–≤—É—é –∫–Ω–æ–ø–∫—É ‚ùå
// 3. useLayoutEffect –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç–∏–ª–∏
// 4. –ë—Ä–∞—É–∑–µ—Ä –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç
// = –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç "–º–æ—Ä–≥–∞–Ω–∏–µ"

// ‚úÖ –° useInsertionEffect - –ù–ï–¢ FOUC
function ButtonGood() {
  useInsertionEffect(() => {
    // –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –î–û —Å–æ–∑–¥–∞–Ω–∏—è DOM
    const style = document.createElement('style')
    style.textContent = \`
      .button-good {
        background: blue;
        color: white;
        padding: 10px 20px;
      }
    \`
    document.head.appendChild(style)

    return () => document.head.removeChild(style)
  }, [])

  return <button className="button-good">Click</button>
}

// –†–µ—à–µ–Ω–∏–µ:
// 1. useInsertionEffect –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç–∏–ª–∏ –≤ <head>
// 2. React —Å–æ–∑–¥–∞—ë—Ç <button> (—Å—Ç–∏–ª–∏ —É–∂–µ –µ—Å—Ç—å!)
// 3. –ë—Ä–∞—É–∑–µ—Ä —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—É—é –∫–Ω–æ–ø–∫—É ‚úÖ
// = –ù–∏–∫–∞–∫–æ–≥–æ "–º–æ—Ä–≥–∞–Ω–∏—è"!`
    },
    {
      title: 'üíÖ –ü—Ä–∏–º–µ—Ä: –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π styled-components',
      description: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫–∏',
      content: `**–°–æ–∑–¥–∞—ë–º —É–ø—Ä–æ—â—ë–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é styled-components**

–ü–æ—Å–º–æ—Ç—Ä–∏–º –∫–∞–∫ CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç useInsertionEffect –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º.`,
      code: `import { useInsertionEffect } from 'react'

// –°—á—ë—Ç—á–∏–∫ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–º—ë–Ω –∫–ª–∞—Å—Å–æ–≤
let counter = 0

// –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è styled()
function styled(tag) {
  return (styles) => {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    return function StyledComponent(props) {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –∫–ª–∞—Å—Å–∞
      const className = \`styled-\${counter++}\`

      // –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –ü–ï–†–ï–î —Ä–µ–Ω–¥–µ—Ä–æ–º
      useInsertionEffect(() => {
        const styleElement = document.createElement('style')
        styleElement.textContent = \`
          .\${className} {
            \${styles}
          }
        \`
        document.head.appendChild(styleElement)

        return () => {
          document.head.removeChild(styleElement)
        }
      }, [])

      // –†–µ–Ω–¥–µ—Ä–∏–º —ç–ª–µ–º–µ–Ω—Ç —Å –∫–ª–∞—Å—Å–æ–º
      return <tag {...props} className={className} />
    }
  }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (–∫–∞–∫ –≤ styled-components)
const Button = styled('button')\`
  background: #667eea;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 8px;
  cursor: pointer;

  &:hover {
    background: #764ba2;
  }
\`

const Title = styled('h1')\`
  font-size: 2em;
  color: #333;
  margin-bottom: 20px;
\`

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
function App() {
  return (
    <div>
      <Title>Hello World</Title>
      <Button>Click me</Button>
    </div>
  )
}

// –†–µ–∑—É–ª—å—Ç–∞—Ç –≤ <head>:
// <style>.styled-0 { font-size: 2em; color: #333; ... }</style>
// <style>.styled-1 { background: #667eea; ... }</style>

// ‚úÖ –°—Ç–∏–ª–∏ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã –î–û —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
// ‚úÖ –ù–µ—Ç FOUC
// ‚úÖ –ù–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∏–ª–µ–π`
    },
    {
      title: 'üî• –ü—Ä–∏–º–µ—Ä: Dynamic Styles',
      description: '–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ props',
      content: `**–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∏–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ props –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞**

CSS-in-JS –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç–∏–ª–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ props.`,
      code: `import { useInsertionEffect, useMemo } from 'react'

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID
let styleId = 0

function useDynamicStyle(cssGenerator, deps) {
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å (–æ–¥–∏–Ω —Ä–∞–∑)
  const className = useMemo(() => \`dynamic-\${styleId++}\`, [])

  // –í—Å—Ç–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
  useInsertionEffect(() => {
    const css = cssGenerator()
    const styleElement = document.createElement('style')
    styleElement.setAttribute('data-class', className)
    styleElement.textContent = \`
      .\${className} {
        \${css}
      }
    \`
    document.head.appendChild(styleElement)

    return () => {
      document.head.removeChild(styleElement)
    }
  }, deps)

  return className
}

// –ö–Ω–æ–ø–∫–∞ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Å—Ç–∏–ª—è–º–∏
function DynamicButton({ color, size, children }) {
  const className = useDynamicStyle(() => \`
    background: \${color};
    color: white;
    padding: \${size === 'large' ? '15px 30px' : '10px 20px'};
    font-size: \${size === 'large' ? '1.2em' : '1em'};
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s;

    &:hover {
      opacity: 0.8;
      transform: scale(1.05);
    }
  \`, [color, size])

  return <button className={className}>{children}</button>
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
function App() {
  const [color, setColor] = useState('#667eea')

  return (
    <div>
      <DynamicButton color={color} size="large">
        –ë–æ–ª—å—à–∞—è –∫–Ω–æ–ø–∫–∞
      </DynamicButton>

      <DynamicButton color="#10b981" size="small">
        –ú–∞–ª–µ–Ω—å–∫–∞—è –∫–Ω–æ–ø–∫–∞
      </DynamicButton>

      <input
        type="color"
        value={color}
        onChange={(e) => setColor(e.target.value)}
      />
    </div>
  )
}

// –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ color:
// 1. useInsertionEffect —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–π <style>
// 2. –°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π <style> —Å –Ω–æ–≤—ã–º —Ü–≤–µ—Ç–æ–º
// 3. React –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É
// 4. –ë—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å –Ω–æ–≤—ã–º —Ü–≤–µ—Ç–æ–º ‚úÖ
// –í—Å—ë –±–µ–∑ FOUC!`
    },
    {
      title: '‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è useInsertionEffect',
      description: '–ß—Ç–æ –º–æ–∂–Ω–æ –∏ —á–µ–≥–æ –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å',
      content: `**–ß—Ç–æ –ù–ï–õ–¨–ó–Ø –¥–µ–ª–∞—Ç—å –≤ useInsertionEffect:**

1. ‚ùå –ß–∏—Ç–∞—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å DOM
   ‚Ä¢ DOM –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω!
   ‚Ä¢ refs.current = null

2. ‚ùå –û–±–Ω–æ–≤–ª—è—Ç—å state
   ‚Ä¢ setState –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
   ‚Ä¢ –ú–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª

3. ‚ùå –î–µ–ª–∞—Ç—å side effects
   ‚Ä¢ –ó–∞–ø—Ä–æ—Å—ã –∫ API
   ‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
   ‚Ä¢ localStorage

**–ß—Ç–æ –ú–û–ñ–ù–û –¥–µ–ª–∞—Ç—å:**

‚úÖ –í—Å—Ç–∞–≤–ª—è—Ç—å <style> –≤ <head>
‚úÖ –ß–∏—Ç–∞—Ç—å props –∏ state (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
‚úÖ Cleanup (—É–¥–∞–ª—è—Ç—å <style>)

**–ü—Ä–∞–≤–∏–ª–æ:**
–ï—Å–ª–∏ –Ω–µ –ø–∏—à–µ—à—å CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫—É - –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç —Ö—É–∫!`,
      code: `function Component({ color }) {
  const ref = useRef(null)
  const [count, setCount] = useState(0)

  useInsertionEffect(() => {
    // ‚úÖ –ú–û–ñ–ù–û: –í—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∏–ª–∏
    const style = document.createElement('style')
    style.textContent = \`.my-class { color: \${color}; }\`
    document.head.appendChild(style)

    // ‚úÖ –ú–û–ñ–ù–û: –ß–∏—Ç–∞—Ç—å props
    console.log('Color:', color)

    // ‚úÖ –ú–û–ñ–ù–û: Cleanup
    return () => {
      document.head.removeChild(style)
    }

    // ‚ùå –ù–ï–õ–¨–ó–Ø: –ß–∏—Ç–∞—Ç—å DOM
    // console.log(ref.current) // null! DOM –µ—â—ë –Ω–µ—Ç

    // ‚ùå –ù–ï–õ–¨–ó–Ø: –û–±–Ω–æ–≤–ª—è—Ç—å state
    // setCount(count + 1) // –ú–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª!

    // ‚ùå –ù–ï–õ–¨–ó–Ø: Side effects
    // fetch('/api/data') // –ò—Å–ø–æ–ª—å–∑—É–π useEffect!

    // ‚ùå –ù–ï–õ–¨–ó–Ø: –†–∞–±–æ—Ç–∞—Ç—å —Å DOM
    // document.body.style.background = 'red' // –ò—Å–ø–æ–ª—å–∑—É–π useLayoutEffect!
  }, [color])

  return <div ref={ref}>Count: {count}</div>
}

// –ó–æ–ª–æ—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ:
// useInsertionEffect –¢–û–õ–¨–ö–û –¥–ª—è <style> —Ç–µ–≥–æ–≤!
// –î–ª—è –≤—Å–µ–≥–æ –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π useEffect –∏–ª–∏ useLayoutEffect`
    },
    {
      title: '‚ùå –ö–æ–≥–¥–∞ –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å',
      description: 'useInsertionEffect –Ω–µ –Ω—É–∂–µ–Ω –æ–±—ã—á–Ω—ã–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º',
      content: `**99.9% —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º —ç—Ç–æ—Ç —Ö—É–∫ –ù–ï –Ω—É–∂–µ–Ω!**

**–ù–ï –∏—Å–ø–æ–ª—å–∑—É–π useInsertionEffect –µ—Å–ª–∏:**

1. ‚ùå –¢—ã –ù–ï –ø–∏—à–µ—à—å CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫—É
2. ‚ùå –ò—Å–ø–æ–ª—å–∑—É–µ—à—å –≥–æ—Ç–æ–≤—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É (styled-components, emotion)
   ‚Ä¢ –û–Ω–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç useInsertionEffect –≤–Ω—É—Ç—Ä–∏!
3. ‚ùå –ù—É–∂–Ω—ã –æ–±—ã—á–Ω—ã–µ side effects
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π useEffect
4. ‚ùå –ù—É–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å DOM/layout
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π useLayoutEffect
5. ‚ùå –ò—Å–ø–æ–ª—å–∑—É–µ—à—å –æ–±—ã—á–Ω—ã–π CSS/SCSS/CSS modules
   ‚Ä¢ –í–æ–æ–±—â–µ –Ω–µ –Ω—É–∂–Ω—ã —Ö—É–∫–∏ –¥–ª—è —Å—Ç–∏–ª–µ–π

**–ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –µ—Å–ª–∏:**

‚úÖ –ü–∏—à–µ—à—å —Å–≤–æ—é CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫—É
‚úÖ –°–æ–∑–¥–∞—ë—à—å —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å—Ç–∏–ª–µ–π
‚úÖ –ù—É–∂–Ω–∞ –∏–Ω—ä–µ–∫—Ü–∏—è <style> –î–û —Å–æ–∑–¥–∞–Ω–∏—è DOM

**–î–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞–¥–∞—á:**
‚Ä¢ –°—Ç–∏–ª–∏ ‚Üí CSS modules / Tailwind / –æ–±—ã—á–Ω—ã–π CSS
‚Ä¢ Side effects ‚Üí useEffect
‚Ä¢ DOM –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ ‚Üí useLayoutEffect
‚Ä¢ State ‚Üí useState / useReducer`,
      code: `// ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û: –û–±—ã—á–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç useInsertionEffect
function MyComponent() {
  useInsertionEffect(() => {
    // –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω–ª–∞–π–Ω —Å—Ç–∏–ª–∏
    const style = document.createElement('style')
    style.textContent = '.my-button { background: blue; }'
    document.head.appendChild(style)
  }, [])

  return <button className="my-button">Click</button>
}

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π CSS modules
import styles from './MyComponent.module.css'

function MyComponent() {
  return <button className={styles.button}>Click</button>
}

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π styled-components
import styled from 'styled-components'

const Button = styled.button\`
  background: blue;
  color: white;
\`

function MyComponent() {
  return <Button>Click</Button>
}
// styled-components –∏—Å–ø–æ–ª—å–∑—É–µ—Ç useInsertionEffect –≤–Ω—É—Ç—Ä–∏! ‚úÖ

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π Tailwind
function MyComponent() {
  return (
    <button className="bg-blue-500 text-white px-4 py-2">
      Click
    </button>
  )
}

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –î–ª—è side effects –∏—Å–ø–æ–ª—å–∑—É–π useEffect
function MyComponent() {
  useEffect(() => {
    // –ó–∞–ø—Ä–æ—Å—ã, –ø–æ–¥–ø–∏—Å–∫–∏, –∏ —Ç.–¥.
    fetch('/api/data')
  }, [])
}

// –í—ã–≤–æ–¥:
// useInsertionEffect - —ç—Ç–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ö–∞–Ω–∏–∑–º –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫
// –û–±—ã—á–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –µ–≥–æ –ù–ï –∏—Å–ø–æ–ª—å–∑—É—é—Ç!`
    }
  ]

  return (
    <div style={{ padding: '40px', maxWidth: '1200px', margin: '0 auto' }}>
      <h1 style={{
        fontSize: '3em',
        textAlign: 'center',
        color: '#61dafb',
        marginBottom: '40px'
      }}>
        üíÖ useInsertionEffect
      </h1>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º */}
      <div style={{
        display: 'flex',
        gap: '10px',
        marginBottom: '30px',
        flexWrap: 'wrap',
        justifyContent: 'center'
      }}>
        {steps.map((step, idx) => (
          <button
            key={idx}
            onClick={() => setActiveStep(idx)}
            style={{
              padding: '12px 20px',
              fontSize: '0.9em',
              backgroundColor: activeStep === idx ? '#f59e0b' : '#f5f5f5',
              color: activeStep === idx ? 'white' : '#333',
              border: `2px solid ${activeStep === idx ? '#f59e0b' : '#ddd'}`,
              borderRadius: '8px',
              cursor: 'pointer',
              fontWeight: activeStep === idx ? 'bold' : 'normal',
              transition: 'all 0.3s ease',
              flex: '1 1 180px'
            }}
          >
            –®–∞–≥ {idx + 1}
          </button>
        ))}
      </div>

      {/* –¢–µ–∫—É—â–∏–π —à–∞–≥ */}
      <div style={{
        background: 'white',
        border: '3px solid #f59e0b',
        borderRadius: '20px',
        padding: '30px',
        boxShadow: '0 8px 24px rgba(0,0,0,0.15)'
      }}>
        <h2 style={{
          color: '#f59e0b',
          marginTop: 0,
          fontSize: '2em',
          marginBottom: '10px'
        }}>
          {steps[activeStep].title}
        </h2>

        <p style={{
          fontSize: '1.2em',
          color: '#666',
          fontStyle: 'italic',
          marginBottom: '20px'
        }}>
          {steps[activeStep].description}
        </p>

        <div style={{
          fontSize: '1.1em',
          lineHeight: '1.8',
          whiteSpace: 'pre-line',
          marginBottom: '20px'
        }}>
          {steps[activeStep].content}
        </div>

        {steps[activeStep].code && (
          <>
            <h3 style={{ color: '#f59e0b', fontSize: '1.4em' }}>
              üíª –ö–æ–¥:
            </h3>
            <pre style={{
              background: '#263238',
              color: '#aed581',
              padding: '20px',
              borderRadius: '10px',
              fontSize: '0.9em',
              overflow: 'auto',
              lineHeight: '1.6',
              margin: 0
            }}>
              {steps[activeStep].code}
            </pre>
          </>
        )}
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div style={{
        marginTop: '30px',
        textAlign: 'center',
        color: '#666',
        fontSize: '1.1em'
      }}>
        –®–∞–≥ {activeStep + 1} –∏–∑ {steps.length}
      </div>

      {/* –ò—Ç–æ–≥–æ–≤–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ */}
      {activeStep === steps.length - 1 && (
        <div style={{
          marginTop: '30px',
          background: '#fee2e2',
          border: '3px solid #ef4444',
          borderRadius: '15px',
          padding: '25px',
          textAlign: 'center'
        }}>
          <h3 style={{ color: '#dc2626', marginTop: 0, fontSize: '1.5em' }}>
            ‚ö†Ô∏è –í–∞–∂–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
          </h3>
          <p style={{ fontSize: '1.2em', lineHeight: '1.8', margin: 0 }}>
            <strong>99.9% —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º —ç—Ç–æ—Ç —Ö—É–∫ –ù–ï –Ω—É–∂–µ–Ω!</strong><br />
            –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–∏—à–µ—à—å CSS-in-JS –±–∏–±–ª–∏–æ—Ç–µ–∫—É.<br />
            –î–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π useEffect –∏–ª–∏ useLayoutEffect.
          </p>
        </div>
      )}
    </div>
  )
}

export default Slide14UseInsertionEffect